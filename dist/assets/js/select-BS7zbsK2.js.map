{"version":3,"file":"select-BS7zbsK2.js","sources":["../../../node_modules/@radix-ui/react-select/dist/index.mjs","../../../node_modules/@radix-ui/react-use-previous/dist/index.mjs","../../../src/components/ui/select.tsx"],"sourcesContent":["\"use client\";\n\n// src/select.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { DismissableLayer } from \"@radix-ui/react-dismissable-layer\";\nimport { useFocusGuards } from \"@radix-ui/react-focus-guards\";\nimport { FocusScope } from \"@radix-ui/react-focus-scope\";\nimport { useId } from \"@radix-ui/react-id\";\nimport * as PopperPrimitive from \"@radix-ui/react-popper\";\nimport { createPopperScope } from \"@radix-ui/react-popper\";\nimport { Portal as PortalPrimitive } from \"@radix-ui/react-portal\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { usePrevious } from \"@radix-ui/react-use-previous\";\nimport { VISUALLY_HIDDEN_STYLES } from \"@radix-ui/react-visually-hidden\";\nimport { hideOthers } from \"aria-hidden\";\nimport { RemoveScroll } from \"react-remove-scroll\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar OPEN_KEYS = [\" \", \"Enter\", \"ArrowUp\", \"ArrowDown\"];\nvar SELECTION_KEYS = [\" \", \"Enter\"];\nvar SELECT_NAME = \"Select\";\nvar [Collection, useCollection, createCollectionScope] = createCollection(SELECT_NAME);\nvar [createSelectContext, createSelectScope] = createContextScope(SELECT_NAME, [\n  createCollectionScope,\n  createPopperScope\n]);\nvar usePopperScope = createPopperScope();\nvar [SelectProvider, useSelectContext] = createSelectContext(SELECT_NAME);\nvar [SelectNativeOptionsProvider, useSelectNativeOptionsContext] = createSelectContext(SELECT_NAME);\nvar Select = (props) => {\n  const {\n    __scopeSelect,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    value: valueProp,\n    defaultValue,\n    onValueChange,\n    dir,\n    name,\n    autoComplete,\n    disabled,\n    required,\n    form\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  const [trigger, setTrigger] = React.useState(null);\n  const [valueNode, setValueNode] = React.useState(null);\n  const [valueNodeHasChildren, setValueNodeHasChildren] = React.useState(false);\n  const direction = useDirection(dir);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: SELECT_NAME\n  });\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange,\n    caller: SELECT_NAME\n  });\n  const triggerPointerDownPosRef = React.useRef(null);\n  const isFormControl = trigger ? form || !!trigger.closest(\"form\") : true;\n  const [nativeOptionsSet, setNativeOptionsSet] = React.useState(/* @__PURE__ */ new Set());\n  const nativeSelectKey = Array.from(nativeOptionsSet).map((option) => option.props.value).join(\";\");\n  return /* @__PURE__ */ jsx(PopperPrimitive.Root, { ...popperScope, children: /* @__PURE__ */ jsxs(\n    SelectProvider,\n    {\n      required,\n      scope: __scopeSelect,\n      trigger,\n      onTriggerChange: setTrigger,\n      valueNode,\n      onValueNodeChange: setValueNode,\n      valueNodeHasChildren,\n      onValueNodeHasChildrenChange: setValueNodeHasChildren,\n      contentId: useId(),\n      value,\n      onValueChange: setValue,\n      open,\n      onOpenChange: setOpen,\n      dir: direction,\n      triggerPointerDownPosRef,\n      disabled,\n      children: [\n        /* @__PURE__ */ jsx(Collection.Provider, { scope: __scopeSelect, children: /* @__PURE__ */ jsx(\n          SelectNativeOptionsProvider,\n          {\n            scope: props.__scopeSelect,\n            onNativeOptionAdd: React.useCallback((option) => {\n              setNativeOptionsSet((prev) => new Set(prev).add(option));\n            }, []),\n            onNativeOptionRemove: React.useCallback((option) => {\n              setNativeOptionsSet((prev) => {\n                const optionsSet = new Set(prev);\n                optionsSet.delete(option);\n                return optionsSet;\n              });\n            }, []),\n            children\n          }\n        ) }),\n        isFormControl ? /* @__PURE__ */ jsxs(\n          SelectBubbleInput,\n          {\n            \"aria-hidden\": true,\n            required,\n            tabIndex: -1,\n            name,\n            autoComplete,\n            value,\n            onChange: (event) => setValue(event.target.value),\n            disabled,\n            form,\n            children: [\n              value === void 0 ? /* @__PURE__ */ jsx(\"option\", { value: \"\" }) : null,\n              Array.from(nativeOptionsSet)\n            ]\n          },\n          nativeSelectKey\n        ) : null\n      ]\n    }\n  ) });\n};\nSelect.displayName = SELECT_NAME;\nvar TRIGGER_NAME = \"SelectTrigger\";\nvar SelectTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, disabled = false, ...triggerProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(TRIGGER_NAME, __scopeSelect);\n    const isDisabled = context.disabled || disabled;\n    const composedRefs = useComposedRefs(forwardedRef, context.onTriggerChange);\n    const getItems = useCollection(__scopeSelect);\n    const pointerTypeRef = React.useRef(\"touch\");\n    const [searchRef, handleTypeaheadSearch, resetTypeahead] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.value === context.value);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem !== void 0) {\n        context.onValueChange(nextItem.value);\n      }\n    });\n    const handleOpen = (pointerEvent) => {\n      if (!isDisabled) {\n        context.onOpenChange(true);\n        resetTypeahead();\n      }\n      if (pointerEvent) {\n        context.triggerPointerDownPosRef.current = {\n          x: Math.round(pointerEvent.pageX),\n          y: Math.round(pointerEvent.pageY)\n        };\n      }\n    };\n    return /* @__PURE__ */ jsx(PopperPrimitive.Anchor, { asChild: true, ...popperScope, children: /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        role: \"combobox\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open,\n        \"aria-required\": context.required,\n        \"aria-autocomplete\": \"none\",\n        dir: context.dir,\n        \"data-state\": context.open ? \"open\" : \"closed\",\n        disabled: isDisabled,\n        \"data-disabled\": isDisabled ? \"\" : void 0,\n        \"data-placeholder\": shouldShowPlaceholder(context.value) ? \"\" : void 0,\n        ...triggerProps,\n        ref: composedRefs,\n        onClick: composeEventHandlers(triggerProps.onClick, (event) => {\n          event.currentTarget.focus();\n          if (pointerTypeRef.current !== \"mouse\") {\n            handleOpen(event);\n          }\n        }),\n        onPointerDown: composeEventHandlers(triggerProps.onPointerDown, (event) => {\n          pointerTypeRef.current = event.pointerType;\n          const target = event.target;\n          if (target.hasPointerCapture(event.pointerId)) {\n            target.releasePointerCapture(event.pointerId);\n          }\n          if (event.button === 0 && event.ctrlKey === false && event.pointerType === \"mouse\") {\n            handleOpen(event);\n            event.preventDefault();\n          }\n        }),\n        onKeyDown: composeEventHandlers(triggerProps.onKeyDown, (event) => {\n          const isTypingAhead = searchRef.current !== \"\";\n          const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n          if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n          if (isTypingAhead && event.key === \" \") return;\n          if (OPEN_KEYS.includes(event.key)) {\n            handleOpen();\n            event.preventDefault();\n          }\n        })\n      }\n    ) });\n  }\n);\nSelectTrigger.displayName = TRIGGER_NAME;\nvar VALUE_NAME = \"SelectValue\";\nvar SelectValue = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, className, style, children, placeholder = \"\", ...valueProps } = props;\n    const context = useSelectContext(VALUE_NAME, __scopeSelect);\n    const { onValueNodeHasChildrenChange } = context;\n    const hasChildren = children !== void 0;\n    const composedRefs = useComposedRefs(forwardedRef, context.onValueNodeChange);\n    useLayoutEffect(() => {\n      onValueNodeHasChildrenChange(hasChildren);\n    }, [onValueNodeHasChildrenChange, hasChildren]);\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        ...valueProps,\n        ref: composedRefs,\n        style: { pointerEvents: \"none\" },\n        children: shouldShowPlaceholder(context.value) ? /* @__PURE__ */ jsx(Fragment, { children: placeholder }) : children\n      }\n    );\n  }\n);\nSelectValue.displayName = VALUE_NAME;\nvar ICON_NAME = \"SelectIcon\";\nvar SelectIcon = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, children, ...iconProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.span, { \"aria-hidden\": true, ...iconProps, ref: forwardedRef, children: children || \"\\u25BC\" });\n  }\n);\nSelectIcon.displayName = ICON_NAME;\nvar PORTAL_NAME = \"SelectPortal\";\nvar SelectPortal = (props) => {\n  return /* @__PURE__ */ jsx(PortalPrimitive, { asChild: true, ...props });\n};\nSelectPortal.displayName = PORTAL_NAME;\nvar CONTENT_NAME = \"SelectContent\";\nvar SelectContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const context = useSelectContext(CONTENT_NAME, props.__scopeSelect);\n    const [fragment, setFragment] = React.useState();\n    useLayoutEffect(() => {\n      setFragment(new DocumentFragment());\n    }, []);\n    if (!context.open) {\n      const frag = fragment;\n      return frag ? ReactDOM.createPortal(\n        /* @__PURE__ */ jsx(SelectContentProvider, { scope: props.__scopeSelect, children: /* @__PURE__ */ jsx(Collection.Slot, { scope: props.__scopeSelect, children: /* @__PURE__ */ jsx(\"div\", { children: props.children }) }) }),\n        frag\n      ) : null;\n    }\n    return /* @__PURE__ */ jsx(SelectContentImpl, { ...props, ref: forwardedRef });\n  }\n);\nSelectContent.displayName = CONTENT_NAME;\nvar CONTENT_MARGIN = 10;\nvar [SelectContentProvider, useSelectContentContext] = createSelectContext(CONTENT_NAME);\nvar CONTENT_IMPL_NAME = \"SelectContentImpl\";\nvar Slot = createSlot(\"SelectContent.RemoveScroll\");\nvar SelectContentImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSelect,\n      position = \"item-aligned\",\n      onCloseAutoFocus,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      //\n      // PopperContent props\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions,\n      //\n      ...contentProps\n    } = props;\n    const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n    const [content, setContent] = React.useState(null);\n    const [viewport, setViewport] = React.useState(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n    const [selectedItem, setSelectedItem] = React.useState(null);\n    const [selectedItemText, setSelectedItemText] = React.useState(\n      null\n    );\n    const getItems = useCollection(__scopeSelect);\n    const [isPositioned, setIsPositioned] = React.useState(false);\n    const firstValidItemFoundRef = React.useRef(false);\n    React.useEffect(() => {\n      if (content) return hideOthers(content);\n    }, [content]);\n    useFocusGuards();\n    const focusFirst = React.useCallback(\n      (candidates) => {\n        const [firstItem, ...restItems] = getItems().map((item) => item.ref.current);\n        const [lastItem] = restItems.slice(-1);\n        const PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;\n        for (const candidate of candidates) {\n          if (candidate === PREVIOUSLY_FOCUSED_ELEMENT) return;\n          candidate?.scrollIntoView({ block: \"nearest\" });\n          if (candidate === firstItem && viewport) viewport.scrollTop = 0;\n          if (candidate === lastItem && viewport) viewport.scrollTop = viewport.scrollHeight;\n          candidate?.focus();\n          if (document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT) return;\n        }\n      },\n      [getItems, viewport]\n    );\n    const focusSelectedItem = React.useCallback(\n      () => focusFirst([selectedItem, content]),\n      [focusFirst, selectedItem, content]\n    );\n    React.useEffect(() => {\n      if (isPositioned) {\n        focusSelectedItem();\n      }\n    }, [isPositioned, focusSelectedItem]);\n    const { onOpenChange, triggerPointerDownPosRef } = context;\n    React.useEffect(() => {\n      if (content) {\n        let pointerMoveDelta = { x: 0, y: 0 };\n        const handlePointerMove = (event) => {\n          pointerMoveDelta = {\n            x: Math.abs(Math.round(event.pageX) - (triggerPointerDownPosRef.current?.x ?? 0)),\n            y: Math.abs(Math.round(event.pageY) - (triggerPointerDownPosRef.current?.y ?? 0))\n          };\n        };\n        const handlePointerUp = (event) => {\n          if (pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10) {\n            event.preventDefault();\n          } else {\n            if (!content.contains(event.target)) {\n              onOpenChange(false);\n            }\n          }\n          document.removeEventListener(\"pointermove\", handlePointerMove);\n          triggerPointerDownPosRef.current = null;\n        };\n        if (triggerPointerDownPosRef.current !== null) {\n          document.addEventListener(\"pointermove\", handlePointerMove);\n          document.addEventListener(\"pointerup\", handlePointerUp, { capture: true, once: true });\n        }\n        return () => {\n          document.removeEventListener(\"pointermove\", handlePointerMove);\n          document.removeEventListener(\"pointerup\", handlePointerUp, { capture: true });\n        };\n      }\n    }, [content, onOpenChange, triggerPointerDownPosRef]);\n    React.useEffect(() => {\n      const close = () => onOpenChange(false);\n      window.addEventListener(\"blur\", close);\n      window.addEventListener(\"resize\", close);\n      return () => {\n        window.removeEventListener(\"blur\", close);\n        window.removeEventListener(\"resize\", close);\n      };\n    }, [onOpenChange]);\n    const [searchRef, handleTypeaheadSearch] = useTypeaheadSearch((search) => {\n      const enabledItems = getItems().filter((item) => !item.disabled);\n      const currentItem = enabledItems.find((item) => item.ref.current === document.activeElement);\n      const nextItem = findNextItem(enabledItems, search, currentItem);\n      if (nextItem) {\n        setTimeout(() => nextItem.ref.current.focus());\n      }\n    });\n    const itemRefCallback = React.useCallback(\n      (node, value, disabled) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== void 0 && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItem(node);\n          if (isFirstValidItem) firstValidItemFoundRef.current = true;\n        }\n      },\n      [context.value]\n    );\n    const handleItemLeave = React.useCallback(() => content?.focus(), [content]);\n    const itemTextRefCallback = React.useCallback(\n      (node, value, disabled) => {\n        const isFirstValidItem = !firstValidItemFoundRef.current && !disabled;\n        const isSelectedItem = context.value !== void 0 && context.value === value;\n        if (isSelectedItem || isFirstValidItem) {\n          setSelectedItemText(node);\n        }\n      },\n      [context.value]\n    );\n    const SelectPosition = position === \"popper\" ? SelectPopperPosition : SelectItemAlignedPosition;\n    const popperContentProps = SelectPosition === SelectPopperPosition ? {\n      side,\n      sideOffset,\n      align,\n      alignOffset,\n      arrowPadding,\n      collisionBoundary,\n      collisionPadding,\n      sticky,\n      hideWhenDetached,\n      avoidCollisions\n    } : {};\n    return /* @__PURE__ */ jsx(\n      SelectContentProvider,\n      {\n        scope: __scopeSelect,\n        content,\n        viewport,\n        onViewportChange: setViewport,\n        itemRefCallback,\n        selectedItem,\n        onItemLeave: handleItemLeave,\n        itemTextRefCallback,\n        focusSelectedItem,\n        selectedItemText,\n        position,\n        isPositioned,\n        searchRef,\n        children: /* @__PURE__ */ jsx(RemoveScroll, { as: Slot, allowPinchZoom: true, children: /* @__PURE__ */ jsx(\n          FocusScope,\n          {\n            asChild: true,\n            trapped: context.open,\n            onMountAutoFocus: (event) => {\n              event.preventDefault();\n            },\n            onUnmountAutoFocus: composeEventHandlers(onCloseAutoFocus, (event) => {\n              context.trigger?.focus({ preventScroll: true });\n              event.preventDefault();\n            }),\n            children: /* @__PURE__ */ jsx(\n              DismissableLayer,\n              {\n                asChild: true,\n                disableOutsidePointerEvents: true,\n                onEscapeKeyDown,\n                onPointerDownOutside,\n                onFocusOutside: (event) => event.preventDefault(),\n                onDismiss: () => context.onOpenChange(false),\n                children: /* @__PURE__ */ jsx(\n                  SelectPosition,\n                  {\n                    role: \"listbox\",\n                    id: context.contentId,\n                    \"data-state\": context.open ? \"open\" : \"closed\",\n                    dir: context.dir,\n                    onContextMenu: (event) => event.preventDefault(),\n                    ...contentProps,\n                    ...popperContentProps,\n                    onPlaced: () => setIsPositioned(true),\n                    ref: composedRefs,\n                    style: {\n                      // flex layout so we can place the scroll buttons properly\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      // reset the outline by default as the content MAY get focused\n                      outline: \"none\",\n                      ...contentProps.style\n                    },\n                    onKeyDown: composeEventHandlers(contentProps.onKeyDown, (event) => {\n                      const isModifierKey = event.ctrlKey || event.altKey || event.metaKey;\n                      if (event.key === \"Tab\") event.preventDefault();\n                      if (!isModifierKey && event.key.length === 1) handleTypeaheadSearch(event.key);\n                      if ([\"ArrowUp\", \"ArrowDown\", \"Home\", \"End\"].includes(event.key)) {\n                        const items = getItems().filter((item) => !item.disabled);\n                        let candidateNodes = items.map((item) => item.ref.current);\n                        if ([\"ArrowUp\", \"End\"].includes(event.key)) {\n                          candidateNodes = candidateNodes.slice().reverse();\n                        }\n                        if ([\"ArrowUp\", \"ArrowDown\"].includes(event.key)) {\n                          const currentElement = event.target;\n                          const currentIndex = candidateNodes.indexOf(currentElement);\n                          candidateNodes = candidateNodes.slice(currentIndex + 1);\n                        }\n                        setTimeout(() => focusFirst(candidateNodes));\n                        event.preventDefault();\n                      }\n                    })\n                  }\n                )\n              }\n            )\n          }\n        ) })\n      }\n    );\n  }\n);\nSelectContentImpl.displayName = CONTENT_IMPL_NAME;\nvar ITEM_ALIGNED_POSITION_NAME = \"SelectItemAlignedPosition\";\nvar SelectItemAlignedPosition = React.forwardRef((props, forwardedRef) => {\n  const { __scopeSelect, onPlaced, ...popperProps } = props;\n  const context = useSelectContext(CONTENT_NAME, __scopeSelect);\n  const contentContext = useSelectContentContext(CONTENT_NAME, __scopeSelect);\n  const [contentWrapper, setContentWrapper] = React.useState(null);\n  const [content, setContent] = React.useState(null);\n  const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n  const getItems = useCollection(__scopeSelect);\n  const shouldExpandOnScrollRef = React.useRef(false);\n  const shouldRepositionRef = React.useRef(true);\n  const { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext;\n  const position = React.useCallback(() => {\n    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {\n      const triggerRect = context.trigger.getBoundingClientRect();\n      const contentRect = content.getBoundingClientRect();\n      const valueNodeRect = context.valueNode.getBoundingClientRect();\n      const itemTextRect = selectedItemText.getBoundingClientRect();\n      if (context.dir !== \"rtl\") {\n        const itemTextOffset = itemTextRect.left - contentRect.left;\n        const left = valueNodeRect.left - itemTextOffset;\n        const leftDelta = triggerRect.left - left;\n        const minContentWidth = triggerRect.width + leftDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const rightEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedLeft = clamp(left, [\n          CONTENT_MARGIN,\n          // Prevents the content from going off the starting edge of the\n          // viewport. It may still go off the ending edge, but this can be\n          // controlled by the user since they may want to manage overflow in a\n          // specific way.\n          // https://github.com/radix-ui/primitives/issues/2049\n          Math.max(CONTENT_MARGIN, rightEdge - contentWidth)\n        ]);\n        contentWrapper.style.minWidth = minContentWidth + \"px\";\n        contentWrapper.style.left = clampedLeft + \"px\";\n      } else {\n        const itemTextOffset = contentRect.right - itemTextRect.right;\n        const right = window.innerWidth - valueNodeRect.right - itemTextOffset;\n        const rightDelta = window.innerWidth - triggerRect.right - right;\n        const minContentWidth = triggerRect.width + rightDelta;\n        const contentWidth = Math.max(minContentWidth, contentRect.width);\n        const leftEdge = window.innerWidth - CONTENT_MARGIN;\n        const clampedRight = clamp(right, [\n          CONTENT_MARGIN,\n          Math.max(CONTENT_MARGIN, leftEdge - contentWidth)\n        ]);\n        contentWrapper.style.minWidth = minContentWidth + \"px\";\n        contentWrapper.style.right = clampedRight + \"px\";\n      }\n      const items = getItems();\n      const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n      const itemsHeight = viewport.scrollHeight;\n      const contentStyles = window.getComputedStyle(content);\n      const contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10);\n      const contentPaddingTop = parseInt(contentStyles.paddingTop, 10);\n      const contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10);\n      const contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10);\n      const fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth;\n      const minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight);\n      const viewportStyles = window.getComputedStyle(viewport);\n      const viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10);\n      const viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10);\n      const topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - CONTENT_MARGIN;\n      const triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle;\n      const selectedItemHalfHeight = selectedItem.offsetHeight / 2;\n      const itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight;\n      const contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle;\n      const itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;\n      const willAlignWithoutTopOverflow = contentTopToItemMiddle <= topEdgeToTriggerMiddle;\n      if (willAlignWithoutTopOverflow) {\n        const isLastItem = items.length > 0 && selectedItem === items[items.length - 1].ref.current;\n        contentWrapper.style.bottom = \"0px\";\n        const viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight;\n        const clampedTriggerMiddleToBottomEdge = Math.max(\n          triggerMiddleToBottomEdge,\n          selectedItemHalfHeight + // viewport might have padding bottom, include it to avoid a scrollable viewport\n          (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth\n        );\n        const height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;\n        contentWrapper.style.height = height + \"px\";\n      } else {\n        const isFirstItem = items.length > 0 && selectedItem === items[0].ref.current;\n        contentWrapper.style.top = \"0px\";\n        const clampedTopEdgeToTriggerMiddle = Math.max(\n          topEdgeToTriggerMiddle,\n          contentBorderTopWidth + viewport.offsetTop + // viewport might have padding top, include it to avoid a scrollable viewport\n          (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight\n        );\n        const height = clampedTopEdgeToTriggerMiddle + itemMiddleToContentBottom;\n        contentWrapper.style.height = height + \"px\";\n        viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;\n      }\n      contentWrapper.style.margin = `${CONTENT_MARGIN}px 0`;\n      contentWrapper.style.minHeight = minContentHeight + \"px\";\n      contentWrapper.style.maxHeight = availableHeight + \"px\";\n      onPlaced?.();\n      requestAnimationFrame(() => shouldExpandOnScrollRef.current = true);\n    }\n  }, [\n    getItems,\n    context.trigger,\n    context.valueNode,\n    contentWrapper,\n    content,\n    viewport,\n    selectedItem,\n    selectedItemText,\n    context.dir,\n    onPlaced\n  ]);\n  useLayoutEffect(() => position(), [position]);\n  const [contentZIndex, setContentZIndex] = React.useState();\n  useLayoutEffect(() => {\n    if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n  }, [content]);\n  const handleScrollButtonChange = React.useCallback(\n    (node) => {\n      if (node && shouldRepositionRef.current === true) {\n        position();\n        focusSelectedItem?.();\n        shouldRepositionRef.current = false;\n      }\n    },\n    [position, focusSelectedItem]\n  );\n  return /* @__PURE__ */ jsx(\n    SelectViewportProvider,\n    {\n      scope: __scopeSelect,\n      contentWrapper,\n      shouldExpandOnScrollRef,\n      onScrollButtonChange: handleScrollButtonChange,\n      children: /* @__PURE__ */ jsx(\n        \"div\",\n        {\n          ref: setContentWrapper,\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            position: \"fixed\",\n            zIndex: contentZIndex\n          },\n          children: /* @__PURE__ */ jsx(\n            Primitive.div,\n            {\n              ...popperProps,\n              ref: composedRefs,\n              style: {\n                // When we get the height of the content, it includes borders. If we were to set\n                // the height without having `boxSizing: 'border-box'` it would be too big.\n                boxSizing: \"border-box\",\n                // We need to ensure the content doesn't get taller than the wrapper\n                maxHeight: \"100%\",\n                ...popperProps.style\n              }\n            }\n          )\n        }\n      )\n    }\n  );\n});\nSelectItemAlignedPosition.displayName = ITEM_ALIGNED_POSITION_NAME;\nvar POPPER_POSITION_NAME = \"SelectPopperPosition\";\nvar SelectPopperPosition = React.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeSelect,\n    align = \"start\",\n    collisionPadding = CONTENT_MARGIN,\n    ...popperProps\n  } = props;\n  const popperScope = usePopperScope(__scopeSelect);\n  return /* @__PURE__ */ jsx(\n    PopperPrimitive.Content,\n    {\n      ...popperScope,\n      ...popperProps,\n      ref: forwardedRef,\n      align,\n      collisionPadding,\n      style: {\n        // Ensure border-box for floating-ui calculations\n        boxSizing: \"border-box\",\n        ...popperProps.style,\n        // re-namespace exposed content custom properties\n        ...{\n          \"--radix-select-content-transform-origin\": \"var(--radix-popper-transform-origin)\",\n          \"--radix-select-content-available-width\": \"var(--radix-popper-available-width)\",\n          \"--radix-select-content-available-height\": \"var(--radix-popper-available-height)\",\n          \"--radix-select-trigger-width\": \"var(--radix-popper-anchor-width)\",\n          \"--radix-select-trigger-height\": \"var(--radix-popper-anchor-height)\"\n        }\n      }\n    }\n  );\n});\nSelectPopperPosition.displayName = POPPER_POSITION_NAME;\nvar [SelectViewportProvider, useSelectViewportContext] = createSelectContext(CONTENT_NAME, {});\nvar VIEWPORT_NAME = \"SelectViewport\";\nvar SelectViewport = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, nonce, ...viewportProps } = props;\n    const contentContext = useSelectContentContext(VIEWPORT_NAME, __scopeSelect);\n    const viewportContext = useSelectViewportContext(VIEWPORT_NAME, __scopeSelect);\n    const composedRefs = useComposedRefs(forwardedRef, contentContext.onViewportChange);\n    const prevScrollTopRef = React.useRef(0);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeSelect, children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-select-viewport\": \"\",\n          role: \"presentation\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            // we use position: 'relative' here on the `viewport` so that when we call\n            // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport\n            // (independent of the scrollUpButton).\n            position: \"relative\",\n            flex: 1,\n            // Viewport should only be scrollable in the vertical direction.\n            // This won't work in vertical writing modes, so we'll need to\n            // revisit this if/when that is supported\n            // https://developer.chrome.com/blog/vertical-form-controls\n            overflow: \"hidden auto\",\n            ...viewportProps.style\n          },\n          onScroll: composeEventHandlers(viewportProps.onScroll, (event) => {\n            const viewport = event.currentTarget;\n            const { contentWrapper, shouldExpandOnScrollRef } = viewportContext;\n            if (shouldExpandOnScrollRef?.current && contentWrapper) {\n              const scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);\n              if (scrolledBy > 0) {\n                const availableHeight = window.innerHeight - CONTENT_MARGIN * 2;\n                const cssMinHeight = parseFloat(contentWrapper.style.minHeight);\n                const cssHeight = parseFloat(contentWrapper.style.height);\n                const prevHeight = Math.max(cssMinHeight, cssHeight);\n                if (prevHeight < availableHeight) {\n                  const nextHeight = prevHeight + scrolledBy;\n                  const clampedNextHeight = Math.min(availableHeight, nextHeight);\n                  const heightDiff = nextHeight - clampedNextHeight;\n                  contentWrapper.style.height = clampedNextHeight + \"px\";\n                  if (contentWrapper.style.bottom === \"0px\") {\n                    viewport.scrollTop = heightDiff > 0 ? heightDiff : 0;\n                    contentWrapper.style.justifyContent = \"flex-end\";\n                  }\n                }\n              }\n            }\n            prevScrollTopRef.current = viewport.scrollTop;\n          })\n        }\n      ) })\n    ] });\n  }\n);\nSelectViewport.displayName = VIEWPORT_NAME;\nvar GROUP_NAME = \"SelectGroup\";\nvar [SelectGroupContextProvider, useSelectGroupContext] = createSelectContext(GROUP_NAME);\nvar SelectGroup = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...groupProps } = props;\n    const groupId = useId();\n    return /* @__PURE__ */ jsx(SelectGroupContextProvider, { scope: __scopeSelect, id: groupId, children: /* @__PURE__ */ jsx(Primitive.div, { role: \"group\", \"aria-labelledby\": groupId, ...groupProps, ref: forwardedRef }) });\n  }\n);\nSelectGroup.displayName = GROUP_NAME;\nvar LABEL_NAME = \"SelectLabel\";\nvar SelectLabel = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...labelProps } = props;\n    const groupContext = useSelectGroupContext(LABEL_NAME, __scopeSelect);\n    return /* @__PURE__ */ jsx(Primitive.div, { id: groupContext.id, ...labelProps, ref: forwardedRef });\n  }\n);\nSelectLabel.displayName = LABEL_NAME;\nvar ITEM_NAME = \"SelectItem\";\nvar [SelectItemContextProvider, useSelectItemContext] = createSelectContext(ITEM_NAME);\nvar SelectItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeSelect,\n      value,\n      disabled = false,\n      textValue: textValueProp,\n      ...itemProps\n    } = props;\n    const context = useSelectContext(ITEM_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_NAME, __scopeSelect);\n    const isSelected = context.value === value;\n    const [textValue, setTextValue] = React.useState(textValueProp ?? \"\");\n    const [isFocused, setIsFocused] = React.useState(false);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => contentContext.itemRefCallback?.(node, value, disabled)\n    );\n    const textId = useId();\n    const pointerTypeRef = React.useRef(\"touch\");\n    const handleSelect = () => {\n      if (!disabled) {\n        context.onValueChange(value);\n        context.onOpenChange(false);\n      }\n    };\n    if (value === \"\") {\n      throw new Error(\n        \"A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.\"\n      );\n    }\n    return /* @__PURE__ */ jsx(\n      SelectItemContextProvider,\n      {\n        scope: __scopeSelect,\n        value,\n        disabled,\n        textId,\n        isSelected,\n        onItemTextChange: React.useCallback((node) => {\n          setTextValue((prevTextValue) => prevTextValue || (node?.textContent ?? \"\").trim());\n        }, []),\n        children: /* @__PURE__ */ jsx(\n          Collection.ItemSlot,\n          {\n            scope: __scopeSelect,\n            value,\n            disabled,\n            textValue,\n            children: /* @__PURE__ */ jsx(\n              Primitive.div,\n              {\n                role: \"option\",\n                \"aria-labelledby\": textId,\n                \"data-highlighted\": isFocused ? \"\" : void 0,\n                \"aria-selected\": isSelected && isFocused,\n                \"data-state\": isSelected ? \"checked\" : \"unchecked\",\n                \"aria-disabled\": disabled || void 0,\n                \"data-disabled\": disabled ? \"\" : void 0,\n                tabIndex: disabled ? void 0 : -1,\n                ...itemProps,\n                ref: composedRefs,\n                onFocus: composeEventHandlers(itemProps.onFocus, () => setIsFocused(true)),\n                onBlur: composeEventHandlers(itemProps.onBlur, () => setIsFocused(false)),\n                onClick: composeEventHandlers(itemProps.onClick, () => {\n                  if (pointerTypeRef.current !== \"mouse\") handleSelect();\n                }),\n                onPointerUp: composeEventHandlers(itemProps.onPointerUp, () => {\n                  if (pointerTypeRef.current === \"mouse\") handleSelect();\n                }),\n                onPointerDown: composeEventHandlers(itemProps.onPointerDown, (event) => {\n                  pointerTypeRef.current = event.pointerType;\n                }),\n                onPointerMove: composeEventHandlers(itemProps.onPointerMove, (event) => {\n                  pointerTypeRef.current = event.pointerType;\n                  if (disabled) {\n                    contentContext.onItemLeave?.();\n                  } else if (pointerTypeRef.current === \"mouse\") {\n                    event.currentTarget.focus({ preventScroll: true });\n                  }\n                }),\n                onPointerLeave: composeEventHandlers(itemProps.onPointerLeave, (event) => {\n                  if (event.currentTarget === document.activeElement) {\n                    contentContext.onItemLeave?.();\n                  }\n                }),\n                onKeyDown: composeEventHandlers(itemProps.onKeyDown, (event) => {\n                  const isTypingAhead = contentContext.searchRef?.current !== \"\";\n                  if (isTypingAhead && event.key === \" \") return;\n                  if (SELECTION_KEYS.includes(event.key)) handleSelect();\n                  if (event.key === \" \") event.preventDefault();\n                })\n              }\n            )\n          }\n        )\n      }\n    );\n  }\n);\nSelectItem.displayName = ITEM_NAME;\nvar ITEM_TEXT_NAME = \"SelectItemText\";\nvar SelectItemText = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, className, style, ...itemTextProps } = props;\n    const context = useSelectContext(ITEM_TEXT_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ITEM_TEXT_NAME, __scopeSelect);\n    const itemContext = useSelectItemContext(ITEM_TEXT_NAME, __scopeSelect);\n    const nativeOptionsContext = useSelectNativeOptionsContext(ITEM_TEXT_NAME, __scopeSelect);\n    const [itemTextNode, setItemTextNode] = React.useState(null);\n    const composedRefs = useComposedRefs(\n      forwardedRef,\n      (node) => setItemTextNode(node),\n      itemContext.onItemTextChange,\n      (node) => contentContext.itemTextRefCallback?.(node, itemContext.value, itemContext.disabled)\n    );\n    const textContent = itemTextNode?.textContent;\n    const nativeOption = React.useMemo(\n      () => /* @__PURE__ */ jsx(\"option\", { value: itemContext.value, disabled: itemContext.disabled, children: textContent }, itemContext.value),\n      [itemContext.disabled, itemContext.value, textContent]\n    );\n    const { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;\n    useLayoutEffect(() => {\n      onNativeOptionAdd(nativeOption);\n      return () => onNativeOptionRemove(nativeOption);\n    }, [onNativeOptionAdd, onNativeOptionRemove, nativeOption]);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(Primitive.span, { id: itemContext.textId, ...itemTextProps, ref: composedRefs }),\n      itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? ReactDOM.createPortal(itemTextProps.children, context.valueNode) : null\n    ] });\n  }\n);\nSelectItemText.displayName = ITEM_TEXT_NAME;\nvar ITEM_INDICATOR_NAME = \"SelectItemIndicator\";\nvar SelectItemIndicator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...itemIndicatorProps } = props;\n    const itemContext = useSelectItemContext(ITEM_INDICATOR_NAME, __scopeSelect);\n    return itemContext.isSelected ? /* @__PURE__ */ jsx(Primitive.span, { \"aria-hidden\": true, ...itemIndicatorProps, ref: forwardedRef }) : null;\n  }\n);\nSelectItemIndicator.displayName = ITEM_INDICATOR_NAME;\nvar SCROLL_UP_BUTTON_NAME = \"SelectScrollUpButton\";\nvar SelectScrollUpButton = React.forwardRef((props, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_UP_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollUp, setCanScrollUp] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      let handleScroll2 = function() {\n        const canScrollUp2 = viewport.scrollTop > 0;\n        setCanScrollUp(canScrollUp2);\n      };\n      var handleScroll = handleScroll2;\n      const viewport = contentContext.viewport;\n      handleScroll2();\n      viewport.addEventListener(\"scroll\", handleScroll2);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll2);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollUp ? /* @__PURE__ */ jsx(\n    SelectScrollButtonImpl,\n    {\n      ...props,\n      ref: composedRefs,\n      onAutoScroll: () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight;\n        }\n      }\n    }\n  ) : null;\n});\nSelectScrollUpButton.displayName = SCROLL_UP_BUTTON_NAME;\nvar SCROLL_DOWN_BUTTON_NAME = \"SelectScrollDownButton\";\nvar SelectScrollDownButton = React.forwardRef((props, forwardedRef) => {\n  const contentContext = useSelectContentContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const viewportContext = useSelectViewportContext(SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect);\n  const [canScrollDown, setCanScrollDown] = React.useState(false);\n  const composedRefs = useComposedRefs(forwardedRef, viewportContext.onScrollButtonChange);\n  useLayoutEffect(() => {\n    if (contentContext.viewport && contentContext.isPositioned) {\n      let handleScroll2 = function() {\n        const maxScroll = viewport.scrollHeight - viewport.clientHeight;\n        const canScrollDown2 = Math.ceil(viewport.scrollTop) < maxScroll;\n        setCanScrollDown(canScrollDown2);\n      };\n      var handleScroll = handleScroll2;\n      const viewport = contentContext.viewport;\n      handleScroll2();\n      viewport.addEventListener(\"scroll\", handleScroll2);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll2);\n    }\n  }, [contentContext.viewport, contentContext.isPositioned]);\n  return canScrollDown ? /* @__PURE__ */ jsx(\n    SelectScrollButtonImpl,\n    {\n      ...props,\n      ref: composedRefs,\n      onAutoScroll: () => {\n        const { viewport, selectedItem } = contentContext;\n        if (viewport && selectedItem) {\n          viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight;\n        }\n      }\n    }\n  ) : null;\n});\nSelectScrollDownButton.displayName = SCROLL_DOWN_BUTTON_NAME;\nvar SelectScrollButtonImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props;\n  const contentContext = useSelectContentContext(\"SelectScrollButton\", __scopeSelect);\n  const autoScrollTimerRef = React.useRef(null);\n  const getItems = useCollection(__scopeSelect);\n  const clearAutoScrollTimer = React.useCallback(() => {\n    if (autoScrollTimerRef.current !== null) {\n      window.clearInterval(autoScrollTimerRef.current);\n      autoScrollTimerRef.current = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    return () => clearAutoScrollTimer();\n  }, [clearAutoScrollTimer]);\n  useLayoutEffect(() => {\n    const activeItem = getItems().find((item) => item.ref.current === document.activeElement);\n    activeItem?.ref.current?.scrollIntoView({ block: \"nearest\" });\n  }, [getItems]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"aria-hidden\": true,\n      ...scrollIndicatorProps,\n      ref: forwardedRef,\n      style: { flexShrink: 0, ...scrollIndicatorProps.style },\n      onPointerDown: composeEventHandlers(scrollIndicatorProps.onPointerDown, () => {\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      }),\n      onPointerMove: composeEventHandlers(scrollIndicatorProps.onPointerMove, () => {\n        contentContext.onItemLeave?.();\n        if (autoScrollTimerRef.current === null) {\n          autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50);\n        }\n      }),\n      onPointerLeave: composeEventHandlers(scrollIndicatorProps.onPointerLeave, () => {\n        clearAutoScrollTimer();\n      })\n    }\n  );\n});\nvar SEPARATOR_NAME = \"SelectSeparator\";\nvar SelectSeparator = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...separatorProps } = props;\n    return /* @__PURE__ */ jsx(Primitive.div, { \"aria-hidden\": true, ...separatorProps, ref: forwardedRef });\n  }\n);\nSelectSeparator.displayName = SEPARATOR_NAME;\nvar ARROW_NAME = \"SelectArrow\";\nvar SelectArrow = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeSelect, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeSelect);\n    const context = useSelectContext(ARROW_NAME, __scopeSelect);\n    const contentContext = useSelectContentContext(ARROW_NAME, __scopeSelect);\n    return context.open && contentContext.position === \"popper\" ? /* @__PURE__ */ jsx(PopperPrimitive.Arrow, { ...popperScope, ...arrowProps, ref: forwardedRef }) : null;\n  }\n);\nSelectArrow.displayName = ARROW_NAME;\nvar BUBBLE_INPUT_NAME = \"SelectBubbleInput\";\nvar SelectBubbleInput = React.forwardRef(\n  ({ __scopeSelect, value, ...props }, forwardedRef) => {\n    const ref = React.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n    const prevValue = usePrevious(value);\n    React.useEffect(() => {\n      const select = ref.current;\n      if (!select) return;\n      const selectProto = window.HTMLSelectElement.prototype;\n      const descriptor = Object.getOwnPropertyDescriptor(\n        selectProto,\n        \"value\"\n      );\n      const setValue = descriptor.set;\n      if (prevValue !== value && setValue) {\n        const event = new Event(\"change\", { bubbles: true });\n        setValue.call(select, value);\n        select.dispatchEvent(event);\n      }\n    }, [prevValue, value]);\n    return /* @__PURE__ */ jsx(\n      Primitive.select,\n      {\n        ...props,\n        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style },\n        ref: composedRefs,\n        defaultValue: value\n      }\n    );\n  }\n);\nSelectBubbleInput.displayName = BUBBLE_INPUT_NAME;\nfunction shouldShowPlaceholder(value) {\n  return value === \"\" || value === void 0;\n}\nfunction useTypeaheadSearch(onSearchChange) {\n  const handleSearchChange = useCallbackRef(onSearchChange);\n  const searchRef = React.useRef(\"\");\n  const timerRef = React.useRef(0);\n  const handleTypeaheadSearch = React.useCallback(\n    (key) => {\n      const search = searchRef.current + key;\n      handleSearchChange(search);\n      (function updateSearch(value) {\n        searchRef.current = value;\n        window.clearTimeout(timerRef.current);\n        if (value !== \"\") timerRef.current = window.setTimeout(() => updateSearch(\"\"), 1e3);\n      })(search);\n    },\n    [handleSearchChange]\n  );\n  const resetTypeahead = React.useCallback(() => {\n    searchRef.current = \"\";\n    window.clearTimeout(timerRef.current);\n  }, []);\n  React.useEffect(() => {\n    return () => window.clearTimeout(timerRef.current);\n  }, []);\n  return [searchRef, handleTypeaheadSearch, resetTypeahead];\n}\nfunction findNextItem(items, search, currentItem) {\n  const isRepeated = search.length > 1 && Array.from(search).every((char) => char === search[0]);\n  const normalizedSearch = isRepeated ? search[0] : search;\n  const currentItemIndex = currentItem ? items.indexOf(currentItem) : -1;\n  let wrappedItems = wrapArray(items, Math.max(currentItemIndex, 0));\n  const excludeCurrentItem = normalizedSearch.length === 1;\n  if (excludeCurrentItem) wrappedItems = wrappedItems.filter((v) => v !== currentItem);\n  const nextItem = wrappedItems.find(\n    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())\n  );\n  return nextItem !== currentItem ? nextItem : void 0;\n}\nfunction wrapArray(array, startIndex) {\n  return array.map((_, index) => array[(startIndex + index) % array.length]);\n}\nvar Root2 = Select;\nvar Trigger = SelectTrigger;\nvar Value = SelectValue;\nvar Icon = SelectIcon;\nvar Portal = SelectPortal;\nvar Content2 = SelectContent;\nvar Viewport = SelectViewport;\nvar Group = SelectGroup;\nvar Label = SelectLabel;\nvar Item = SelectItem;\nvar ItemText = SelectItemText;\nvar ItemIndicator = SelectItemIndicator;\nvar ScrollUpButton = SelectScrollUpButton;\nvar ScrollDownButton = SelectScrollDownButton;\nvar Separator = SelectSeparator;\nvar Arrow2 = SelectArrow;\nexport {\n  Arrow2 as Arrow,\n  Content2 as Content,\n  Group,\n  Icon,\n  Item,\n  ItemIndicator,\n  ItemText,\n  Label,\n  Portal,\n  Root2 as Root,\n  ScrollDownButton,\n  ScrollUpButton,\n  Select,\n  SelectArrow,\n  SelectContent,\n  SelectGroup,\n  SelectIcon,\n  SelectItem,\n  SelectItemIndicator,\n  SelectItemText,\n  SelectLabel,\n  SelectPortal,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n  SelectViewport,\n  Separator,\n  Trigger,\n  Value,\n  Viewport,\n  createSelectScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-previous/src/use-previous.tsx\nimport * as React from \"react\";\nfunction usePrevious(value) {\n  const ref = React.useRef({ value, previous: value });\n  return React.useMemo(() => {\n    if (ref.current.value !== value) {\n      ref.current.previous = ref.current.value;\n      ref.current.value = value;\n    }\n    return ref.current.previous;\n  }, [value]);\n}\nexport {\n  usePrevious\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":["OPEN_KEYS","SELECTION_KEYS","SELECT_NAME","Collection","useCollection","createCollectionScope","createCollection","createSelectContext","createContextScope","createPopperScope","usePopperScope","SelectProvider","useSelectContext","SelectNativeOptionsProvider","useSelectNativeOptionsContext","Select","props","__scopeSelect","children","open","openProp","defaultOpen","onOpenChange","value","valueProp","defaultValue","onValueChange","dir","name","autoComplete","disabled","required","form","popperScope","trigger","setTrigger","React.useState","valueNode","setValueNode","valueNodeHasChildren","setValueNodeHasChildren","direction","useDirection","setOpen","useControllableState","prop","defaultProp","onChange","caller","setValue","triggerPointerDownPosRef","React.useRef","isFormControl","closest","nativeOptionsSet","setNativeOptionsSet","Set","nativeSelectKey","Array","from","map","option","join","jsx","PopperPrimitive.Root","jsxs","scope","onTriggerChange","onValueNodeChange","onValueNodeHasChildrenChange","contentId","useId","Provider","onNativeOptionAdd","React.useCallback","prev","add","onNativeOptionRemove","optionsSet","delete","SelectBubbleInput","tabIndex","event","target","displayName","TRIGGER_NAME","SelectTrigger","React.forwardRef","forwardedRef","triggerProps","context","isDisabled","composedRefs","useComposedRefs","getItems","pointerTypeRef","searchRef","handleTypeaheadSearch","resetTypeahead","useTypeaheadSearch","search","enabledItems","filter","item","currentItem","find","nextItem","findNextItem","handleOpen","pointerEvent","current","x","Math","round","pageX","y","pageY","PopperPrimitive.Anchor","asChild","Primitive","button","type","role","shouldShowPlaceholder","ref","onClick","composeEventHandlers","currentTarget","focus","onPointerDown","pointerType","hasPointerCapture","pointerId","releasePointerCapture","ctrlKey","preventDefault","onKeyDown","isTypingAhead","altKey","metaKey","key","length","includes","VALUE_NAME","SelectValue","className","style","placeholder","valueProps","hasChildren","useLayoutEffect","span","pointerEvents","Fragment","SelectIcon","iconProps","SelectPortal","PortalPrimitive","CONTENT_NAME","SelectContent","fragment","setFragment","DocumentFragment","frag","ReactDOM.createPortal","SelectContentProvider","Slot","SelectContentImpl","CONTENT_MARGIN","useSelectContentContext","createSlot","position","onCloseAutoFocus","onEscapeKeyDown","onPointerDownOutside","side","sideOffset","align","alignOffset","arrowPadding","collisionBoundary","collisionPadding","sticky","hideWhenDetached","avoidCollisions","contentProps","content","setContent","viewport","setViewport","node","selectedItem","setSelectedItem","selectedItemText","setSelectedItemText","isPositioned","setIsPositioned","firstValidItemFoundRef","React.useEffect","hideOthers","useFocusGuards","focusFirst","candidates","firstItem","restItems","lastItem","slice","PREVIOUSLY_FOCUSED_ELEMENT","document","activeElement","candidate","scrollIntoView","block","scrollTop","scrollHeight","focusSelectedItem","pointerMoveDelta","handlePointerMove","abs","handlePointerUp","contains","removeEventListener","addEventListener","capture","once","close","window","setTimeout","itemRefCallback","isFirstValidItem","handleItemLeave","itemTextRefCallback","SelectPosition","SelectPopperPosition","SelectItemAlignedPosition","popperContentProps","onViewportChange","onItemLeave","RemoveScroll","as","allowPinchZoom","FocusScope","trapped","onMountAutoFocus","onUnmountAutoFocus","preventScroll","DismissableLayer","disableOutsidePointerEvents","onFocusOutside","onDismiss","id","onContextMenu","onPlaced","display","flexDirection","outline","isModifierKey","candidateNodes","reverse","currentElement","currentIndex","indexOf","popperProps","contentContext","contentWrapper","setContentWrapper","shouldExpandOnScrollRef","shouldRepositionRef","triggerRect","getBoundingClientRect","contentRect","valueNodeRect","itemTextRect","itemTextOffset","left","leftDelta","minContentWidth","width","contentWidth","max","rightEdge","innerWidth","clampedLeft","clamp","minWidth","right","rightDelta","leftEdge","clampedRight","items","availableHeight","innerHeight","itemsHeight","contentStyles","getComputedStyle","contentBorderTopWidth","parseInt","borderTopWidth","contentPaddingTop","paddingTop","contentBorderBottomWidth","borderBottomWidth","fullContentHeight","paddingBottom","minContentHeight","min","offsetHeight","viewportStyles","viewportPaddingTop","viewportPaddingBottom","topEdgeToTriggerMiddle","top","height","triggerMiddleToBottomEdge","selectedItemHalfHeight","contentTopToItemMiddle","offsetTop","itemMiddleToContentBottom","isLastItem","bottom","viewportOffsetBottom","clientHeight","isFirstItem","margin","minHeight","maxHeight","requestAnimationFrame","contentZIndex","setContentZIndex","zIndex","handleScrollButtonChange","SelectViewportProvider","onScrollButtonChange","div","boxSizing","PopperPrimitive.Content","useSelectViewportContext","VIEWPORT_NAME","SelectViewport","nonce","viewportProps","viewportContext","prevScrollTopRef","dangerouslySetInnerHTML","__html","flex","overflow","onScroll","scrolledBy","cssMinHeight","parseFloat","cssHeight","prevHeight","nextHeight","clampedNextHeight","heightDiff","justifyContent","GROUP_NAME","SelectGroupContextProvider","useSelectGroupContext","groupProps","groupId","LABEL_NAME","SelectLabel","labelProps","groupContext","ITEM_NAME","SelectItemContextProvider","useSelectItemContext","SelectItem","textValue","textValueProp","itemProps","isSelected","setTextValue","isFocused","setIsFocused","textId","handleSelect","Error","onItemTextChange","prevTextValue","textContent","trim","ItemSlot","onFocus","onBlur","onPointerUp","onPointerMove","onPointerLeave","ITEM_TEXT_NAME","SelectItemText","itemTextProps","itemContext","nativeOptionsContext","itemTextNode","setItemTextNode","nativeOption","React.useMemo","ITEM_INDICATOR_NAME","SelectItemIndicator","itemIndicatorProps","SCROLL_UP_BUTTON_NAME","SelectScrollUpButton","canScrollUp","setCanScrollUp","handleScroll2","canScrollUp2","SelectScrollButtonImpl","onAutoScroll","SCROLL_DOWN_BUTTON_NAME","SelectScrollDownButton","canScrollDown","setCanScrollDown","maxScroll","canScrollDown2","ceil","scrollIndicatorProps","autoScrollTimerRef","clearAutoScrollTimer","clearInterval","activeItem","flexShrink","setInterval","SelectSeparator","separatorProps","ARROW_NAME","arrowProps","PopperPrimitive.Arrow","prevValue","previous","usePrevious","select","selectProto","HTMLSelectElement","prototype","Object","getOwnPropertyDescriptor","set","Event","bubbles","call","dispatchEvent","VISUALLY_HIDDEN_STYLES","onSearchChange","handleSearchChange","useCallbackRef","timerRef","updateSearch","clearTimeout","normalizedSearch","every","char","currentItemIndex","wrappedItems","array","startIndex","_","index","v","toLowerCase","startsWith","Trigger","Icon","Portal","Content2","Viewport","Label","Item","ItemText","ItemIndicator","ScrollUpButton","ScrollDownButton","Separator","SelectPrimitive.Trigger","cn","SelectPrimitive.Icon","ChevronDown","SelectPrimitive.ScrollUpButton","ChevronUp","SelectPrimitive.ScrollDownButton","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectPrimitive.Label","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","Check","SelectPrimitive.ItemText","SelectPrimitive.Separator"],"mappings":"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","x_google_ignoreList":[0,1]}