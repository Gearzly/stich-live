{"version":3,"file":"ProfilePage-B0es7zkd.js","sources":["../../../src/routes/Profile.tsx","../../../src/routes/ProfilePage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  User, \r\n  Edit3, \r\n  Save, \r\n  X, \r\n  Trash2,\r\n  Plus,\r\n  Download,\r\n  Camera,\r\n  Star,\r\n  Crown,\r\n  Zap,\r\n  BarChart,\r\n  Target,\r\n  TrendingUp,\r\n  Eye,\r\n  AlertCircle,\r\n  CreditCard,\r\n  Key,\r\n  Bell,\r\n  Shield\r\n} from 'lucide-react';\r\nimport { Button } from '../components/ui/button';\r\nimport { Card } from '../components/ui/card';\r\nimport { Input } from '../components/ui/input';\r\nimport { Label } from '../components/ui/label';\r\nimport { Badge } from '../components/ui/badge';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { UserService, type UserProfile } from '../services/user/UserService';\r\nimport { ApplicationService } from '../services/application/ApplicationService';\r\nimport { toast } from '../lib/toast';\r\n\r\ninterface ProfileSection {\r\n  id: string;\r\n  title: string;\r\n  icon: React.ElementType;\r\n  component: React.ReactNode;\r\n}\r\n\r\ninterface UsageStats {\r\n  totalApps: number;\r\n  activeApps: number;\r\n  totalViews: number;\r\n  apiCalls: number;\r\n  storageUsed: number;\r\n  storageLimit: number;\r\n}\r\n\r\ninterface ApiKey {\r\n  id: string;\r\n  name: string;\r\n  key: string;\r\n  createdAt: Date;\r\n  lastUsed?: Date;\r\n  isActive: boolean;\r\n}\r\n\r\nconst Profile: React.FC = () => {\r\n  const { user, updateUserProfile } = useAuth();\r\n  const [activeSection, setActiveSection] = useState('general');\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [profile, setProfile] = useState<UserProfile | null>(null);\r\n  const [usageStats, setUsageStats] = useState<UsageStats>({\r\n    totalApps: 0,\r\n    activeApps: 0,\r\n    totalViews: 0,\r\n    apiCalls: 0,\r\n    storageUsed: 0,\r\n    storageLimit: 5000 // 5GB default\r\n  });\r\n  const [apiKeys, setApiKeys] = useState<ApiKey[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    displayName: '',\r\n    email: '',\r\n    phone: '',\r\n    location: '',\r\n    bio: '',\r\n    website: '',\r\n    github: '',\r\n    twitter: '',\r\n    linkedin: '',\r\n    company: '',\r\n    jobTitle: ''\r\n  });\r\n  const [notifications, setNotifications] = useState({\r\n    emailUpdates: true,\r\n    pushNotifications: true,\r\n    weeklyReports: false,\r\n    securityAlerts: true,\r\n    productUpdates: true\r\n  });\r\n  const [security, setSecurity] = useState({\r\n    twoFactorEnabled: false,\r\n    sessionTimeout: 24,\r\n    passwordLastChanged: new Date()\r\n  });\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const userService = new UserService();\r\n  const applicationService = new ApplicationService();\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadProfileData();\r\n    }\r\n  }, [user]);\r\n\r\n  const loadProfileData = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      // Load user profile\r\n      const userProfile = await userService.getUserProfile(user.uid);\r\n      if (userProfile) {\r\n        setProfile(userProfile);\r\n        setFormData({\r\n          displayName: userProfile.displayName || user.displayName || '',\r\n          email: userProfile.email || user.email || '',\r\n          phone: userProfile.phone || '',\r\n          location: userProfile.location || '',\r\n          bio: userProfile.bio || '',\r\n          website: userProfile.website || '',\r\n          github: userProfile.socialLinks?.github || '',\r\n          twitter: userProfile.socialLinks?.twitter || '',\r\n          linkedin: userProfile.socialLinks?.linkedin || '',\r\n          company: userProfile.company || '',\r\n          jobTitle: userProfile.jobTitle || ''\r\n        });\r\n      }\r\n\r\n      // Load usage statistics\r\n      const apps = await applicationService.getUserApplications(user.uid);\r\n      const activeApps = apps.filter(app => app.status === 'deployed').length;\r\n      const totalViews = apps.reduce((sum, app) => sum + (app.analytics?.views || 0), 0);\r\n\r\n      setUsageStats(prev => ({\r\n        ...prev,\r\n        totalApps: apps.length,\r\n        activeApps,\r\n        totalViews,\r\n        apiCalls: Math.floor(Math.random() * 10000), // Simulated\r\n        storageUsed: Math.floor(Math.random() * 2000) // Simulated\r\n      }));\r\n\r\n      // Load API keys (simulated)\r\n      setApiKeys([\r\n        {\r\n          id: '1',\r\n          name: 'Production Key',\r\n          key: 'sk_prod_' + Math.random().toString(36).substr(2, 24),\r\n          createdAt: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000),\r\n          lastUsed: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),\r\n          isActive: true\r\n        },\r\n        {\r\n          id: '2',\r\n          name: 'Development Key',\r\n          key: 'sk_dev_' + Math.random().toString(36).substr(2, 24),\r\n          createdAt: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000),\r\n          lastUsed: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),\r\n          isActive: true\r\n        }\r\n      ]);\r\n\r\n    } catch (error) {\r\n      console.error('Error loading profile data:', error);\r\n      toast.error('Failed to load profile data');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSaveProfile = async () => {\r\n    if (!user) return;\r\n\r\n    try {\r\n      const updatedProfile = {\r\n        displayName: formData.displayName,\r\n        phone: formData.phone,\r\n        location: formData.location,\r\n        bio: formData.bio,\r\n        website: formData.website,\r\n        company: formData.company,\r\n        jobTitle: formData.jobTitle,\r\n        socialLinks: {\r\n          github: formData.github,\r\n          twitter: formData.twitter,\r\n          linkedin: formData.linkedin\r\n        }\r\n      };\r\n\r\n      await userService.updateUserProfile(user.uid, updatedProfile);\r\n      \r\n      // Update Firebase Auth profile\r\n      if (formData.displayName !== user.displayName) {\r\n        await updateUserProfile({ displayName: formData.displayName });\r\n      }\r\n\r\n      setIsEditing(false);\r\n      toast.success('Profile updated successfully!');\r\n      await loadProfileData();\r\n    } catch (error) {\r\n      console.error('Error updating profile:', error);\r\n      toast.error('Failed to update profile');\r\n    }\r\n  };\r\n\r\n  const handleChange = (field: string, value: string) => {\r\n    setFormData(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const handleNotificationChange = (field: string, value: boolean) => {\r\n    setNotifications(prev => ({ ...prev, [field]: value }));\r\n  };\r\n\r\n  const generateApiKey = () => {\r\n    const newKey: ApiKey = {\r\n      id: Date.now().toString(),\r\n      name: `API Key ${apiKeys.length + 1}`,\r\n      key: 'sk_' + Math.random().toString(36).substr(2, 32),\r\n      createdAt: new Date(),\r\n      isActive: true\r\n    };\r\n    setApiKeys(prev => [...prev, newKey]);\r\n    toast.success('New API key generated successfully!');\r\n  };\r\n\r\n  const revokeApiKey = (keyId: string) => {\r\n    setApiKeys(prev => prev.filter(key => key.id !== keyId));\r\n    toast.success('API key revoked successfully!');\r\n  };\r\n\r\n  const copyToClipboard = async (text: string) => {\r\n    try {\r\n      await navigator.clipboard.writeText(text);\r\n      toast.success('Copied to clipboard!');\r\n    } catch (error) {\r\n      toast.error('Failed to copy to clipboard');\r\n    }\r\n  };\r\n\r\n  const formatBytes = (bytes: number) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const getSubscriptionBadge = () => {\r\n    const subscription = profile?.subscription || 'free';\r\n    switch (subscription) {\r\n      case 'pro':\r\n        return <Badge className=\"bg-blue-100 text-blue-800\"><Crown className=\"w-3 h-3 mr-1\" />Pro</Badge>;\r\n      case 'enterprise':\r\n        return <Badge className=\"bg-purple-100 text-purple-800\"><Star className=\"w-3 h-3 mr-1\" />Enterprise</Badge>;\r\n      default:\r\n        return <Badge variant=\"secondary\">Free</Badge>;\r\n    }\r\n  };\r\n\r\n  // Section Components\r\n  const GeneralSection = () => (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100\">\r\n          General Information\r\n        </h2>\r\n        <Button\r\n          variant={isEditing ? 'default' : 'outline'}\r\n          onClick={isEditing ? handleSaveProfile : () => setIsEditing(true)}\r\n        >\r\n          {isEditing ? (\r\n            <>\r\n              <Save className=\"w-4 h-4 mr-2\" />\r\n              Save Changes\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Edit3 className=\"w-4 h-4 mr-2\" />\r\n              Edit Profile\r\n            </>\r\n          )}\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Profile Picture */}\r\n      <div className=\"flex items-center gap-6 mb-6\">\r\n        <div className=\"relative\">\r\n          <div className=\"w-20 h-20 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center text-white text-2xl font-bold\">\r\n            {user?.displayName?.charAt(0) || user?.email?.charAt(0) || 'U'}\r\n          </div>\r\n          {isEditing && (\r\n            <Button\r\n              size=\"sm\"\r\n              className=\"absolute -bottom-2 -right-2 rounded-full w-8 h-8 p-0\"\r\n            >\r\n              <Camera className=\"w-4 h-4\" />\r\n            </Button>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\r\n            {formData.displayName || 'User'}\r\n          </h3>\r\n          <p className=\"text-slate-600 dark:text-slate-300\">{formData.email}</p>\r\n          <div className=\"flex items-center gap-2 mt-1\">\r\n            {getSubscriptionBadge()}\r\n            <Badge variant=\"outline\" className=\"text-xs\">\r\n              Member since {new Date(user?.metadata?.creationTime || '').getFullYear()}\r\n            </Badge>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Form Fields */}\r\n      <div className=\"grid md:grid-cols-2 gap-6\">\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"displayName\">Display Name</Label>\r\n          <Input\r\n            id=\"displayName\"\r\n            value={formData.displayName}\r\n            onChange={(e) => handleChange('displayName', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"email\">Email Address</Label>\r\n          <Input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            value={formData.email}\r\n            disabled\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"phone\">Phone Number</Label>\r\n          <Input\r\n            id=\"phone\"\r\n            value={formData.phone}\r\n            onChange={(e) => handleChange('phone', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"location\">Location</Label>\r\n          <Input\r\n            id=\"location\"\r\n            value={formData.location}\r\n            onChange={(e) => handleChange('location', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"company\">Company</Label>\r\n          <Input\r\n            id=\"company\"\r\n            value={formData.company}\r\n            onChange={(e) => handleChange('company', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"jobTitle\">Job Title</Label>\r\n          <Input\r\n            id=\"jobTitle\"\r\n            value={formData.jobTitle}\r\n            onChange={(e) => handleChange('jobTitle', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"md:col-span-2 space-y-2\">\r\n          <Label htmlFor=\"bio\">Bio</Label>\r\n          <textarea\r\n            id=\"bio\"\r\n            value={formData.bio}\r\n            onChange={(e) => handleChange('bio', e.target.value)}\r\n            disabled={!isEditing}\r\n            rows={3}\r\n            className=\"w-full px-3 py-2 border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-800 text-slate-900 dark:text-slate-100 disabled:opacity-50\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"website\">Website</Label>\r\n          <Input\r\n            id=\"website\"\r\n            value={formData.website}\r\n            onChange={(e) => handleChange('website', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"github\">GitHub</Label>\r\n          <Input\r\n            id=\"github\"\r\n            value={formData.github}\r\n            onChange={(e) => handleChange('github', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"twitter\">Twitter</Label>\r\n          <Input\r\n            id=\"twitter\"\r\n            value={formData.twitter}\r\n            onChange={(e) => handleChange('twitter', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <Label htmlFor=\"linkedin\">LinkedIn</Label>\r\n          <Input\r\n            id=\"linkedin\"\r\n            value={formData.linkedin}\r\n            onChange={(e) => handleChange('linkedin', e.target.value)}\r\n            disabled={!isEditing}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {isEditing && (\r\n        <div className=\"flex justify-end gap-3 mt-6 pt-6 border-t border-slate-200 dark:border-slate-700\">\r\n          <Button variant=\"outline\" onClick={() => setIsEditing(false)}>\r\n            <X className=\"w-4 h-4 mr-2\" />\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleSaveProfile}>\r\n            <Save className=\"w-4 h-4 mr-2\" />\r\n            Save Changes\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n\r\n  const UsageSection = () => (\r\n    <div className=\"space-y-6\">\r\n      {/* Usage Stats */}\r\n      <Card className=\"p-6\">\r\n        <h2 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 mb-6\">\r\n          Usage Statistics\r\n        </h2>\r\n        <div className=\"grid md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-blue-100 dark:bg-blue-900/20 rounded-lg flex items-center justify-center mx-auto mb-3\">\r\n              <Target className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\r\n              {usageStats.totalApps}\r\n            </p>\r\n            <p className=\"text-sm text-slate-600 dark:text-slate-300\">Total Apps</p>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-green-100 dark:bg-green-900/20 rounded-lg flex items-center justify-center mx-auto mb-3\">\r\n              <Zap className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\r\n              {usageStats.activeApps}\r\n            </p>\r\n            <p className=\"text-sm text-slate-600 dark:text-slate-300\">Active Apps</p>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-purple-100 dark:bg-purple-900/20 rounded-lg flex items-center justify-center mx-auto mb-3\">\r\n              <Eye className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\r\n              {usageStats.totalViews.toLocaleString()}\r\n            </p>\r\n            <p className=\"text-sm text-slate-600 dark:text-slate-300\">Total Views</p>\r\n          </div>\r\n          \r\n          <div className=\"text-center\">\r\n            <div className=\"w-12 h-12 bg-orange-100 dark:bg-orange-900/20 rounded-lg flex items-center justify-center mx-auto mb-3\">\r\n              <TrendingUp className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\r\n            </div>\r\n            <p className=\"text-2xl font-bold text-slate-900 dark:text-slate-100\">\r\n              {usageStats.apiCalls.toLocaleString()}\r\n            </p>\r\n            <p className=\"text-sm text-slate-600 dark:text-slate-300\">API Calls</p>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Storage Usage */}\r\n      <Card className=\"p-6\">\r\n        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100 mb-4\">\r\n          Storage Usage\r\n        </h3>\r\n        <div className=\"space-y-4\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-slate-600 dark:text-slate-300\">\r\n              {formatBytes(usageStats.storageUsed * 1024 * 1024)} of {formatBytes(usageStats.storageLimit * 1024 * 1024)} used\r\n            </span>\r\n            <span className=\"text-sm text-slate-500\">\r\n              {Math.round((usageStats.storageUsed / usageStats.storageLimit) * 100)}%\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-slate-200 dark:bg-slate-700 rounded-full h-2\">\r\n            <div \r\n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n              style={{ width: `${Math.min((usageStats.storageUsed / usageStats.storageLimit) * 100, 100)}%` }}\r\n            />\r\n          </div>\r\n          {usageStats.storageUsed / usageStats.storageLimit > 0.8 && (\r\n            <div className=\"flex items-center gap-2 text-orange-600 dark:text-orange-400 text-sm\">\r\n              <AlertCircle className=\"w-4 h-4\" />\r\n              Storage is almost full. Consider upgrading your plan.\r\n            </div>\r\n          )}\r\n        </div>\r\n      </Card>\r\n\r\n      {/* Subscription Info */}\r\n      <Card className=\"p-6\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100\">\r\n            Subscription Plan\r\n          </h3>\r\n          {getSubscriptionBadge()}\r\n        </div>\r\n        <div className=\"space-y-3\">\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-slate-600 dark:text-slate-300\">Plan Type</span>\r\n            <span className=\"text-slate-900 dark:text-slate-100 font-medium\">\r\n              {profile?.subscription || 'Free'}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-slate-600 dark:text-slate-300\">Billing Cycle</span>\r\n            <span className=\"text-slate-900 dark:text-slate-100\">Monthly</span>\r\n          </div>\r\n          <div className=\"flex justify-between\">\r\n            <span className=\"text-slate-600 dark:text-slate-300\">Next Billing</span>\r\n            <span className=\"text-slate-900 dark:text-slate-100\">\r\n              {new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toLocaleDateString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex gap-3 mt-6\">\r\n          <Button variant=\"outline\" className=\"flex-1\">\r\n            <CreditCard className=\"w-4 h-4 mr-2\" />\r\n            Billing History\r\n          </Button>\r\n          <Button className=\"flex-1\">\r\n            <Crown className=\"w-4 h-4 mr-2\" />\r\n            Upgrade Plan\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n  const ApiKeysSection = () => (\r\n    <Card className=\"p-6\">\r\n      <div className=\"flex items-center justify-between mb-6\">\r\n        <h2 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100\">\r\n          API Keys\r\n        </h2>\r\n        <Button onClick={generateApiKey}>\r\n          <Plus className=\"w-4 h-4 mr-2\" />\r\n          Generate New Key\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        {apiKeys.map((apiKey) => (\r\n          <div key={apiKey.id} className=\"border border-slate-200 dark:border-slate-700 rounded-lg p-4\">\r\n            <div className=\"flex items-center justify-between mb-3\">\r\n              <div>\r\n                <h3 className=\"font-medium text-slate-900 dark:text-slate-100\">\r\n                  {apiKey.name}\r\n                </h3>\r\n                <p className=\"text-sm text-slate-600 dark:text-slate-300\">\r\n                  Created {apiKey.createdAt.toLocaleDateString()}\r\n                  {apiKey.lastUsed && (\r\n                    <span> • Last used {apiKey.lastUsed.toLocaleDateString()}</span>\r\n                  )}\r\n                </p>\r\n              </div>\r\n              <div className=\"flex items-center gap-2\">\r\n                <Badge variant={apiKey.isActive ? 'default' : 'secondary'}>\r\n                  {apiKey.isActive ? 'Active' : 'Inactive'}\r\n                </Badge>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  onClick={() => revokeApiKey(apiKey.id)}\r\n                >\r\n                  <Trash2 className=\"w-4 h-4\" />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n              <code className=\"flex-1 px-3 py-2 bg-slate-100 dark:bg-slate-800 rounded text-sm font-mono\">\r\n                {apiKey.key.substring(0, 20)}...\r\n              </code>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={() => copyToClipboard(apiKey.key)}\r\n              >\r\n                Copy\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {apiKeys.length === 0 && (\r\n        <div className=\"text-center py-8\">\r\n          <Key className=\"w-12 h-12 text-slate-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-lg font-medium text-slate-900 dark:text-slate-100 mb-2\">\r\n            No API Keys\r\n          </h3>\r\n          <p className=\"text-slate-600 dark:text-slate-300 mb-4\">\r\n            Generate your first API key to start integrating with our services.\r\n          </p>\r\n          <Button onClick={generateApiKey}>\r\n            <Plus className=\"w-4 h-4 mr-2\" />\r\n            Generate API Key\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n\r\n  const NotificationsSection = () => (\r\n    <Card className=\"p-6\">\r\n      <h2 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 mb-6\">\r\n        Notification Preferences\r\n      </h2>\r\n      \r\n      <div className=\"space-y-6\">\r\n        {Object.entries(notifications).map(([key, value]) => (\r\n          <div key={key} className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"font-medium text-slate-900 dark:text-slate-100\">\r\n                {key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}\r\n              </h3>\r\n              <p className=\"text-sm text-slate-600 dark:text-slate-300\">\r\n                {key === 'emailUpdates' && 'Receive email notifications about your account'}\r\n                {key === 'pushNotifications' && 'Browser push notifications for important updates'}\r\n                {key === 'weeklyReports' && 'Weekly summary of your app analytics'}\r\n                {key === 'securityAlerts' && 'Security alerts and login notifications'}\r\n                {key === 'productUpdates' && 'New features and product announcements'}\r\n              </p>\r\n            </div>\r\n            <Button\r\n              variant={value ? 'default' : 'outline'}\r\n              size=\"sm\"\r\n              onClick={() => handleNotificationChange(key, !value)}\r\n            >\r\n              {value ? 'Enabled' : 'Disabled'}\r\n            </Button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Card>\r\n  );\r\n\r\n  const SecuritySection = () => (\r\n    <div className=\"space-y-6\">\r\n      <Card className=\"p-6\">\r\n        <h2 className=\"text-xl font-semibold text-slate-900 dark:text-slate-100 mb-6\">\r\n          Security Settings\r\n        </h2>\r\n        \r\n        <div className=\"space-y-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"font-medium text-slate-900 dark:text-slate-100\">\r\n                Two-Factor Authentication\r\n              </h3>\r\n              <p className=\"text-sm text-slate-600 dark:text-slate-300\">\r\n                Add an extra layer of security to your account\r\n              </p>\r\n            </div>\r\n            <Button variant={security.twoFactorEnabled ? 'default' : 'outline'}>\r\n              {security.twoFactorEnabled ? 'Enabled' : 'Enable 2FA'}\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"font-medium text-slate-900 dark:text-slate-100\">\r\n                Change Password\r\n              </h3>\r\n              <p className=\"text-sm text-slate-600 dark:text-slate-300\">\r\n                Last changed {security.passwordLastChanged.toLocaleDateString()}\r\n              </p>\r\n            </div>\r\n            <Button variant=\"outline\">\r\n              Update Password\r\n            </Button>\r\n          </div>\r\n\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h3 className=\"font-medium text-slate-900 dark:text-slate-100\">\r\n                Session Timeout\r\n              </h3>\r\n              <p className=\"text-sm text-slate-600 dark:text-slate-300\">\r\n                Automatically sign out after {security.sessionTimeout} hours of inactivity\r\n              </p>\r\n            </div>\r\n            <select \r\n              value={security.sessionTimeout}\r\n              onChange={(e) => setSecurity(prev => ({ ...prev, sessionTimeout: Number(e.target.value) }))}\r\n              className=\"px-3 py-1 border border-slate-300 dark:border-slate-600 rounded-md bg-white dark:bg-slate-800\"\r\n            >\r\n              <option value={1}>1 hour</option>\r\n              <option value={8}>8 hours</option>\r\n              <option value={24}>24 hours</option>\r\n              <option value={168}>1 week</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n\r\n      <Card className=\"p-6\">\r\n        <h3 className=\"text-lg font-semibold text-slate-900 dark:text-slate-100 mb-4\">\r\n          Account Actions\r\n        </h3>\r\n        <div className=\"space-y-4\">\r\n          <Button variant=\"outline\" className=\"w-full justify-start\">\r\n            <Download className=\"w-4 h-4 mr-2\" />\r\n            Download Account Data\r\n          </Button>\r\n          <Button variant=\"outline\" className=\"w-full justify-start text-red-600 hover:text-red-700\">\r\n            <Trash2 className=\"w-4 h-4 mr-2\" />\r\n            Delete Account\r\n          </Button>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n\r\n  const sections: ProfileSection[] = [\r\n    { id: 'general', title: 'General', icon: User, component: <GeneralSection /> },\r\n    { id: 'usage', title: 'Usage & Billing', icon: BarChart, component: <UsageSection /> },\r\n    { id: 'apikeys', title: 'API Keys', icon: Key, component: <ApiKeysSection /> },\r\n    { id: 'notifications', title: 'Notifications', icon: Bell, component: <NotificationsSection /> },\r\n    { id: 'security', title: 'Security', icon: Shield, component: <SecuritySection /> }\r\n  ];\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4\" />\r\n          <p className=\"text-slate-600 dark:text-slate-300\">Loading profile...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-50 dark:bg-slate-900\">\r\n      <div className=\"container mx-auto px-6 py-8\">\r\n        <div className=\"flex gap-8\">\r\n          {/* Sidebar */}\r\n          <div className=\"w-64 flex-shrink-0\">\r\n            <Card className=\"p-4\">\r\n              <nav className=\"space-y-2\">\r\n                {sections.map((section) => (\r\n                  <button\r\n                    key={section.id}\r\n                    onClick={() => setActiveSection(section.id)}\r\n                    className={`w-full text-left px-3 py-2 rounded-lg flex items-center gap-3 transition-colors ${\r\n                      activeSection === section.id\r\n                        ? 'bg-blue-100 dark:bg-blue-900/20 text-blue-700 dark:text-blue-300'\r\n                        : 'text-slate-600 dark:text-slate-300 hover:bg-slate-100 dark:hover:bg-slate-800'\r\n                    }`}\r\n                  >\r\n                    <section.icon className=\"w-5 h-5\" />\r\n                    {section.title}\r\n                  </button>\r\n                ))}\r\n              </nav>\r\n            </Card>\r\n          </div>\r\n\r\n          {/* Main Content */}\r\n          <div className=\"flex-1\">\r\n            <motion.div\r\n              key={activeSection}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ duration: 0.3 }}\r\n            >\r\n              {sections.find(section => section.id === activeSection)?.component}\r\n            </motion.div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","// import React from 'react'; // React 17+ with JSX transform doesn't require this\r\nimport Profile from './Profile';\r\n\r\n// ProfilePage is a wrapper around the main Profile component\r\nexport default function ProfilePage() {\r\n  return <Profile />;\r\n}\r\n"],"names":["Profile","user","updateUserProfile","useAuth","activeSection","setActiveSection","useState","isEditing","setIsEditing","profile","setProfile","usageStats","setUsageStats","totalApps","activeApps","totalViews","apiCalls","storageUsed","storageLimit","apiKeys","setApiKeys","formData","setFormData","displayName","email","phone","location","bio","website","github","twitter","linkedin","company","jobTitle","notifications","setNotifications","emailUpdates","pushNotifications","weeklyReports","securityAlerts","productUpdates","security","setSecurity","twoFactorEnabled","sessionTimeout","passwordLastChanged","Date","isLoading","setIsLoading","userService","UserService","applicationService","ApplicationService","useEffect","loadProfileData","async","userProfile","getUserProfile","uid","socialLinks","apps","getUserApplications","filter","app","status","length","reduce","sum","analytics","views","prev","Math","floor","random","id","name","key","toString","substr","createdAt","now","lastUsed","isActive","error","toast","handleSaveProfile","updatedProfile","success","handleChange","field","value","generateApiKey","newKey","formatBytes","bytes","i","log","parseFloat","pow","toFixed","getSubscriptionBadge","subscription","jsxs","Badge","className","children","jsx","Crown","Star","variant","GeneralSection","Card","Button","onClick","Fragment","Save","Edit3","charAt","size","Camera","metadata","creationTime","getFullYear","Label","htmlFor","Input","onChange","e","target","disabled","type","rows","X","UsageSection","Target","Zap","Eye","toLocaleString","TrendingUp","round","style","width","min","AlertCircle","toLocaleDateString","CreditCard","ApiKeysSection","Plus","map","apiKey","revokeApiKey","keyId","Trash2","substring","text","navigator","clipboard","writeText","copyToClipboard","Key","NotificationsSection","Object","entries","replace","str","toUpperCase","handleNotificationChange","SecuritySection","Number","Download","sections","title","icon","User","component","BarChart","Bell","Shield","section","motion","div","initial","opacity","y","animate","transition","duration","find","ProfilePage"],"mappings":"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"}