{"version":3,"file":"scroll-area-CWPF13ZN.js","sources":["../../../node_modules/@radix-ui/react-scroll-area/dist/index.mjs","../../../src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\";\n\n// src/scroll-area.tsx\nimport * as React2 from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useCallbackRef } from \"@radix-ui/react-use-callback-ref\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { clamp } from \"@radix-ui/number\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\n\n// src/use-state-machine.ts\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// src/scroll-area.tsx\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar SCROLL_AREA_NAME = \"ScrollArea\";\nvar [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\nvar [ScrollAreaProvider, useScrollAreaContext] = createScrollAreaContext(SCROLL_AREA_NAME);\nvar ScrollArea = React2.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = \"hover\",\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React2.useState(null);\n    const [viewport, setViewport] = React2.useState(null);\n    const [content, setContent] = React2.useState(null);\n    const [scrollbarX, setScrollbarX] = React2.useState(null);\n    const [scrollbarY, setScrollbarY] = React2.useState(null);\n    const [cornerWidth, setCornerWidth] = React2.useState(0);\n    const [cornerHeight, setCornerHeight] = React2.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React2.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React2.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n    return /* @__PURE__ */ jsx(\n      ScrollAreaProvider,\n      {\n        scope: __scopeScrollArea,\n        type,\n        dir: direction,\n        scrollHideDelay,\n        scrollArea,\n        viewport,\n        onViewportChange: setViewport,\n        content,\n        onContentChange: setContent,\n        scrollbarX,\n        onScrollbarXChange: setScrollbarX,\n        scrollbarXEnabled,\n        onScrollbarXEnabledChange: setScrollbarXEnabled,\n        scrollbarY,\n        onScrollbarYChange: setScrollbarY,\n        scrollbarYEnabled,\n        onScrollbarYEnabledChange: setScrollbarYEnabled,\n        onCornerWidthChange: setCornerWidth,\n        onCornerHeightChange: setCornerHeight,\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            dir: direction,\n            ...scrollAreaProps,\n            ref: composedRefs,\n            style: {\n              position: \"relative\",\n              // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n              [\"--radix-scroll-area-corner-width\"]: cornerWidth + \"px\",\n              [\"--radix-scroll-area-corner-height\"]: cornerHeight + \"px\",\n              ...props.style\n            }\n          }\n        )\n      }\n    );\n  }\n);\nScrollArea.displayName = SCROLL_AREA_NAME;\nvar VIEWPORT_NAME = \"ScrollAreaViewport\";\nvar ScrollAreaViewport = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React2.useRef(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return /* @__PURE__ */ jsxs(Fragment, { children: [\n      /* @__PURE__ */ jsx(\n        \"style\",\n        {\n          dangerouslySetInnerHTML: {\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`\n          },\n          nonce\n        }\n      ),\n      /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          \"data-radix-scroll-area-viewport\": \"\",\n          ...viewportProps,\n          ref: composedRefs,\n          style: {\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n            overflowY: context.scrollbarYEnabled ? \"scroll\" : \"hidden\",\n            ...props.style\n          },\n          children: /* @__PURE__ */ jsx(\"div\", { ref: context.onContentChange, style: { minWidth: \"100%\", display: \"table\" }, children })\n        }\n      )\n    ] });\n  }\n);\nScrollAreaViewport.displayName = VIEWPORT_NAME;\nvar SCROLLBAR_NAME = \"ScrollAreaScrollbar\";\nvar ScrollAreaScrollbar = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === \"horizontal\";\n    React2.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n    return context.type === \"hover\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarHover, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"scroll\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarScroll, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"auto\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarAuto, { ...scrollbarProps, ref: forwardedRef, forceMount }) : context.type === \"always\" ? /* @__PURE__ */ jsx(ScrollAreaScrollbarVisible, { ...scrollbarProps, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\nvar ScrollAreaScrollbarHover = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React2.useState(false);\n  React2.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarAuto,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarScroll = React2.forwardRef((props, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const debounceScrollEnd = useDebounceCallback(() => send(\"SCROLL_END\"), 100);\n  const [state, send] = useStateMachine(\"hidden\", {\n    hidden: {\n      SCROLL: \"scrolling\"\n    },\n    scrolling: {\n      SCROLL_END: \"idle\",\n      POINTER_ENTER: \"interacting\"\n    },\n    interacting: {\n      SCROLL: \"interacting\",\n      POINTER_LEAVE: \"idle\"\n    },\n    idle: {\n      HIDE: \"hidden\",\n      SCROLL: \"scrolling\",\n      POINTER_ENTER: \"interacting\"\n    }\n  });\n  React2.useEffect(() => {\n    if (state === \"idle\") {\n      const hideTimer = window.setTimeout(() => send(\"HIDE\"), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n  React2.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? \"scrollLeft\" : \"scrollTop\";\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send(\"SCROLL\");\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener(\"scroll\", handleScroll);\n      return () => viewport.removeEventListener(\"scroll\", handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || state !== \"hidden\", children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": state === \"hidden\" ? \"hidden\" : \"visible\",\n      ...scrollbarProps,\n      ref: forwardedRef,\n      onPointerEnter: composeEventHandlers(props.onPointerEnter, () => send(\"POINTER_ENTER\")),\n      onPointerLeave: composeEventHandlers(props.onPointerLeave, () => send(\"POINTER_LEAVE\"))\n    }\n  ) });\n});\nvar ScrollAreaScrollbarAuto = React2.forwardRef((props, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React2.useState(false);\n  const isHorizontal = props.orientation === \"horizontal\";\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(Presence, { present: forceMount || visible, children: /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarVisible,\n    {\n      \"data-state\": visible ? \"visible\" : \"hidden\",\n      ...scrollbarProps,\n      ref: forwardedRef\n    }\n  ) });\n});\nvar ScrollAreaScrollbarVisible = React2.forwardRef((props, forwardedRef) => {\n  const { orientation = \"vertical\", ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React2.useRef(null);\n  const pointerOffsetRef = React2.useRef(0);\n  const [sizes, setSizes] = React2.useState({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 }\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n  const commonProps = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => thumbRef.current = thumb,\n    onThumbPointerUp: () => pointerOffsetRef.current = 0,\n    onThumbPointerDown: (pointerPos) => pointerOffsetRef.current = pointerPos\n  };\n  function getScrollPosition(pointerPos, dir) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n  if (orientation === \"horizontal\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarX,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }\n      }\n    );\n  }\n  if (orientation === \"vertical\") {\n    return /* @__PURE__ */ jsx(\n      ScrollAreaScrollbarY,\n      {\n        ...commonProps,\n        ref: forwardedRef,\n        onThumbPositionChange: () => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        },\n        onWheelScroll: (scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        },\n        onDragScroll: (pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }\n      }\n    );\n  }\n  return null;\n});\nvar ScrollAreaScrollbarX = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"horizontal\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        bottom: 0,\n        left: context.dir === \"rtl\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        right: context.dir === \"ltr\" ? \"var(--radix-scroll-area-corner-width)\" : 0,\n        [\"--radix-scroll-area-thumb-width\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.x),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.x),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar ScrollAreaScrollbarY = React2.forwardRef((props, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React2.useState();\n  const ref = React2.useRef(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n  React2.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n  return /* @__PURE__ */ jsx(\n    ScrollAreaScrollbarImpl,\n    {\n      \"data-orientation\": \"vertical\",\n      ...scrollbarProps,\n      ref: composeRefs,\n      sizes,\n      style: {\n        top: 0,\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: \"var(--radix-scroll-area-corner-height)\",\n        [\"--radix-scroll-area-thumb-height\"]: getThumbSize(sizes) + \"px\",\n        ...props.style\n      },\n      onThumbPointerDown: (pointerPos) => props.onThumbPointerDown(pointerPos.y),\n      onDragScroll: (pointerPos) => props.onDragScroll(pointerPos.y),\n      onWheelScroll: (event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      },\n      onResize: () => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom)\n            }\n          });\n        }\n      }\n    }\n  );\n});\nvar [ScrollbarProvider, useScrollbarContext] = createScrollAreaContext(SCROLLBAR_NAME);\nvar ScrollAreaScrollbarImpl = React2.forwardRef((props, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React2.useState(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React2.useRef(null);\n  const prevWebkitUserSelectRef = React2.useRef(\"\");\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n  function handleDragScroll(event) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n  React2.useEffect(() => {\n    const handleWheel = (event) => {\n      const element = event.target;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener(\"wheel\", handleWheel, { passive: false });\n    return () => document.removeEventListener(\"wheel\", handleWheel, { passive: false });\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n  React2.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n  return /* @__PURE__ */ jsx(\n    ScrollbarProvider,\n    {\n      scope: __scopeScrollArea,\n      scrollbar,\n      hasThumb,\n      onThumbChange: useCallbackRef(onThumbChange),\n      onThumbPointerUp: useCallbackRef(onThumbPointerUp),\n      onThumbPositionChange: handleThumbPositionChange,\n      onThumbPointerDown: useCallbackRef(onThumbPointerDown),\n      children: /* @__PURE__ */ jsx(\n        Primitive.div,\n        {\n          ...scrollbarProps,\n          ref: composeRefs,\n          style: { position: \"absolute\", ...scrollbarProps.style },\n          onPointerDown: composeEventHandlers(props.onPointerDown, (event) => {\n            const mainPointer = 0;\n            if (event.button === mainPointer) {\n              const element = event.target;\n              element.setPointerCapture(event.pointerId);\n              rectRef.current = scrollbar.getBoundingClientRect();\n              prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n              document.body.style.webkitUserSelect = \"none\";\n              if (context.viewport) context.viewport.style.scrollBehavior = \"auto\";\n              handleDragScroll(event);\n            }\n          }),\n          onPointerMove: composeEventHandlers(props.onPointerMove, handleDragScroll),\n          onPointerUp: composeEventHandlers(props.onPointerUp, (event) => {\n            const element = event.target;\n            if (element.hasPointerCapture(event.pointerId)) {\n              element.releasePointerCapture(event.pointerId);\n            }\n            document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n            if (context.viewport) context.viewport.style.scrollBehavior = \"\";\n            rectRef.current = null;\n          })\n        }\n      )\n    }\n  );\n});\nvar THUMB_NAME = \"ScrollAreaThumb\";\nvar ScrollAreaThumb = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || scrollbarContext.hasThumb, children: /* @__PURE__ */ jsx(ScrollAreaThumbImpl, { ref: forwardedRef, ...thumbProps }) });\n  }\n);\nvar ScrollAreaThumbImpl = React2.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(\n      forwardedRef,\n      (node) => scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React2.useRef(void 0);\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = void 0;\n      }\n    }, 100);\n    React2.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener(\"scroll\", handleScroll);\n        return () => viewport.removeEventListener(\"scroll\", handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n    return /* @__PURE__ */ jsx(\n      Primitive.div,\n      {\n        \"data-state\": scrollbarContext.hasThumb ? \"visible\" : \"hidden\",\n        ...thumbProps,\n        ref: composedRef,\n        style: {\n          width: \"var(--radix-scroll-area-thumb-width)\",\n          height: \"var(--radix-scroll-area-thumb-height)\",\n          ...style\n        },\n        onPointerDownCapture: composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        }),\n        onPointerUp: composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)\n      }\n    );\n  }\n);\nScrollAreaThumb.displayName = THUMB_NAME;\nvar CORNER_NAME = \"ScrollAreaCorner\";\nvar ScrollAreaCorner = React2.forwardRef(\n  (props, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== \"scroll\" && hasBothScrollbarsVisible;\n    return hasCorner ? /* @__PURE__ */ jsx(ScrollAreaCornerImpl, { ...props, ref: forwardedRef }) : null;\n  }\n);\nScrollAreaCorner.displayName = CORNER_NAME;\nvar ScrollAreaCornerImpl = React2.forwardRef((props, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React2.useState(0);\n  const [height, setHeight] = React2.useState(0);\n  const hasSize = Boolean(width && height);\n  useResizeObserver(context.scrollbarX, () => {\n    const height2 = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height2);\n    setHeight(height2);\n  });\n  useResizeObserver(context.scrollbarY, () => {\n    const width2 = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width2);\n    setWidth(width2);\n  });\n  return hasSize ? /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      ...cornerProps,\n      ref: forwardedRef,\n      style: {\n        width,\n        height,\n        position: \"absolute\",\n        right: context.dir === \"ltr\" ? 0 : void 0,\n        left: context.dir === \"rtl\" ? 0 : void 0,\n        bottom: 0,\n        ...props.style\n      }\n    }\n  ) : null;\n});\nfunction toInt(value) {\n  return value ? parseInt(value, 10) : 0;\n}\nfunction getThumbRatio(viewportSize, contentSize) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\nfunction getThumbSize(sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  return Math.max(thumbSize, 18);\n}\nfunction getScrollPositionFromPointer(pointerPos, pointerOffset, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange);\n  return interpolate(pointerPos);\n}\nfunction getThumbOffsetFromScroll(scrollPos, sizes, dir = \"ltr\") {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === \"ltr\" ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\nfunction linearScale(input, output) {\n  return (value) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\nfunction isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\nvar addUnlinkedScrollListener = (node, handler = () => {\n}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\nfunction useDebounceCallback(callback, delay) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React2.useRef(0);\n  React2.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React2.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\nfunction useResizeObserver(element, onResize) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\nvar Root = ScrollArea;\nvar Viewport = ScrollAreaViewport;\nvar Scrollbar = ScrollAreaScrollbar;\nvar Thumb = ScrollAreaThumb;\nvar Corner = ScrollAreaCorner;\nexport {\n  Corner,\n  Root,\n  ScrollArea,\n  ScrollAreaCorner,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaViewport,\n  Scrollbar,\n  Thumb,\n  Viewport,\n  createScrollAreaScope\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from \"react\"\r\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n))\r\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\r\n\r\nconst ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n))\r\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\r\n\r\nexport { ScrollArea, ScrollBar }"],"names":["SCROLL_AREA_NAME","createScrollAreaContext","createContextScope","ScrollAreaProvider","useScrollAreaContext","ScrollArea","React2.forwardRef","props","forwardedRef","__scopeScrollArea","type","dir","scrollHideDelay","scrollAreaProps","scrollArea","setScrollArea","React2.useState","viewport","setViewport","content","setContent","scrollbarX","setScrollbarX","scrollbarY","setScrollbarY","cornerWidth","setCornerWidth","cornerHeight","setCornerHeight","scrollbarXEnabled","setScrollbarXEnabled","scrollbarYEnabled","setScrollbarYEnabled","composedRefs","useComposedRefs","node","direction","useDirection","jsx","scope","onViewportChange","onContentChange","onScrollbarXChange","onScrollbarXEnabledChange","onScrollbarYChange","onScrollbarYEnabledChange","onCornerWidthChange","onCornerHeightChange","children","Primitive","div","ref","style","position","displayName","VIEWPORT_NAME","ScrollAreaViewport","nonce","viewportProps","context","React2.useRef","jsxs","Fragment","dangerouslySetInnerHTML","__html","overflowX","overflowY","minWidth","display","SCROLLBAR_NAME","ScrollAreaScrollbar","forceMount","scrollbarProps","isHorizontal","orientation","React2.useEffect","ScrollAreaScrollbarHover","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible","visible","setVisible","hideTimer","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","addEventListener","removeEventListener","Presence","present","debounceScrollEnd","useDebounceCallback","send","state","initialState","machine","hidden","SCROLL","scrolling","SCROLL_END","POINTER_ENTER","interacting","POINTER_LEAVE","idle","HIDE","React.useReducer","event","scrollDirection","prevScrollPos","handleScroll","scrollPos","onPointerEnter","composeEventHandlers","onPointerLeave","handleResize","isOverflowX","offsetWidth","scrollWidth","isOverflowY","offsetHeight","scrollHeight","useResizeObserver","thumbRef","pointerOffsetRef","sizes","setSizes","scrollbar","size","paddingStart","paddingEnd","thumbRatio","getThumbRatio","commonProps","onSizesChange","hasThumb","Boolean","onThumbChange","thumb","current","onThumbPointerUp","onThumbPointerDown","pointerPos","getScrollPosition","pointerOffset","thumbSizePx","getThumbSize","thumbCenter","offset","thumbOffsetFromEnd","minPointerPos","maxPointerPos","maxScrollPos","scrollRange","linearScale","interpolate","getScrollPositionFromPointer","ScrollAreaScrollbarX","onThumbPositionChange","getThumbOffsetFromScroll","scrollLeft","transform","onWheelScroll","onDragScroll","ScrollAreaScrollbarY","scrollTop","computedStyle","setComputedStyle","composeRefs","getComputedStyle","ScrollAreaScrollbarImpl","bottom","left","right","x","deltaX","isScrollingWithinScrollbarBounds","preventDefault","onResize","clientWidth","toInt","paddingLeft","paddingRight","top","y","deltaY","clientHeight","paddingTop","paddingBottom","ScrollbarProvider","useScrollbarContext","setScrollbar","rectRef","prevWebkitUserSelectRef","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleDragScroll","clientX","clientY","handleWheel","element","target","isScrollbarWheel","contains","document","passive","onPointerDown","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","scrollBehavior","onPointerMove","onPointerUp","hasPointerCapture","releasePointerCapture","THUMB_NAME","ScrollAreaThumb","thumbProps","scrollbarContext","ScrollAreaThumbImpl","scrollAreaContext","composedRef","removeUnlinkedScrollListenerRef","listener","addUnlinkedScrollListener","width","height","onPointerDownCapture","thumbRect","CORNER_NAME","ScrollAreaCorner","hasBothScrollbarsVisible","ScrollAreaCornerImpl","cornerProps","setWidth","setHeight","hasSize","height2","width2","value","parseInt","viewportSize","contentSize","ratio","isNaN","scrollbarPadding","thumbSize","Math","max","maxThumbPos","scrollWithoutMomentum","clamp","input","output","handler","prevPosition","rAF","loop","isHorizontalScroll","isVerticalScroll","requestAnimationFrame","cancelAnimationFrame","callback","delay","handleCallback","debounceTimerRef","React2.useCallback","useLayoutEffect","resizeObserver","ResizeObserver","observe","unobserve","Root","Viewport","Corner","React.forwardRef","className","ScrollAreaPrimitive.Root","cn","ScrollAreaPrimitive.Viewport","ScrollBar","ScrollAreaPrimitive.Corner","ScrollAreaPrimitive.ScrollAreaScrollbar","ScrollAreaPrimitive.ScrollAreaThumb"],"mappings":"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","x_google_ignoreList":[0]}