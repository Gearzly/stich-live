{"version":3,"file":"ChatPage-CXvXgm6e.js","sources":["../../../node_modules/devlop/lib/default.js","../../../node_modules/estree-util-is-identifier-name/lib/index.js","../../../node_modules/hast-util-whitespace/lib/index.js","../../../node_modules/property-information/lib/util/schema.js","../../../node_modules/property-information/lib/util/merge.js","../../../node_modules/property-information/lib/normalize.js","../../../node_modules/property-information/lib/util/info.js","../../../node_modules/property-information/lib/util/types.js","../../../node_modules/property-information/lib/util/defined-info.js","../../../node_modules/property-information/lib/util/create.js","../../../node_modules/property-information/lib/aria.js","../../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../../node_modules/property-information/lib/html.js","../../../node_modules/property-information/lib/svg.js","../../../node_modules/property-information/lib/xlink.js","../../../node_modules/property-information/lib/xmlns.js","../../../node_modules/property-information/lib/xml.js","../../../node_modules/property-information/lib/hast-to-react.js","../../../node_modules/property-information/lib/find.js","../../../node_modules/property-information/index.js","../../../node_modules/style-to-object/cjs/index.js","../../../node_modules/inline-style-parser/index.js","../../../node_modules/style-to-js/cjs/utilities.js","../../../node_modules/style-to-js/cjs/index.js","../../../node_modules/unist-util-position/lib/index.js","../../../node_modules/unist-util-stringify-position/lib/index.js","../../../node_modules/vfile-message/lib/index.js","../../../node_modules/hast-util-to-jsx-runtime/lib/index.js","../../../node_modules/comma-separated-tokens/index.js","../../../node_modules/space-separated-tokens/index.js","../../../node_modules/html-url-attributes/lib/index.js","../../../node_modules/mdast-util-to-string/lib/index.js","../../../node_modules/decode-named-character-reference/index.dom.js","../../../node_modules/micromark-util-chunked/index.js","../../../node_modules/micromark-util-combine-extensions/index.js","../../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../../node_modules/micromark-util-normalize-identifier/index.js","../../../node_modules/micromark-util-character/index.js","../../../node_modules/micromark-util-sanitize-uri/index.js","../../../node_modules/micromark-factory-space/index.js","../../../node_modules/micromark/lib/initialize/content.js","../../../node_modules/micromark/lib/initialize/document.js","../../../node_modules/micromark-util-classify-character/index.js","../../../node_modules/micromark-util-resolve-all/index.js","../../../node_modules/micromark-core-commonmark/lib/attention.js","../../../node_modules/micromark-core-commonmark/lib/autolink.js","../../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../../node_modules/micromark-core-commonmark/lib/code-text.js","../../../node_modules/micromark-util-subtokenize/lib/splice-buffer.js","../../../node_modules/micromark-util-subtokenize/index.js","../../../node_modules/micromark-core-commonmark/lib/content.js","../../../node_modules/micromark-factory-destination/index.js","../../../node_modules/micromark-factory-label/index.js","../../../node_modules/micromark-factory-title/index.js","../../../node_modules/micromark-factory-whitespace/index.js","../../../node_modules/micromark-core-commonmark/lib/definition.js","../../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../../node_modules/micromark-util-html-tag-name/index.js","../../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../../node_modules/micromark-core-commonmark/lib/html-text.js","../../../node_modules/micromark-core-commonmark/lib/label-end.js","../../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../../node_modules/micromark-core-commonmark/lib/list.js","../../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../../node_modules/micromark/lib/initialize/flow.js","../../../node_modules/micromark/lib/initialize/text.js","../../../node_modules/micromark/lib/constructs.js","../../../node_modules/micromark/lib/create-tokenizer.js","../../../node_modules/micromark/lib/parse.js","../../../node_modules/micromark/lib/preprocess.js","../../../node_modules/micromark-util-decode-string/index.js","../../../node_modules/mdast-util-from-markdown/lib/index.js","../../../node_modules/micromark/lib/postprocess.js","../../../node_modules/remark-parse/lib/index.js","../../../node_modules/mdast-util-to-hast/lib/revert.js","../../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../../node_modules/trim-lines/index.js","../../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../../../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../../node_modules/@ungap/structured-clone/esm/types.js","../../../node_modules/@ungap/structured-clone/esm/deserialize.js","../../../node_modules/@ungap/structured-clone/esm/serialize.js","../../../node_modules/@ungap/structured-clone/esm/index.js","../../../node_modules/mdast-util-to-hast/lib/footer.js","../../../node_modules/unist-util-is/lib/index.js","../../../node_modules/unist-util-visit-parents/lib/index.js","../../../node_modules/unist-util-visit/lib/index.js","../../../node_modules/mdast-util-to-hast/lib/state.js","../../../node_modules/mdast-util-to-hast/lib/index.js","../../../node_modules/remark-rehype/lib/index.js","../../../node_modules/bail/index.js","../../../node_modules/extend/index.js","../../../node_modules/is-plain-obj/index.js","../../../node_modules/trough/lib/index.js","../../../node_modules/vfile/lib/minpath.browser.js","../../../node_modules/vfile/lib/minproc.browser.js","../../../node_modules/vfile/lib/minurl.shared.js","../../../node_modules/vfile/lib/minurl.browser.js","../../../node_modules/vfile/lib/index.js","../../../node_modules/unified/lib/callable-instance.js","../../../node_modules/unified/lib/index.js","../../../node_modules/react-markdown/lib/index.js","../../../node_modules/date-fns/constants.js","../../../node_modules/date-fns/constructFrom.js","../../../node_modules/date-fns/toDate.js","../../../node_modules/date-fns/_lib/defaultOptions.js","../../../node_modules/date-fns/startOfWeek.js","../../../node_modules/date-fns/startOfISOWeek.js","../../../node_modules/date-fns/getISOWeekYear.js","../../../node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.js","../../../node_modules/date-fns/startOfDay.js","../../../node_modules/date-fns/differenceInCalendarDays.js","../../../node_modules/date-fns/_lib/normalizeDates.js","../../../node_modules/date-fns/isValid.js","../../../node_modules/date-fns/isDate.js","../../../node_modules/date-fns/locale/en-US/_lib/formatDistance.js","../../../node_modules/date-fns/locale/_lib/buildFormatLongFn.js","../../../node_modules/date-fns/locale/en-US/_lib/formatLong.js","../../../node_modules/date-fns/locale/en-US/_lib/formatRelative.js","../../../node_modules/date-fns/locale/_lib/buildLocalizeFn.js","../../../node_modules/date-fns/locale/_lib/buildMatchFn.js","../../../node_modules/date-fns/locale/_lib/buildMatchPatternFn.js","../../../node_modules/date-fns/locale/en-US.js","../../../node_modules/date-fns/locale/en-US/_lib/localize.js","../../../node_modules/date-fns/locale/en-US/_lib/match.js","../../../node_modules/date-fns/getDayOfYear.js","../../../node_modules/date-fns/startOfYear.js","../../../node_modules/date-fns/getISOWeek.js","../../../node_modules/date-fns/startOfISOWeekYear.js","../../../node_modules/date-fns/getWeekYear.js","../../../node_modules/date-fns/getWeek.js","../../../node_modules/date-fns/startOfWeekYear.js","../../../node_modules/date-fns/_lib/addLeadingZeros.js","../../../node_modules/date-fns/_lib/format/lightFormatters.js","../../../node_modules/date-fns/_lib/format/formatters.js","../../../node_modules/date-fns/_lib/format/longFormatters.js","../../../node_modules/date-fns/_lib/protectedTokens.js","../../../node_modules/date-fns/format.js","../../../src/components/chat/Messages.tsx","../../../src/components/ui/textarea.tsx","../../../src/components/chat/ChatInput.tsx","../../../src/components/file-manager/EnhancedFileManager.tsx","../../../src/components/blueprint/BlueprintCanvas.tsx","../../../src/components/blueprint/BlueprintProperties.tsx","../../../src/components/blueprint/BlueprintEditor.tsx","../../../src/components/blueprint/BlueprintIntegration.tsx","../../../src/components/phase/PhaseTimeline.tsx","../../../src/components/debug/DebugPanel.tsx","../../../src/components/chat/AdvancedChat.tsx","../../../src/components/phase/CompactPhaseDisplay.tsx","../../../src/hooks/useChat.ts","../../../src/routes/ChatPage.tsx"],"sourcesContent":["export function deprecate(fn) {\n  return fn\n}\n\nexport function equal() {}\n\nexport function ok() {}\n\nexport function unreachable() {}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @import {Schema as SchemaType, Space} from 'property-information'\n */\n\n/** @type {SchemaType} */\nexport class Schema {\n  /**\n   * @param {SchemaType['property']} property\n   *   Property.\n   * @param {SchemaType['normal']} normal\n   *   Normal.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Schema.\n   */\n  constructor(property, normal, space) {\n    this.normal = normal\n    this.property = property\n\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\nSchema.prototype.normal = {}\nSchema.prototype.property = {}\nSchema.prototype.space = undefined\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {ReadonlyArray<Schema>} definitions\n *   Definitions.\n * @param {Space | undefined} [space]\n *   Space.\n * @returns {Schema}\n *   Schema.\n */\nexport function merge(definitions, space) {\n  /** @type {Record<string, Info>} */\n  const property = {}\n  /** @type {Record<string, string>} */\n  const normal = {}\n\n  for (const definition of definitions) {\n    Object.assign(property, definition.property)\n    Object.assign(normal, definition.normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * Get the cleaned case insensitive form of an attribute or property.\n *\n * @param {string} value\n *   An attribute-like or property-like name.\n * @returns {string}\n *   Value that can be used to look up the properly cased property on a\n *   `Schema`.\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","/**\n * @import {Info as InfoType} from 'property-information'\n */\n\n/** @type {InfoType} */\nexport class Info {\n  /**\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute) {\n    this.attribute = attribute\n    this.property = property\n  }\n}\n\nInfo.prototype.attribute = ''\nInfo.prototype.booleanish = false\nInfo.prototype.boolean = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.defined = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.number = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.property = ''\nInfo.prototype.spaceSeparated = false\nInfo.prototype.space = undefined\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * @import {Space} from 'property-information'\n */\n\nimport {Info} from './info.js'\nimport * as types from './types.js'\n\nconst checks = /** @type {ReadonlyArray<keyof typeof types>} */ (\n  Object.keys(types)\n)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   *   Property.\n   * @param {string} attribute\n   *   Attribute.\n   * @param {number | null | undefined} [mask]\n   *   Mask.\n   * @param {Space | undefined} [space]\n   *   Space.\n   * @returns\n   *   Info.\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @template {keyof DefinedInfo} Key\n *   Key type.\n * @param {DefinedInfo} values\n *   Info.\n * @param {Key} key\n *   Key.\n * @param {DefinedInfo[Key]} value\n *   Value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n","import {create} from './util/create.js'\nimport {booleanish, number, spaceSeparated} from './util/types.js'\n\nexport const aria = create({\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  },\n  transform(_, property) {\n    return property === 'role'\n      ? property\n      : 'aria-' + property.slice(4).toLowerCase()\n  }\n})\n","/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} attribute\n *   Attribute.\n * @returns {string}\n *   Transformed attribute.\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Transformed property.\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  booleanish,\n  boolean,\n  commaSeparated,\n  number,\n  overloadedBoolean,\n  spaceSeparated\n} from './util/types.js'\n\nexport const html = create({\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: overloadedBoolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootClonable: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n    writingSuggestions: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  },\n  space: 'html',\n  transform: caseInsensitiveTransform\n})\n","import {caseSensitiveTransform} from './util/case-sensitive-transform.js'\nimport {create} from './util/create.js'\nimport {\n  boolean,\n  commaOrSpaceSeparated,\n  commaSeparated,\n  number,\n  spaceSeparated\n} from './util/types.js'\n\nexport const svg = create({\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  },\n  space: 'svg',\n  transform: caseSensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  },\n  space: 'xlink',\n  transform(_, property) {\n    return 'xlink:' + property.slice(5).toLowerCase()\n  }\n})\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  properties: {xmlnsXLink: null, xmlns: null},\n  space: 'xmlns',\n  transform: caseInsensitiveTransform\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  properties: {xmlBase: null, xmlLang: null, xmlSpace: null},\n  space: 'xml',\n  transform(_, property) {\n    return 'xml:' + property.slice(3).toLowerCase()\n  }\n})\n","/**\n * Special cases for React (`Record<string, string>`).\n *\n * `hast` is close to `React` but differs in a couple of cases.\n * To get a React property from a hast property,\n * check if it is in `hastToReact`.\n * If it is, use the corresponding value;\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @import {Schema} from 'property-information'\n */\n\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\nimport {normalize} from './normalize.js'\n\nconst cap = /[A-Z]/g\nconst dash = /-[a-z]/g\nconst valid = /^data[-\\w.:]+$/i\n\n/**\n * Look up info on a property.\n *\n * In most cases the given `schema` contains info on the property.\n * All standard,\n * most legacy,\n * and some non-standard properties are supported.\n * For these cases,\n * the returned `Info` has hints about the value of the property.\n *\n * `name` can also be a valid data attribute or property,\n * in which case an `Info` object with the correctly cased `attribute` and\n * `property` is returned.\n *\n * `name` can be an unknown attribute,\n * in which case an `Info` object with `attribute` and `property` set to the\n * given name is returned.\n * It is not recommended to provide unsupported legacy or recently specced\n * properties.\n *\n *\n * @param {Schema} schema\n *   Schema;\n *   either the `html` or `svg` export.\n * @param {string} value\n *   An attribute-like or property-like name;\n *   it will be passed through `normalize` to hopefully find the correct info.\n * @returns {Info}\n *   Info.\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let property = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      property = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(property, value)\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Kebab.\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n *   Value.\n * @returns {string}\n *   Camel.\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","// Note: types exposed from `index.d.ts`.\nimport {merge} from './lib/util/merge.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\nimport {xlink} from './lib/xlink.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {xml} from './lib/xml.js'\n\nexport {hastToReact} from './lib/hast-to-react.js'\n\nexport const html = merge([aria, htmlBase, xlink, xmlns, xml], 'html')\n\nexport {find} from './lib/find.js'\nexport {normalize} from './lib/normalize.js'\n\nexport const svg = merge([aria, svgBase, xlink, xmlns, xml], 'svg')\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StyleToObject;\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\n//# sourceMappingURL=index.js.map","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.camelCase = void 0;\nvar CUSTOM_PROPERTY_REGEX = /^--[a-zA-Z0-9_-]+$/;\nvar HYPHEN_REGEX = /-([a-z])/g;\nvar NO_HYPHEN_REGEX = /^[^-]+$/;\nvar VENDOR_PREFIX_REGEX = /^-(webkit|moz|ms|o|khtml)-/;\nvar MS_VENDOR_PREFIX_REGEX = /^-(ms)-/;\n/**\n * Checks whether to skip camelCase.\n */\nvar skipCamelCase = function (property) {\n    return !property ||\n        NO_HYPHEN_REGEX.test(property) ||\n        CUSTOM_PROPERTY_REGEX.test(property);\n};\n/**\n * Replacer that capitalizes first character.\n */\nvar capitalize = function (match, character) {\n    return character.toUpperCase();\n};\n/**\n * Replacer that removes beginning hyphen of vendor prefix property.\n */\nvar trimHyphen = function (match, prefix) { return \"\".concat(prefix, \"-\"); };\n/**\n * CamelCases a CSS property.\n */\nvar camelCase = function (property, options) {\n    if (options === void 0) { options = {}; }\n    if (skipCamelCase(property)) {\n        return property;\n    }\n    property = property.toLowerCase();\n    if (options.reactCompat) {\n        // `-ms` vendor prefix should not be capitalized\n        property = property.replace(MS_VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    else {\n        // for non-React, remove first hyphen so vendor prefix is not capitalized\n        property = property.replace(VENDOR_PREFIX_REGEX, trimHyphen);\n    }\n    return property.replace(HYPHEN_REGEX, capitalize);\n};\nexports.camelCase = camelCase;\n//# sourceMappingURL=utilities.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar style_to_object_1 = __importDefault(require(\"style-to-object\"));\nvar utilities_1 = require(\"./utilities\");\n/**\n * Parses CSS inline style to JavaScript object (camelCased).\n */\nfunction StyleToJS(style, options) {\n    var output = {};\n    if (!style || typeof style !== 'string') {\n        return output;\n    }\n    (0, style_to_object_1.default)(style, function (property, value) {\n        // skip CSS comment\n        if (property && value) {\n            output[(0, utilities_1.camelCase)(property, options)] = value;\n        }\n    });\n    return output;\n}\nStyleToJS.default = StyleToJS;\nmodule.exports = StyleToJS;\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file = ''\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual = undefined\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected = undefined\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note = undefined\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url = undefined\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","/**\n * @import {Identifier, Literal, MemberExpression} from 'estree'\n * @import {Jsx, JsxDev, Options, Props} from 'hast-util-to-jsx-runtime'\n * @import {Element, Nodes, Parents, Root, Text} from 'hast'\n * @import {MdxFlowExpressionHast, MdxTextExpressionHast} from 'mdast-util-mdx-expression'\n * @import {MdxJsxFlowElementHast, MdxJsxTextElementHast} from 'mdast-util-mdx-jsx'\n * @import {MdxjsEsmHast} from 'mdast-util-mdxjs-esm'\n * @import {Position} from 'unist'\n * @import {Child, Create, Field, JsxElement, State, Style} from './types.js'\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToJs from 'style-to-js'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\n// To do: next major: `Object.hasOwn`.\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JsxElement}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpressionHast | MdxTextExpressionHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsmHast} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElementHast | MdxJsxTextElementHast} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  try {\n    return styleToJs(value, {reactCompat: true})\n  } catch (error) {\n    if (state.ignoreInvalidStyle) {\n      return {}\n    }\n\n    const cause = /** @type {Error} */ (error)\n    const message = new VFileMessage('Cannot parse `style` attribute', {\n      ancestors: state.ancestors,\n      cause,\n      ruleId: 'style',\n      source: 'hast-util-to-jsx-runtime'\n    })\n    message.file = state.filePath || undefined\n    message.url = docs + '#cannot-parse-style-attribute'\n\n    throw message\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {string | number} */ (result.value)\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/// <reference lib=\"dom\" />\n\n/* global document */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string | false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const character = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  if (\n    // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n    // yield `null`.\n    character.charCodeAt(character.length - 1) === 59 /* `;` */ &&\n    value !== 'semi'\n  ) {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return character === characterReference ? false : character\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length;\n  let chunkStart = 0;\n  /** @type {Array<unknown>} */\n  let parameters;\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n  remove = remove > 0 ? remove : 0;\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove);\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items);\n    return list;\n  }\n  return items;\n}","/**\n * @import {\n *   Extension,\n *   Handles,\n *   HtmlExtension,\n *   NormalizedExtension\n * } from 'micromark-util-types'\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {ReadonlyArray<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n *   List of constructs to merge into.\n * @param {Array<unknown>} list\n *   List of constructs to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {ReadonlyArray<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   Single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n *   Nothing.\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return value\n  // Collapse markdown whitespace.\n  .replace(/[\\t\\n\\r ]+/g, \" \")\n  // Trim.\n  .replace(/^ | $/g, '')\n  // Some characters are considered “uppercase”, but if their lowercase\n  // counterpart is uppercased will result in a different uppercase\n  // character.\n  // Hence, to get that form, we perform both lower- and uppercase.\n  // Upper case makes sure keys will not interact with default prototypal\n  // methods: no method is uppercase.\n  .toLowerCase().toUpperCase();\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n *   Expression.\n * @returns {(code: Code) => boolean}\n *   Check.\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","import { asciiAlphanumeric } from 'micromark-util-character';\nimport { encode } from 'micromark-util-encode';\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''));\n  if (!protocol) {\n    return value;\n  }\n  const colon = value.indexOf(':');\n  const questionMark = value.indexOf('?');\n  const numberSign = value.indexOf('#');\n  const slash = value.indexOf('/');\n  if (\n  // If there is no protocol, it’s relative.\n  colon < 0 ||\n  // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n  slash > -1 && colon > slash || questionMark > -1 && colon > questionMark || numberSign > -1 && colon > numberSign ||\n  // It is a protocol, it should be allowed.\n  protocol.test(value.slice(0, colon))) {\n    return value;\n  }\n  return '';\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = [];\n  let index = -1;\n  let start = 0;\n  let skip = 0;\n  while (++index < value.length) {\n    const code = value.charCodeAt(index);\n    /** @type {string} */\n    let replace = '';\n\n    // A correct percent encoded value.\n    if (code === 37 && asciiAlphanumeric(value.charCodeAt(index + 1)) && asciiAlphanumeric(value.charCodeAt(index + 2))) {\n      skip = 2;\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code);\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1);\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next);\n        skip = 1;\n      }\n      // Lone surrogate.\n      else {\n        replace = \"\\uFFFD\";\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code);\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace));\n      start = index + skip + 1;\n      replace = '';\n    }\n    if (skip) {\n      index += skip;\n      skip = 0;\n    }\n  }\n  return result.join('') + value.slice(start);\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { markdownSpace } from 'micromark-util-character';\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type);\n      return prefix(code);\n    }\n    return ok(code);\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code);\n      return prefix;\n    }\n    effects.exit(type);\n    return ok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Initializer}\n *   Content.\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(this.parser.constructs.contentInitial, afterContentStartConstruct, paragraphInitial);\n  /** @type {Token} */\n  let previous;\n  return contentStart;\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, contentStart, \"linePrefix\");\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter(\"paragraph\");\n    return lineStart(code);\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter(\"chunkText\", {\n      contentType: \"text\",\n      previous\n    });\n    if (previous) {\n      previous.next = token;\n    }\n    previous = token;\n    return data(code);\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit(\"chunkText\");\n      effects.exit(\"paragraph\");\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      effects.exit(\"chunkText\");\n      return lineStart;\n    }\n\n    // Data.\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * @import {\n *   Construct,\n *   ContainerState,\n *   InitialConstruct,\n *   Initializer,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n *   Construct and its state.\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n};\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeDocument(effects) {\n  const self = this;\n  /** @type {Array<StackItem>} */\n  const stack = [];\n  let continued = 0;\n  /** @type {TokenizeContext | undefined} */\n  let childFlow;\n  /** @type {Token | undefined} */\n  let childToken;\n  /** @type {number} */\n  let lineStartOffset;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued];\n      self.containerState = item[1];\n      return effects.attempt(item[0].continuation, documentContinue, checkNewContainers)(code);\n    }\n\n    // Done.\n    return checkNewContainers(code);\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++;\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined;\n      if (childFlow) {\n        closeFlow();\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          point = self.events[indexBeforeFlow][1].end;\n          break;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      let index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n      return checkNewContainers(code);\n    }\n    return start(code);\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code);\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code);\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack);\n    }\n\n    // Check if there is a new container.\n    self.containerState = {};\n    return effects.check(containerConstruct, thereIsANewContainer, thereIsNoNewContainer)(code);\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow();\n    exitContainers(continued);\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length;\n    lineStartOffset = self.now().offset;\n    return flowStart(code);\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {};\n    return effects.attempt(containerConstruct, containerContinue, flowStart)(code);\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++;\n    stack.push([self.currentConstruct, self.containerState]);\n    // Try another.\n    return documentContinued(code);\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow();\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    childFlow = childFlow || self.parser.flow(self.now());\n    effects.enter(\"chunkFlow\", {\n      _tokenizer: childFlow,\n      contentType: \"flow\",\n      previous: childToken\n    });\n    return flowContinue(code);\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit(\"chunkFlow\"), true);\n      exitContainers(0);\n      effects.consume(code);\n      return;\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code);\n      writeToChild(effects.exit(\"chunkFlow\"));\n      // Get ready for the next line.\n      continued = 0;\n      self.interrupt = undefined;\n      return start;\n    }\n    effects.consume(code);\n    return flowContinue;\n  }\n\n  /**\n   * @param {Token} token\n   *   Token.\n   * @param {boolean | undefined} [endOfFile]\n   *   Whether the token is at the end of the file (default: `false`).\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function writeToChild(token, endOfFile) {\n    const stream = self.sliceStream(token);\n    if (endOfFile) stream.push(null);\n    token.previous = childToken;\n    if (childToken) childToken.next = token;\n    childToken = token;\n    childFlow.defineSkip(token.start);\n    childFlow.write(stream);\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length;\n      while (index--) {\n        if (\n        // The token starts before the line ending…\n        childFlow.events[index][1].start.offset < lineStartOffset && (\n        // …and either is not ended yet…\n        !childFlow.events[index][1].end ||\n        // …or ends after it.\n        childFlow.events[index][1].end.offset > lineStartOffset)) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return;\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length;\n      let indexBeforeFlow = indexBeforeExits;\n      /** @type {boolean | undefined} */\n      let seen;\n      /** @type {Point | undefined} */\n      let point;\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (self.events[indexBeforeFlow][0] === 'exit' && self.events[indexBeforeFlow][1].type === \"chunkFlow\") {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end;\n            break;\n          }\n          seen = true;\n        }\n      }\n      exitContainers(continued);\n\n      // Fix positions.\n      index = indexBeforeExits;\n      while (index < self.events.length) {\n        self.events[index][1].end = {\n          ...point\n        };\n        index++;\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(self.events, indexBeforeFlow + 1, 0, self.events.slice(indexBeforeExits));\n\n      // Discard the duplicate exits.\n      self.events.length = index;\n    }\n  }\n\n  /**\n   * @param {number} size\n   *   Size.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exitContainers(size) {\n    let index = stack.length;\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index];\n      self.containerState = entry[1];\n      entry[0].exit.call(self, effects);\n    }\n    stack.length = size;\n  }\n  function closeFlow() {\n    childFlow.write([null]);\n    childToken = undefined;\n    childFlow = undefined;\n    self.containerState._closeFlow = undefined;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n *   Tokenizer.\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(effects, effects.attempt(this.parser.constructs.document, ok, nok), \"linePrefix\", this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4);\n}","/**\n * @import {Code} from 'micromark-util-types'\n */\n\nimport { markdownLineEndingOrSpace, unicodePunctuation, unicodeWhitespace } from 'micromark-util-character';\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (code === null || markdownLineEndingOrSpace(code) || unicodeWhitespace(code)) {\n    return 1;\n  }\n  if (unicodePunctuation(code)) {\n    return 2;\n  }\n}","/**\n * @import {Event, Resolver, TokenizeContext} from 'micromark-util-types'\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {ReadonlyArray<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Event,\n *   Point,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { push, splice } from 'micromark-util-chunked';\nimport { classifyCharacter } from 'micromark-util-classify-character';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  resolveAll: resolveAllAttention,\n  tokenize: tokenizeAttention\n};\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1;\n  /** @type {number} */\n  let open;\n  /** @type {Token} */\n  let group;\n  /** @type {Token} */\n  let text;\n  /** @type {Token} */\n  let openingSequence;\n  /** @type {Token} */\n  let closingSequence;\n  /** @type {number} */\n  let use;\n  /** @type {Array<Event>} */\n  let nextEvents;\n  /** @type {number} */\n  let offset;\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (events[index][0] === 'enter' && events[index][1].type === 'attentionSequence' && events[index][1]._close) {\n      open = index;\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (events[open][0] === 'exit' && events[open][1].type === 'attentionSequence' && events[open][1]._open &&\n        // If the markers are the same:\n        context.sliceSerialize(events[open][1]).charCodeAt(0) === context.sliceSerialize(events[index][1]).charCodeAt(0)) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if ((events[open][1]._close || events[index][1]._open) && (events[index][1].end.offset - events[index][1].start.offset) % 3 && !((events[open][1].end.offset - events[open][1].start.offset + events[index][1].end.offset - events[index][1].start.offset) % 3)) {\n            continue;\n          }\n\n          // Number of markers to use from the sequence.\n          use = events[open][1].end.offset - events[open][1].start.offset > 1 && events[index][1].end.offset - events[index][1].start.offset > 1 ? 2 : 1;\n          const start = {\n            ...events[open][1].end\n          };\n          const end = {\n            ...events[index][1].start\n          };\n          movePoint(start, -use);\n          movePoint(end, use);\n          openingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start,\n            end: {\n              ...events[open][1].end\n            }\n          };\n          closingSequence = {\n            type: use > 1 ? \"strongSequence\" : \"emphasisSequence\",\n            start: {\n              ...events[index][1].start\n            },\n            end\n          };\n          text = {\n            type: use > 1 ? \"strongText\" : \"emphasisText\",\n            start: {\n              ...events[open][1].end\n            },\n            end: {\n              ...events[index][1].start\n            }\n          };\n          group = {\n            type: use > 1 ? \"strong\" : \"emphasis\",\n            start: {\n              ...openingSequence.start\n            },\n            end: {\n              ...closingSequence.end\n            }\n          };\n          events[open][1].end = {\n            ...openingSequence.start\n          };\n          events[index][1].start = {\n            ...closingSequence.end\n          };\n          nextEvents = [];\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [['enter', events[open][1], context], ['exit', events[open][1], context]]);\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [['enter', group, context], ['enter', openingSequence, context], ['exit', openingSequence, context], ['enter', text, context]]);\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(nextEvents, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + 1, index), context));\n\n          // Closing.\n          nextEvents = push(nextEvents, [['exit', text, context], ['enter', closingSequence, context], ['exit', closingSequence, context], ['exit', group, context]]);\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2;\n            nextEvents = push(nextEvents, [['enter', events[index][1], context], ['exit', events[index][1], context]]);\n          } else {\n            offset = 0;\n          }\n          splice(events, open - 1, index - open + 3, nextEvents);\n          index = open + nextEvents.length - offset - 2;\n          break;\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1;\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data';\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null;\n  const previous = this.previous;\n  const before = classifyCharacter(previous);\n\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code;\n    effects.enter('attentionSequence');\n    return inside(code);\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    const token = effects.exit('attentionSequence');\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code);\n\n    // Always populated by defaults.\n\n    const open = !after || after === 2 && before || attentionMarkers.includes(code);\n    const close = !before || before === 2 && after || attentionMarkers.includes(previous);\n    token._open = Boolean(marker === 42 ? open : open && (before || !close));\n    token._close = Boolean(marker === 42 ? close : close && (after || !open));\n    return ok(code);\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n *   Point.\n * @param {number} offset\n *   Amount to move.\n * @returns {undefined}\n *   Nothing.\n */\nfunction movePoint(point, offset) {\n  point.column += offset;\n  point.offset += offset;\n  point._bufferIndex += offset;\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, asciiAtext, asciiControl } from 'micromark-util-character';\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"autolink\");\n    effects.enter(\"autolinkMarker\");\n    effects.consume(code);\n    effects.exit(\"autolinkMarker\");\n    effects.enter(\"autolinkProtocol\");\n    return open;\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return schemeOrEmailAtext;\n    }\n    if (code === 64) {\n      return nok(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1;\n      return schemeInsideOrEmailAtext(code);\n    }\n    return emailAtext(code);\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code);\n      size = 0;\n      return urlInside;\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if ((code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) && size++ < 32) {\n      effects.consume(code);\n      return schemeInsideOrEmailAtext;\n    }\n    size = 0;\n    return emailAtext(code);\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit(\"autolinkProtocol\");\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return urlInside;\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code);\n      return emailAtSignOrDot;\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code);\n      return emailAtext;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code);\n      size = 0;\n      return emailAtSignOrDot;\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit(\"autolinkProtocol\").type = \"autolinkEmail\";\n      effects.enter(\"autolinkMarker\");\n      effects.consume(code);\n      effects.exit(\"autolinkMarker\");\n      effects.exit(\"autolink\");\n      return ok;\n    }\n    return emailValue(code);\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel;\n      effects.consume(code);\n      return next;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blankLine = {\n  partial: true,\n  tokenize: tokenizeBlankLine\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code) ? factorySpace(effects, after, \"linePrefix\")(code) : after(code);\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const blockQuote = {\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit,\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState;\n      if (!state.open) {\n        effects.enter(\"blockQuote\", {\n          _container: true\n        });\n        state.open = true;\n      }\n      effects.enter(\"blockQuotePrefix\");\n      effects.enter(\"blockQuoteMarker\");\n      effects.consume(code);\n      effects.exit(\"blockQuoteMarker\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"blockQuotePrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"blockQuotePrefixWhitespace\");\n      effects.exit(\"blockQuotePrefix\");\n      return ok;\n    }\n    effects.exit(\"blockQuotePrefix\");\n    return ok(code);\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this;\n  return contStart;\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(effects, contBefore, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n    }\n    return contBefore(code);\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code);\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit(\"blockQuote\");\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiPunctuation } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterEscape\");\n    effects.enter(\"escapeMarker\");\n    effects.consume(code);\n    effects.exit(\"escapeMarker\");\n    return inside;\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter(\"characterEscapeValue\");\n      effects.consume(code);\n      effects.exit(\"characterEscapeValue\");\n      effects.exit(\"characterEscape\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { asciiAlphanumeric, asciiDigit, asciiHexDigit } from 'micromark-util-character';\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this;\n  let size = 0;\n  /** @type {number} */\n  let max;\n  /** @type {(code: Code) => boolean} */\n  let test;\n  return start;\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"characterReference\");\n    effects.enter(\"characterReferenceMarker\");\n    effects.consume(code);\n    effects.exit(\"characterReferenceMarker\");\n    return open;\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter(\"characterReferenceMarkerNumeric\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerNumeric\");\n      return numeric;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter(\"characterReferenceMarkerHexadecimal\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarkerHexadecimal\");\n      effects.enter(\"characterReferenceValue\");\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n    effects.enter(\"characterReferenceValue\");\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit(\"characterReferenceValue\");\n      if (test === asciiAlphanumeric && !decodeNamedCharacterReference(self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter(\"characterReferenceMarker\");\n      effects.consume(code);\n      effects.exit(\"characterReferenceMarker\");\n      effects.exit(\"characterReference\");\n      return ok;\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuation\n};\n\n/** @type {Construct} */\nexport const codeFenced = {\n  concrete: true,\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this;\n  /** @type {Construct} */\n  const closeStart = {\n    partial: true,\n    tokenize: tokenizeCloseStart\n  };\n  let initialPrefix = 0;\n  let sizeOpen = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code);\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1];\n    initialPrefix = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n    marker = code;\n    effects.enter(\"codeFenced\");\n    effects.enter(\"codeFencedFence\");\n    effects.enter(\"codeFencedFenceSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++;\n      effects.consume(code);\n      return sequenceOpen;\n    }\n    if (sizeOpen < 3) {\n      return nok(code);\n    }\n    effects.exit(\"codeFencedFenceSequence\");\n    return markdownSpace(code) ? factorySpace(effects, infoBefore, \"whitespace\")(code) : infoBefore(code);\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFencedFence\");\n      return self.interrupt ? ok(code) : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFencedFenceInfo\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return info(code);\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return infoBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceInfo\");\n      return factorySpace(effects, metaBefore, \"whitespace\")(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return info;\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code);\n    }\n    effects.enter(\"codeFencedFenceMeta\");\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return meta(code);\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      effects.exit(\"codeFencedFenceMeta\");\n      return infoBefore(code);\n    }\n    if (code === 96 && code === marker) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return meta;\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code);\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return contentStart;\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code) ? factorySpace(effects, beforeContentChunk, \"linePrefix\", initialPrefix + 1)(code) : beforeContentChunk(code);\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return contentChunk(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return beforeContentChunk(code);\n    }\n    effects.consume(code);\n    return contentChunk;\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit(\"codeFenced\");\n    return ok(code);\n  }\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0;\n    return startBefore;\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return start;\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter(\"codeFencedFence\");\n      return markdownSpace(code) ? factorySpace(effects, beforeSequenceClose, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : beforeSequenceClose(code);\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter(\"codeFencedFenceSequence\");\n        return sequenceClose(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++;\n        effects.consume(code);\n        return sequenceClose;\n      }\n      if (size >= sizeOpen) {\n        effects.exit(\"codeFencedFenceSequence\");\n        return markdownSpace(code) ? factorySpace(effects, sequenceCloseAfter, \"whitespace\")(code) : sequenceCloseAfter(code);\n      }\n      return nok(code);\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(\"codeFencedFence\");\n        return ok(code);\n      }\n      return nok(code);\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineStart;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n};\n\n/** @type {Construct} */\nconst furtherStart = {\n  partial: true,\n  tokenize: tokenizeFurtherStart\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter(\"codeIndented\");\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? atBreak(code) : nok(code);\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code);\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code);\n    }\n    effects.enter(\"codeFlowValue\");\n    return inside(code);\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"codeFlowValue\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return inside;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit(\"codeIndented\");\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this;\n  return furtherStart;\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return furtherStart;\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, \"linePrefix\", 4 + 1)(code);\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4 ? ok(code) : markdownLineEnding(code) ? furtherStart(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Previous,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  previous,\n  resolve: resolveCodeText,\n  tokenize: tokenizeCodeText\n};\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4;\n  let headEnterIndex = 3;\n  /** @type {number} */\n  let index;\n  /** @type {number | undefined} */\n  let enter;\n\n  // If we start and end with an EOL or a space.\n  if ((events[headEnterIndex][1].type === \"lineEnding\" || events[headEnterIndex][1].type === 'space') && (events[tailExitIndex][1].type === \"lineEnding\" || events[tailExitIndex][1].type === 'space')) {\n    index = headEnterIndex;\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === \"codeTextData\") {\n        // Then we have padding.\n        events[headEnterIndex][1].type = \"codeTextPadding\";\n        events[tailExitIndex][1].type = \"codeTextPadding\";\n        headEnterIndex += 2;\n        tailExitIndex -= 2;\n        break;\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1;\n  tailExitIndex++;\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== \"lineEnding\") {\n        enter = index;\n      }\n    } else if (index === tailExitIndex || events[index][1].type === \"lineEnding\") {\n      events[enter][1].type = \"codeTextData\";\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end;\n        events.splice(enter + 2, index - enter - 2);\n        tailExitIndex -= index - enter - 2;\n        index = enter + 2;\n      }\n      enter = undefined;\n    }\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return code !== 96 || this.events[this.events.length - 1][1].type === \"characterEscape\";\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this;\n  let sizeOpen = 0;\n  /** @type {number} */\n  let size;\n  /** @type {Token} */\n  let token;\n  return start;\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"codeText\");\n    effects.enter(\"codeTextSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code);\n      sizeOpen++;\n      return sequenceOpen;\n    }\n    effects.exit(\"codeTextSequence\");\n    return between(code);\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code);\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space');\n      effects.consume(code);\n      effects.exit('space');\n      return between;\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter(\"codeTextSequence\");\n      size = 0;\n      return sequenceClose(code);\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return between;\n    }\n\n    // Data.\n    effects.enter(\"codeTextData\");\n    return data(code);\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 32 || code === 96 || markdownLineEnding(code)) {\n      effects.exit(\"codeTextData\");\n      return between(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code);\n      size++;\n      return sequenceClose;\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit(\"codeTextSequence\");\n      effects.exit(\"codeText\");\n      return ok(code);\n    }\n\n    // More or less accents: mark as data.\n    token.type = \"codeTextData\";\n    return data(code);\n  }\n}","/**\n * Some of the internal operations of micromark do lots of editing\n * operations on very large arrays. This runs into problems with two\n * properties of most circa-2020 JavaScript interpreters:\n *\n *  - Array-length modifications at the high end of an array (push/pop) are\n *    expected to be common and are implemented in (amortized) time\n *    proportional to the number of elements added or removed, whereas\n *    other operations (shift/unshift and splice) are much less efficient.\n *  - Function arguments are passed on the stack, so adding tens of thousands\n *    of elements to an array with `arr.push(...newElements)` will frequently\n *    cause stack overflows. (see <https://stackoverflow.com/questions/22123769/rangeerror-maximum-call-stack-size-exceeded-why>)\n *\n * SpliceBuffers are an implementation of gap buffers, which are a\n * generalization of the \"queue made of two stacks\" idea. The splice buffer\n * maintains a cursor, and moving the cursor has cost proportional to the\n * distance the cursor moves, but inserting, deleting, or splicing in\n * new information at the cursor is as efficient as the push/pop operation.\n * This allows for an efficient sequence of splices (or pushes, pops, shifts,\n * or unshifts) as long such edits happen at the same part of the array or\n * generally sweep through the array from the beginning to the end.\n *\n * The interface for splice buffers also supports large numbers of inputs by\n * passing a single array argument rather passing multiple arguments on the\n * function call stack.\n *\n * @template T\n *   Item type.\n */\nexport class SpliceBuffer {\n  /**\n   * @param {ReadonlyArray<T> | null | undefined} [initial]\n   *   Initial items (optional).\n   * @returns\n   *   Splice buffer.\n   */\n  constructor(initial) {\n    /** @type {Array<T>} */\n    this.left = initial ? [...initial] : [];\n    /** @type {Array<T>} */\n    this.right = [];\n  }\n\n  /**\n   * Array access;\n   * does not move the cursor.\n   *\n   * @param {number} index\n   *   Index.\n   * @return {T}\n   *   Item.\n   */\n  get(index) {\n    if (index < 0 || index >= this.left.length + this.right.length) {\n      throw new RangeError('Cannot access index `' + index + '` in a splice buffer of size `' + (this.left.length + this.right.length) + '`');\n    }\n    if (index < this.left.length) return this.left[index];\n    return this.right[this.right.length - index + this.left.length - 1];\n  }\n\n  /**\n   * The length of the splice buffer, one greater than the largest index in the\n   * array.\n   */\n  get length() {\n    return this.left.length + this.right.length;\n  }\n\n  /**\n   * Remove and return `list[0]`;\n   * moves the cursor to `0`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  shift() {\n    this.setCursor(0);\n    return this.right.pop();\n  }\n\n  /**\n   * Slice the buffer to get an array;\n   * does not move the cursor.\n   *\n   * @param {number} start\n   *   Start.\n   * @param {number | null | undefined} [end]\n   *   End (optional).\n   * @returns {Array<T>}\n   *   Array of items.\n   */\n  slice(start, end) {\n    /** @type {number} */\n    const stop = end === null || end === undefined ? Number.POSITIVE_INFINITY : end;\n    if (stop < this.left.length) {\n      return this.left.slice(start, stop);\n    }\n    if (start > this.left.length) {\n      return this.right.slice(this.right.length - stop + this.left.length, this.right.length - start + this.left.length).reverse();\n    }\n    return this.left.slice(start).concat(this.right.slice(this.right.length - stop + this.left.length).reverse());\n  }\n\n  /**\n   * Mimics the behavior of Array.prototype.splice() except for the change of\n   * interface necessary to avoid segfaults when patching in very large arrays.\n   *\n   * This operation moves cursor is moved to `start` and results in the cursor\n   * placed after any inserted items.\n   *\n   * @param {number} start\n   *   Start;\n   *   zero-based index at which to start changing the array;\n   *   negative numbers count backwards from the end of the array and values\n   *   that are out-of bounds are clamped to the appropriate end of the array.\n   * @param {number | null | undefined} [deleteCount=0]\n   *   Delete count (default: `0`);\n   *   maximum number of elements to delete, starting from start.\n   * @param {Array<T> | null | undefined} [items=[]]\n   *   Items to include in place of the deleted items (default: `[]`).\n   * @return {Array<T>}\n   *   Any removed items.\n   */\n  splice(start, deleteCount, items) {\n    /** @type {number} */\n    const count = deleteCount || 0;\n    this.setCursor(Math.trunc(start));\n    const removed = this.right.splice(this.right.length - count, Number.POSITIVE_INFINITY);\n    if (items) chunkedPush(this.left, items);\n    return removed.reverse();\n  }\n\n  /**\n   * Remove and return the highest-numbered item in the array, so\n   * `list[list.length - 1]`;\n   * Moves the cursor to `length`.\n   *\n   * @returns {T | undefined}\n   *   Item, optional.\n   */\n  pop() {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    return this.left.pop();\n  }\n\n  /**\n   * Inserts a single item to the high-numbered side of the array;\n   * moves the cursor to `length`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  push(item) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    this.left.push(item);\n  }\n\n  /**\n   * Inserts many items to the high-numbered side of the array.\n   * Moves the cursor to `length`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  pushMany(items) {\n    this.setCursor(Number.POSITIVE_INFINITY);\n    chunkedPush(this.left, items);\n  }\n\n  /**\n   * Inserts a single item to the low-numbered side of the array;\n   * Moves the cursor to `0`.\n   *\n   * @param {T} item\n   *   Item.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshift(item) {\n    this.setCursor(0);\n    this.right.push(item);\n  }\n\n  /**\n   * Inserts many items to the low-numbered side of the array;\n   * moves the cursor to `0`.\n   *\n   * @param {Array<T>} items\n   *   Items.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  unshiftMany(items) {\n    this.setCursor(0);\n    chunkedPush(this.right, items.reverse());\n  }\n\n  /**\n   * Move the cursor to a specific position in the array. Requires\n   * time proportional to the distance moved.\n   *\n   * If `n < 0`, the cursor will end up at the beginning.\n   * If `n > length`, the cursor will end up at the end.\n   *\n   * @param {number} n\n   *   Position.\n   * @return {undefined}\n   *   Nothing.\n   */\n  setCursor(n) {\n    if (n === this.left.length || n > this.left.length && this.right.length === 0 || n < 0 && this.left.length === 0) return;\n    if (n < this.left.length) {\n      // Move cursor to the this.left\n      const removed = this.left.splice(n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.right, removed.reverse());\n    } else {\n      // Move cursor to the this.right\n      const removed = this.right.splice(this.left.length + this.right.length - n, Number.POSITIVE_INFINITY);\n      chunkedPush(this.left, removed.reverse());\n    }\n  }\n}\n\n/**\n * Avoid stack overflow by pushing items onto the stack in segments\n *\n * @template T\n *   Item type.\n * @param {Array<T>} list\n *   List to inject into.\n * @param {ReadonlyArray<T>} right\n *   Items to inject.\n * @return {undefined}\n *   Nothing.\n */\nfunction chunkedPush(list, right) {\n  /** @type {number} */\n  let chunkStart = 0;\n  if (right.length < 10000) {\n    list.push(...right);\n  } else {\n    while (chunkStart < right.length) {\n      list.push(...right.slice(chunkStart, chunkStart + 10000));\n      chunkStart += 10000;\n    }\n  }\n}","/**\n * @import {Chunk, Event, Token} from 'micromark-util-types'\n */\n\nimport { splice } from 'micromark-util-chunked';\nimport { SpliceBuffer } from './lib/splice-buffer.js';\n\n// Hidden API exposed for testing.\nexport { SpliceBuffer } from './lib/splice-buffer.js';\n\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} eventsArray\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */\n// eslint-disable-next-line complexity\nexport function subtokenize(eventsArray) {\n  /** @type {Record<string, number>} */\n  const jumps = {};\n  let index = -1;\n  /** @type {Event} */\n  let event;\n  /** @type {number | undefined} */\n  let lineIndex;\n  /** @type {number} */\n  let otherIndex;\n  /** @type {Event} */\n  let otherEvent;\n  /** @type {Array<Event>} */\n  let parameters;\n  /** @type {Array<Event>} */\n  let subevents;\n  /** @type {boolean | undefined} */\n  let more;\n  const events = new SpliceBuffer(eventsArray);\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index];\n    }\n    event = events.get(index);\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (index && event[1].type === \"chunkFlow\" && events.get(index - 1)[1].type === \"listItemPrefix\") {\n      subevents = event[1]._tokenizer.events;\n      otherIndex = 0;\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"lineEndingBlank\") {\n        otherIndex += 2;\n      }\n      if (otherIndex < subevents.length && subevents[otherIndex][1].type === \"content\") {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === \"content\") {\n            break;\n          }\n          if (subevents[otherIndex][1].type === \"chunkText\") {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true;\n            otherIndex++;\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index));\n        index = jumps[index];\n        more = true;\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index;\n      lineIndex = undefined;\n      while (otherIndex--) {\n        otherEvent = events.get(otherIndex);\n        if (otherEvent[1].type === \"lineEnding\" || otherEvent[1].type === \"lineEndingBlank\") {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events.get(lineIndex)[1].type = \"lineEndingBlank\";\n            }\n            otherEvent[1].type = \"lineEnding\";\n            lineIndex = otherIndex;\n          }\n        } else if (otherEvent[1].type === \"linePrefix\" || otherEvent[1].type === \"listItemIndent\") {\n          // Move past.\n        } else {\n          break;\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = {\n          ...events.get(lineIndex)[1].start\n        };\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index);\n        parameters.unshift(event);\n        events.splice(lineIndex, index - lineIndex + 1, parameters);\n      }\n    }\n  }\n\n  // The changes to the `events` buffer must be copied back into the eventsArray\n  splice(eventsArray, 0, Number.POSITIVE_INFINITY, events.slice(0));\n  return !more;\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {SpliceBuffer<Event>} events\n *   Events.\n * @param {number} eventIndex\n *   Index.\n * @returns {Record<string, number>}\n *   Gaps.\n */\nfunction subcontent(events, eventIndex) {\n  const token = events.get(eventIndex)[1];\n  const context = events.get(eventIndex)[2];\n  let startPosition = eventIndex - 1;\n  /** @type {Array<number>} */\n  const startPositions = [];\n  let tokenizer = token._tokenizer;\n  if (!tokenizer) {\n    tokenizer = context.parser[token.contentType](token.start);\n    if (token._contentTypeTextTrailing) {\n      tokenizer._contentTypeTextTrailing = true;\n    }\n  }\n  const childEvents = tokenizer.events;\n  /** @type {Array<[number, number]>} */\n  const jumps = [];\n  /** @type {Record<string, number>} */\n  const gaps = {};\n  /** @type {Array<Chunk>} */\n  let stream;\n  /** @type {Token | undefined} */\n  let previous;\n  let index = -1;\n  /** @type {Token | undefined} */\n  let current = token;\n  let adjust = 0;\n  let start = 0;\n  const breaks = [start];\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events.get(++startPosition)[1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition);\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current);\n      if (!current.next) {\n        stream.push(null);\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start);\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true;\n      }\n      tokenizer.write(stream);\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined;\n      }\n    }\n\n    // Unravel the next token.\n    previous = current;\n    current = current.next;\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token;\n  while (++index < childEvents.length) {\n    if (\n    // Find a void token that includes a break.\n    childEvents[index][0] === 'exit' && childEvents[index - 1][0] === 'enter' && childEvents[index][1].type === childEvents[index - 1][1].type && childEvents[index][1].start.line !== childEvents[index][1].end.line) {\n      start = index + 1;\n      breaks.push(start);\n      // Help GC.\n      current._tokenizer = undefined;\n      current.previous = undefined;\n      current = current.next;\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = [];\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined;\n    current.previous = undefined;\n  } else {\n    breaks.pop();\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length;\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1]);\n    const start = startPositions.pop();\n    jumps.push([start, start + slice.length - 1]);\n    events.splice(start, 2, slice);\n  }\n  jumps.reverse();\n  index = -1;\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1];\n    adjust += jumps[index][1] - jumps[index][0] - 1;\n  }\n  return gaps;\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { subtokenize } from 'micromark-util-subtokenize';\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  resolve: resolveContent,\n  tokenize: tokenizeContent\n};\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  partial: true,\n  tokenize: tokenizeContinuation\n};\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous;\n  return chunkStart;\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter(\"content\");\n    previous = effects.enter(\"chunkContent\", {\n      contentType: \"content\"\n    });\n    return chunkInside(code);\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code);\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(continuationConstruct, contentContinue, contentEnd)(code);\n    }\n\n    // Data.\n    effects.consume(code);\n    return chunkInside;\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit(\"chunkContent\");\n    effects.exit(\"content\");\n    return ok(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code);\n    effects.exit(\"chunkContent\");\n    previous.next = effects.enter(\"chunkContent\", {\n      contentType: \"content\",\n      previous\n    });\n    previous = previous.next;\n    return chunkInside;\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this;\n  return startLookahead;\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit(\"chunkContent\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, prefixed, \"linePrefix\");\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1];\n    if (!self.parser.constructs.disable.null.includes('codeIndented') && tail && tail[1].type === \"linePrefix\" && tail[2].sliceSerialize(tail[1], true).length >= 4) {\n      return ok(code);\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code);\n  }\n}","/**\n * @import {Effects, State, TokenType} from 'micromark-util-types'\n */\n\nimport { asciiControl, markdownLineEndingOrSpace, markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factoryDestination(effects, ok, nok, type, literalType, literalMarkerType, rawType, stringType, max) {\n  const limit = max || Number.POSITIVE_INFINITY;\n  let balance = 0;\n  return start;\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type);\n      effects.enter(literalType);\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      return enclosedBefore;\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.enter(type);\n    effects.enter(rawType);\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return raw(code);\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType);\n      effects.consume(code);\n      effects.exit(literalMarkerType);\n      effects.exit(literalType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return enclosed(code);\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      return enclosedBefore(code);\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? enclosedEscape : enclosed;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code);\n      return enclosed;\n    }\n    return enclosed(code);\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (!balance && (code === null || code === 41 || markdownLineEndingOrSpace(code))) {\n      effects.exit(\"chunkString\");\n      effects.exit(stringType);\n      effects.exit(rawType);\n      effects.exit(type);\n      return ok(code);\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code);\n      balance++;\n      return raw;\n    }\n    if (code === 41) {\n      effects.consume(code);\n      balance--;\n      return raw;\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return code === 92 ? rawEscape : raw;\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code);\n      return raw;\n    }\n    return raw(code);\n  }\n}","/**\n * @import {\n *   Effects,\n *   State,\n *   TokenizeContext,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this;\n  let size = 0;\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type);\n    effects.enter(markerType);\n    effects.consume(code);\n    effects.exit(markerType);\n    effects.enter(stringType);\n    return atBreak;\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (size > 999 || code === null || code === 91 || code === 93 && !seen ||\n    // To do: remove in the future once we’ve switched from\n    // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n    // which doesn’t need this.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    code === 94 && !size && '_hiddenFootnoteSupport' in self.parser.constructs) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.exit(stringType);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return atBreak;\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return labelInside(code);\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (code === null || code === 91 || code === 93 || markdownLineEnding(code) || size++ > 999) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    if (!seen) seen = !markdownSpace(code);\n    return code === 92 ? labelEscape : labelInside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code);\n      size++;\n      return labelInside;\n    }\n    return labelInside(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Effects,\n *   State,\n *   TokenType\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type);\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      marker = code === 40 ? 41 : code;\n      return begin;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType);\n      effects.consume(code);\n      effects.exit(markerType);\n      effects.exit(type);\n      return ok;\n    }\n    effects.enter(stringType);\n    return atBreak(code);\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType);\n      return begin(marker);\n    }\n    if (code === null) {\n      return nok(code);\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return factorySpace(effects, atBreak, \"linePrefix\");\n    }\n    effects.enter(\"chunkString\", {\n      contentType: \"string\"\n    });\n    return inside(code);\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(\"chunkString\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return code === 92 ? escape : inside;\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code);\n      return inside;\n    }\n    return inside(code);\n  }\n}","/**\n * @import {Effects, State} from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      seen = true;\n      return start;\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, start, seen ? \"linePrefix\" : \"lineSuffix\")(code);\n    }\n    return ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factorySpace } from 'micromark-factory-space';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n};\n\n/** @type {Construct} */\nconst titleBefore = {\n  partial: true,\n  tokenize: tokenizeTitleBefore\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this;\n  /** @type {string} */\n  let identifier;\n  return start;\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter(\"definition\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(self, effects, labelAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionLabel\", \"definitionLabelMarker\", \"definitionLabelString\")(code);\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1));\n    if (code === 58) {\n      effects.enter(\"definitionMarker\");\n      effects.consume(code);\n      effects.exit(\"definitionMarker\");\n      return markerAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, destinationBefore)(code) : destinationBefore(code);\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(effects, destinationAfter,\n    // Note: we don’t need to reset the way `markdown-rs` does.\n    nok, \"definitionDestination\", \"definitionDestinationLiteral\", \"definitionDestinationLiteralMarker\", \"definitionDestinationRaw\", \"definitionDestinationString\")(code);\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code);\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code) ? factorySpace(effects, afterWhitespace, \"whitespace\")(code) : afterWhitespace(code);\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"definition\");\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier);\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code);\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore;\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, beforeMarker)(code) : nok(code);\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(effects, titleAfter, nok, \"definitionTitle\", \"definitionTitleMarker\", \"definitionTitleString\")(code);\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code) ? factorySpace(effects, titleAfterOptionalWhitespace, \"whitespace\")(code) : titleAfterOptionalWhitespace(code);\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start;\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"hardBreakEscape\");\n    effects.consume(code);\n    return after;\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit(\"hardBreakEscape\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { splice } from 'micromark-util-chunked';\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  resolve: resolveHeadingAtx,\n  tokenize: tokenizeHeadingAtx\n};\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2;\n  let contentStart = 3;\n  /** @type {Token} */\n  let content;\n  /** @type {Token} */\n  let text;\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === \"whitespace\") {\n    contentStart += 2;\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (contentEnd - 2 > contentStart && events[contentEnd][1].type === \"whitespace\") {\n    contentEnd -= 2;\n  }\n  if (events[contentEnd][1].type === \"atxHeadingSequence\" && (contentStart === contentEnd - 1 || contentEnd - 4 > contentStart && events[contentEnd - 2][1].type === \"whitespace\")) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4;\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: \"atxHeadingText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    };\n    text = {\n      type: \"chunkText\",\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: \"text\"\n    };\n    splice(events, contentStart, contentEnd - contentStart + 1, [['enter', content, context], ['enter', text, context], ['exit', text, context], ['exit', content, context]]);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0;\n  return start;\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter(\"atxHeading\");\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"atxHeadingSequence\");\n    return sequenceOpen(code);\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code);\n      return sequenceOpen;\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingSequence\");\n      return atBreak(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter(\"atxHeadingSequence\");\n      return sequenceFurther(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"atxHeading\");\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code);\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, \"whitespace\")(code);\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter(\"atxHeadingText\");\n    return data(code);\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code);\n      return sequenceFurther;\n    }\n    effects.exit(\"atxHeadingSequence\");\n    return atBreak(code);\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit(\"atxHeadingText\");\n      return atBreak(code);\n    }\n    effects.consume(code);\n    return data;\n  }\n}","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\nimport { htmlBlockNames, htmlRawNames } from 'micromark-util-html-tag-name';\nimport { blankLine } from './blank-line.js';\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  concrete: true,\n  name: 'htmlFlow',\n  resolveTo: resolveToHtmlFlow,\n  tokenize: tokenizeHtmlFlow\n};\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  partial: true,\n  tokenize: tokenizeBlankLineBefore\n};\nconst nonLazyContinuationStart = {\n  partial: true,\n  tokenize: tokenizeNonLazyContinuationStart\n};\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length;\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === \"htmlFlow\") {\n      break;\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === \"linePrefix\") {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start;\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start;\n    // Remove the line prefix.\n    events.splice(index - 2, 2);\n  }\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this;\n  /** @type {number} */\n  let marker;\n  /** @type {boolean} */\n  let closingTag;\n  /** @type {string} */\n  let buffer;\n  /** @type {number} */\n  let index;\n  /** @type {Code} */\n  let markerB;\n  return start;\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"htmlFlow\");\n    effects.enter(\"htmlFlowData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      closingTag = true;\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      marker = 3;\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      marker = 2;\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      marker = 5;\n      index = 0;\n      return cdataOpenInside;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      marker = 4;\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation;\n      }\n      return cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      // Always the case.\n      effects.consume(code);\n      buffer = String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (code === null || code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      const slash = code === 47;\n      const name = buffer.toLowerCase();\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1;\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6;\n        if (slash) {\n          effects.consume(code);\n          return basicSelfClosing;\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code);\n      }\n      marker = 7;\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line] ? nok(code) : closingTag ? completeClosingTagAfter(code) : completeAttributeNameBefore(code);\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return tagName;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code);\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeClosingTagAfter;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return completeEnd;\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameBefore;\n    }\n    return completeEnd(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return completeAttributeName;\n    }\n    return completeAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeNameAfter;\n    }\n    return completeAttributeNameBefore(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      markerB = code;\n      return completeAttributeValueQuoted;\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAttributeValueBefore;\n    }\n    return completeAttributeValueUnquoted(code);\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code);\n      markerB = null;\n      return completeAttributeValueQuotedAfter;\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 47 || code === 60 || code === 61 || code === 62 || code === 96 || markdownLineEndingOrSpace(code)) {\n      return completeAttributeNameAfter(code);\n    }\n    effects.consume(code);\n    return completeAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return completeAfter;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationCommentInside;\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code);\n      return continuationRawTagOpen;\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code);\n      return continuationClose;\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code);\n      return continuationCdataInside;\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit(\"htmlFlowData\");\n      return effects.check(blankLineBefore, continuationAfter, continuationStart)(code);\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationStart(code);\n    }\n    effects.consume(code);\n    return continuation;\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(nonLazyContinuationStart, continuationStartNonLazy, continuationAfter)(code);\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return continuationBefore;\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code);\n    }\n    effects.enter(\"htmlFlowData\");\n    return continuation(code);\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code);\n      buffer = '';\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase();\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code);\n        return continuationClose;\n      }\n      return continuation(code);\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      // Always the case.\n      effects.consume(code);\n      buffer += String.fromCharCode(code);\n      return continuationRawEndTag;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code);\n      return continuationClose;\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code);\n      return continuationDeclarationInside;\n    }\n    return continuation(code);\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"htmlFlowData\");\n      return continuationAfter(code);\n    }\n    effects.consume(code);\n    return continuationClose;\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit(\"htmlFlow\");\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter(\"lineEnding\");\n      effects.consume(code);\n      effects.exit(\"lineEnding\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start;\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return effects.attempt(blankLine, ok, nok);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiAlphanumeric, asciiAlpha, markdownLineEndingOrSpace, markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code> | undefined} */\n  let marker;\n  /** @type {number} */\n  let index;\n  /** @type {State} */\n  let returnState;\n  return start;\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"htmlText\");\n    effects.enter(\"htmlTextData\");\n    effects.consume(code);\n    return open;\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpenInside;\n    }\n    if (code === 91) {\n      effects.consume(code);\n      index = 0;\n      return cdataOpenInside;\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return comment;\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentEnd;\n    }\n    return comment(code);\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62 ? end(code) : code === 45 ? commentClose(code) : comment(code);\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = \"CDATA[\";\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === value.length ? cdata : cdataOpenInside;\n    }\n    return nok(code);\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return cdata;\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n    return cdata(code);\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return declaration;\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return instruction;\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n    return tagCloseBetween(code);\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n    return end(code);\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n    return tagOpenBetween(code);\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return lineEndingBefore(code);\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      marker = undefined;\n      return tagOpenAttributeValueQuotedAfter;\n    }\n    if (code === null) {\n      return nok(code);\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return lineEndingBefore(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit(\"htmlTextData\");\n      effects.exit(\"htmlText\");\n      return ok;\n    }\n    return nok(code);\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit(\"htmlTextData\");\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return lineEndingAfter;\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code) ? factorySpace(effects, lineEndingAfterPrefix, \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code) : lineEndingAfterPrefix(code);\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter(\"htmlTextData\");\n    return returnState(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   Event,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer,\n *   Token\n * } from 'micromark-util-types'\n */\n\nimport { factoryDestination } from 'micromark-factory-destination';\nimport { factoryLabel } from 'micromark-factory-label';\nimport { factoryTitle } from 'micromark-factory-title';\nimport { factoryWhitespace } from 'micromark-factory-whitespace';\nimport { markdownLineEndingOrSpace } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  resolveAll: resolveAllLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  tokenize: tokenizeLabelEnd\n};\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n};\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n};\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n};\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1;\n  /** @type {Array<Event>} */\n  const newEvents = [];\n  while (++index < events.length) {\n    const token = events[index][1];\n    newEvents.push(events[index]);\n    if (token.type === \"labelImage\" || token.type === \"labelLink\" || token.type === \"labelEnd\") {\n      // Remove the marker.\n      const offset = token.type === \"labelImage\" ? 4 : 2;\n      token.type = \"data\";\n      index += offset;\n    }\n  }\n\n  // If the events are equal, we don't have to copy newEvents to events\n  if (events.length !== newEvents.length) {\n    splice(events, 0, events.length, newEvents);\n  }\n  return events;\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length;\n  let offset = 0;\n  /** @type {Token} */\n  let token;\n  /** @type {number | undefined} */\n  let open;\n  /** @type {number | undefined} */\n  let close;\n  /** @type {Array<Event>} */\n  let media;\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1];\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (token.type === \"link\" || token.type === \"labelLink\" && token._inactive) {\n        break;\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === \"labelLink\") {\n        token._inactive = true;\n      }\n    } else if (close) {\n      if (events[index][0] === 'enter' && (token.type === \"labelImage\" || token.type === \"labelLink\") && !token._balanced) {\n        open = index;\n        if (token.type !== \"labelLink\") {\n          offset = 2;\n          break;\n        }\n      }\n    } else if (token.type === \"labelEnd\") {\n      close = index;\n    }\n  }\n  const group = {\n    type: events[open][1].type === \"labelLink\" ? \"link\" : \"image\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n  const label = {\n    type: \"label\",\n    start: {\n      ...events[open][1].start\n    },\n    end: {\n      ...events[close][1].end\n    }\n  };\n  const text = {\n    type: \"labelText\",\n    start: {\n      ...events[open + offset + 2][1].end\n    },\n    end: {\n      ...events[close - 2][1].start\n    }\n  };\n  media = [['enter', group, context], ['enter', label, context]];\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3));\n\n  // Text open.\n  media = push(media, [['enter', text, context]]);\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(media, resolveAll(context.parser.constructs.insideSpan.null, events.slice(open + offset + 4, close - 3), context));\n\n  // Text close, marker close, label close.\n  media = push(media, [['exit', text, context], events[close - 2], events[close - 1], ['exit', label, context]]);\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1));\n\n  // Media close.\n  media = push(media, [['exit', group, context]]);\n  splice(events, open, events.length, media);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this;\n  let index = self.events.length;\n  /** @type {Token} */\n  let labelStart;\n  /** @type {boolean} */\n  let defined;\n\n  // Find an opening.\n  while (index--) {\n    if ((self.events[index][1].type === \"labelImage\" || self.events[index][1].type === \"labelLink\") && !self.events[index][1]._balanced) {\n      labelStart = self.events[index][1];\n      break;\n    }\n  }\n  return start;\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code);\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code);\n    }\n    defined = self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize({\n      start: labelStart.end,\n      end: self.now()\n    })));\n    effects.enter(\"labelEnd\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelEnd\");\n    return after;\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(resourceConstruct, labelEndOk, defined ? labelEndOk : labelEndNok)(code);\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(referenceFullConstruct, labelEndOk, defined ? referenceNotFull : labelEndNok)(code);\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code);\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(referenceCollapsedConstruct, labelEndOk, labelEndNok)(code);\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code);\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true;\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart;\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter(\"resource\");\n    effects.enter(\"resourceMarker\");\n    effects.consume(code);\n    effects.exit(\"resourceMarker\");\n    return resourceBefore;\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceOpen)(code) : resourceOpen(code);\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code);\n    }\n    return factoryDestination(effects, resourceDestinationAfter, resourceDestinationMissing, \"resourceDestination\", \"resourceDestinationLiteral\", \"resourceDestinationLiteralMarker\", \"resourceDestinationRaw\", \"resourceDestinationString\", 32)(code);\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceBetween)(code) : resourceEnd(code);\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code);\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(effects, resourceTitleAfter, nok, \"resourceTitle\", \"resourceTitleMarker\", \"resourceTitleString\")(code);\n    }\n    return resourceEnd(code);\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code) ? factoryWhitespace(effects, resourceEnd)(code) : resourceEnd(code);\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter(\"resourceMarker\");\n      effects.consume(code);\n      effects.exit(\"resourceMarker\");\n      effects.exit(\"resource\");\n      return ok;\n    }\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this;\n  return referenceFull;\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(self, effects, referenceFullAfter, referenceFullMissing, \"reference\", \"referenceMarker\", \"referenceString\")(code);\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(normalizeIdentifier(self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1))) ? ok(code) : nok(code);\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart;\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter(\"reference\");\n    effects.enter(\"referenceMarker\");\n    effects.consume(code);\n    effects.exit(\"referenceMarker\");\n    return referenceCollapsedOpen;\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter(\"referenceMarker\");\n      effects.consume(code);\n      effects.exit(\"referenceMarker\");\n      effects.exit(\"reference\");\n      return ok;\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartImage\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelImage\");\n    effects.enter(\"labelImageMarker\");\n    effects.consume(code);\n    effects.exit(\"labelImageMarker\");\n    return open;\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter(\"labelMarker\");\n      effects.consume(code);\n      effects.exit(\"labelMarker\");\n      effects.exit(\"labelImage\");\n      return after;\n    }\n    return nok(code);\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { labelEnd } from './label-end.js';\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  resolveAll: labelEnd.resolveAll,\n  tokenize: tokenizeLabelStartLink\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this;\n  return start;\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"labelLink\");\n    effects.enter(\"labelMarker\");\n    effects.consume(code);\n    effects.exit(\"labelMarker\");\n    effects.exit(\"labelLink\");\n    return after;\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs ? nok(code) : ok(code);\n  }\n}","/**\n * @import {\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    return factorySpace(effects, ok, \"linePrefix\");\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(\"thematicBreak\");\n    // To do: parse indent like `markdown-rs`.\n    return before(code);\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code;\n    return atBreak(code);\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter(\"thematicBreakSequence\");\n      return sequence(code);\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit(\"thematicBreak\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n    effects.exit(\"thematicBreakSequence\");\n    return markdownSpace(code) ? factorySpace(effects, atBreak, \"whitespace\")(code) : atBreak(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Exiter,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { asciiDigit, markdownSpace } from 'micromark-util-character';\nimport { blankLine } from './blank-line.js';\nimport { thematicBreak } from './thematic-break.js';\n\n/** @type {Construct} */\nexport const list = {\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd,\n  name: 'list',\n  tokenize: tokenizeListStart\n};\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  partial: true,\n  tokenize: tokenizeListItemPrefixWhitespace\n};\n\n/** @type {Construct} */\nconst indentConstruct = {\n  partial: true,\n  tokenize: tokenizeIndent\n};\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this;\n  const tail = self.events[self.events.length - 1];\n  let initialSize = tail && tail[1].type === \"linePrefix\" ? tail[2].sliceSerialize(tail[1], true).length : 0;\n  let size = 0;\n  return start;\n\n  /** @type {State} */\n  function start(code) {\n    const kind = self.containerState.type || (code === 42 || code === 43 || code === 45 ? \"listUnordered\" : \"listOrdered\");\n    if (kind === \"listUnordered\" ? !self.containerState.marker || code === self.containerState.marker : asciiDigit(code)) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind;\n        effects.enter(kind, {\n          _container: true\n        });\n      }\n      if (kind === \"listUnordered\") {\n        effects.enter(\"listItemPrefix\");\n        return code === 42 || code === 45 ? effects.check(thematicBreak, nok, atMarker)(code) : atMarker(code);\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter(\"listItemPrefix\");\n        effects.enter(\"listItemValue\");\n        return inside(code);\n      }\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code);\n      return inside;\n    }\n    if ((!self.interrupt || size < 2) && (self.containerState.marker ? code === self.containerState.marker : code === 41 || code === 46)) {\n      effects.exit(\"listItemValue\");\n      return atMarker(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter(\"listItemMarker\");\n    effects.consume(code);\n    effects.exit(\"listItemMarker\");\n    self.containerState.marker = self.containerState.marker || code;\n    return effects.check(blankLine,\n    // Can’t be empty when interrupting.\n    self.interrupt ? nok : onBlank, effects.attempt(listItemPrefixWhitespaceConstruct, endOfPrefix, otherPrefix));\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true;\n    initialSize++;\n    return endOfPrefix(code);\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter(\"listItemPrefixWhitespace\");\n      effects.consume(code);\n      effects.exit(\"listItemPrefixWhitespace\");\n      return endOfPrefix;\n    }\n    return nok(code);\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size = initialSize + self.sliceSerialize(effects.exit(\"listItemPrefix\"), true).length;\n    return ok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this;\n  self.containerState._closeFlow = undefined;\n  return effects.check(blankLine, onBlank, notBlank);\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines = self.containerState.furtherBlankLines || self.containerState.initialBlankLine;\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(effects, ok, \"listItemIndent\", self.containerState.size + 1)(code);\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined;\n      self.containerState.initialBlankLine = undefined;\n      return notInCurrentItem(code);\n    }\n    self.containerState.furtherBlankLines = undefined;\n    self.containerState.initialBlankLine = undefined;\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code);\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true;\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined;\n    // Always populated by defaults.\n\n    return factorySpace(effects, effects.attempt(list, ok, nok), \"linePrefix\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4)(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this;\n  return factorySpace(effects, afterPrefix, \"listItemIndent\", self.containerState.size + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return tail && tail[1].type === \"listItemIndent\" && tail[2].sliceSerialize(tail[1], true).length === self.containerState.size ? ok(code) : nok(code);\n  }\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Exiter}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type);\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this;\n\n  // Always populated by defaults.\n\n  return factorySpace(effects, afterPrefix, \"listItemPrefixWhitespace\", self.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4 + 1);\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1];\n    return !markdownSpace(code) && tail && tail[1].type === \"listItemPrefixWhitespace\" ? ok(code) : nok(code);\n  }\n}","/**\n * @import {\n *   Code,\n *   Construct,\n *   Resolver,\n *   State,\n *   TokenizeContext,\n *   Tokenizer\n * } from 'micromark-util-types'\n */\n\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding, markdownSpace } from 'micromark-util-character';\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  resolveTo: resolveToSetextUnderline,\n  tokenize: tokenizeSetextUnderline\n};\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length;\n  /** @type {number | undefined} */\n  let content;\n  /** @type {number | undefined} */\n  let text;\n  /** @type {number | undefined} */\n  let definition;\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === \"content\") {\n        content = index;\n        break;\n      }\n      if (events[index][1].type === \"paragraph\") {\n        text = index;\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === \"content\") {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1);\n      }\n      if (!definition && events[index][1].type === \"definition\") {\n        definition = index;\n      }\n    }\n  }\n  const heading = {\n    type: \"setextHeading\",\n    start: {\n      ...events[content][1].start\n    },\n    end: {\n      ...events[events.length - 1][1].end\n    }\n  };\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = \"setextHeadingText\";\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context]);\n    events.splice(definition + 1, 0, ['exit', events[content][1], context]);\n    events[content][1].end = {\n      ...events[definition][1].end\n    };\n  } else {\n    events[content][1] = heading;\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context]);\n  return events;\n}\n\n/**\n * @this {TokenizeContext}\n *   Context.\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this;\n  /** @type {NonNullable<Code>} */\n  let marker;\n  return start;\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length;\n    /** @type {boolean | undefined} */\n    let paragraph;\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (self.events[index][1].type !== \"lineEnding\" && self.events[index][1].type !== \"linePrefix\" && self.events[index][1].type !== \"content\") {\n        paragraph = self.events[index][1].type === \"paragraph\";\n        break;\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter(\"setextHeadingLine\");\n      marker = code;\n      return before(code);\n    }\n    return nok(code);\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter(\"setextHeadingLineSequence\");\n    return inside(code);\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return inside;\n    }\n    effects.exit(\"setextHeadingLineSequence\");\n    return markdownSpace(code) ? factorySpace(effects, after, \"lineSuffix\")(code) : after(code);\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit(\"setextHeadingLine\");\n      return ok(code);\n    }\n    return nok(code);\n  }\n}","/**\n * @import {\n *   InitialConstruct,\n *   Initializer,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nimport { blankLine, content } from 'micromark-core-commonmark';\nimport { factorySpace } from 'micromark-factory-space';\nimport { markdownLineEnding } from 'micromark-util-character';\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n};\n\n/**\n * @this {TokenizeContext}\n *   Self.\n * @type {Initializer}\n *   Initializer.\n */\nfunction initializeFlow(effects) {\n  const self = this;\n  const initial = effects.attempt(\n  // Try to parse a blank line.\n  blankLine, atBlankEnding,\n  // Try to parse initial flow (essentially, only code).\n  effects.attempt(this.parser.constructs.flowInitial, afterConstruct, factorySpace(effects, effects.attempt(this.parser.constructs.flow, afterConstruct, effects.attempt(content, afterConstruct)), \"linePrefix\")));\n  return initial;\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEndingBlank\");\n    effects.consume(code);\n    effects.exit(\"lineEndingBlank\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code);\n      return;\n    }\n    effects.enter(\"lineEnding\");\n    effects.consume(code);\n    effects.exit(\"lineEnding\");\n    self.currentConstruct = undefined;\n    return initial;\n  }\n}","/**\n * @import {\n *   Code,\n *   InitialConstruct,\n *   Initializer,\n *   Resolver,\n *   State,\n *   TokenizeContext\n * } from 'micromark-util-types'\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n};\nexport const string = initializeFactory('string');\nexport const text = initializeFactory('text');\n\n/**\n * @param {'string' | 'text'} field\n *   Field.\n * @returns {InitialConstruct}\n *   Construct.\n */\nfunction initializeFactory(field) {\n  return {\n    resolveAll: createResolver(field === 'text' ? resolveAllLineSuffixes : undefined),\n    tokenize: initializeText\n  };\n\n  /**\n   * @this {TokenizeContext}\n   *   Context.\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this;\n    const constructs = this.parser.constructs[field];\n    const text = effects.attempt(constructs, start, notText);\n    return start;\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code);\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code);\n        return;\n      }\n      effects.enter(\"data\");\n      effects.consume(code);\n      return data;\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit(\"data\");\n        return text(code);\n      }\n\n      // Data.\n      effects.consume(code);\n      return data;\n    }\n\n    /**\n     * @param {Code} code\n     *   Code.\n     * @returns {boolean}\n     *   Whether the code is a break.\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true;\n      }\n      const list = constructs[code];\n      let index = -1;\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index];\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n *   Resolver.\n * @returns {Resolver}\n *   Resolver.\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText;\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1;\n    /** @type {number | undefined} */\n    let enter;\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === \"data\") {\n          enter = index;\n          index++;\n        }\n      } else if (!events[index] || events[index][1].type !== \"data\") {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end;\n          events.splice(enter + 2, index - enter - 2);\n          index = enter + 2;\n        }\n        enter = undefined;\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events;\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0; // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if ((eventIndex === events.length || events[eventIndex][1].type === \"lineEnding\") && events[eventIndex - 1][1].type === \"data\") {\n      const data = events[eventIndex - 1][1];\n      const chunks = context.sliceStream(data);\n      let index = chunks.length;\n      let bufferIndex = -1;\n      let size = 0;\n      /** @type {boolean | undefined} */\n      let tabs;\n      while (index--) {\n        const chunk = chunks[index];\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length;\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++;\n            bufferIndex--;\n          }\n          if (bufferIndex) break;\n          bufferIndex = -1;\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true;\n          size++;\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++;\n          break;\n        }\n      }\n\n      // Allow final trailing whitespace.\n      if (context._contentTypeTextTrailing && eventIndex === events.length) {\n        size = 0;\n      }\n      if (size) {\n        const token = {\n          type: eventIndex === events.length || tabs || size < 2 ? \"lineSuffix\" : \"hardBreakTrailing\",\n          start: {\n            _bufferIndex: index ? bufferIndex : data.start._bufferIndex + bufferIndex,\n            _index: data.start._index + index,\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size\n          },\n          end: {\n            ...data.end\n          }\n        };\n        data.end = {\n          ...token.start\n        };\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token);\n        } else {\n          events.splice(eventIndex, 0, ['enter', token, context], ['exit', token, context]);\n          eventIndex += 2;\n        }\n      }\n      eventIndex++;\n    }\n  }\n  return events;\n}","/**\n * @import {Extension} from 'micromark-util-types'\n */\n\nimport { attention, autolink, blockQuote, characterEscape, characterReference, codeFenced, codeIndented, codeText, definition, hardBreakEscape, headingAtx, htmlFlow, htmlText, labelEnd, labelStartImage, labelStartLink, lineEnding, list, setextUnderline, thematicBreak } from 'micromark-core-commonmark';\nimport { resolver as resolveText } from './initialize/text.js';\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n};\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n};\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n};\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n};\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n};\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n};\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n};\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n};\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n};","/**\n * @import {\n *   Chunk,\n *   Code,\n *   ConstructRecord,\n *   Construct,\n *   Effects,\n *   InitialConstruct,\n *   ParseContext,\n *   Point,\n *   State,\n *   TokenizeContext,\n *   Token\n * } from 'micromark-util-types'\n */\n\n/**\n * @callback Restore\n *   Restore the state.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef Info\n *   Info.\n * @property {Restore} restore\n *   Restore.\n * @property {number} from\n *   From.\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n *   Construct.\n * @param {Info} info\n *   Info.\n * @returns {undefined}\n *   Nothing.\n */\n\nimport { markdownLineEnding } from 'micromark-util-character';\nimport { push, splice } from 'micromark-util-chunked';\nimport { resolveAll } from 'micromark-util-resolve-all';\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n *   Parser.\n * @param {InitialConstruct} initialize\n *   Construct.\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n *   Point (optional).\n * @returns {TokenizeContext}\n *   Context.\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = {\n    _bufferIndex: -1,\n    _index: 0,\n    line: from && from.line || 1,\n    column: from && from.column || 1,\n    offset: from && from.offset || 0\n  };\n  /** @type {Record<string, number>} */\n  const columnStart = {};\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = [];\n  /** @type {Array<Chunk>} */\n  let chunks = [];\n  /** @type {Array<Token>} */\n  let stack = [];\n  /** @type {boolean | undefined} */\n  let consumed = true;\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    consume,\n    enter,\n    exit,\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  };\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    code: null,\n    containerState: {},\n    defineSkip,\n    events: [],\n    now,\n    parser,\n    previous: null,\n    sliceSerialize,\n    sliceStream,\n    write\n  };\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects);\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode;\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize);\n  }\n  return context;\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice);\n    main();\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return [];\n    }\n    addResult(initialize, 0);\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context);\n    return context.events;\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs);\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token);\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    } = point;\n    return {\n      _bufferIndex,\n      _index,\n      line,\n      column,\n      offset\n    };\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column;\n    accountForPotentialSkip();\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex;\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index];\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index;\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0;\n        }\n        while (point._index === chunkIndex && point._bufferIndex < chunk.length) {\n          go(chunk.charCodeAt(point._bufferIndex));\n        }\n      } else {\n        go(chunk);\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   *   Code.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function go(code) {\n    consumed = undefined;\n    expectedCode = code;\n    state = state(code);\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++;\n      point.column = 1;\n      point.offset += code === -3 ? 2 : 1;\n      accountForPotentialSkip();\n    } else if (code !== -1) {\n      point.column++;\n      point.offset++;\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++;\n    } else {\n      point._bufferIndex++;\n\n      // At end of string chunk.\n      if (point._bufferIndex ===\n      // Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      /** @type {string} */\n      chunks[point._index].length) {\n        point._bufferIndex = -1;\n        point._index++;\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code;\n\n    // Mark as consumed.\n    consumed = true;\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {};\n    token.type = type;\n    token.start = now();\n    context.events.push(['enter', token, context]);\n    stack.push(token);\n    return token;\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop();\n    token.end = now();\n    context.events.push(['exit', token, context]);\n    return token;\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from);\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore();\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   *   Callback.\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   *   Fields.\n   */\n  function constructFactory(onreturn, fields) {\n    return hook;\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | ConstructRecord | Construct} constructs\n     *   Constructs.\n     * @param {State} returnState\n     *   State.\n     * @param {State | undefined} [bogusState]\n     *   State.\n     * @returns {State}\n     *   State.\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {ReadonlyArray<Construct>} */\n      let listOfConstructs;\n      /** @type {number} */\n      let constructIndex;\n      /** @type {Construct} */\n      let currentConstruct;\n      /** @type {Info} */\n      let info;\n      return Array.isArray(constructs) ? /* c8 ignore next 1 */\n      handleListOfConstructs(constructs) : 'tokenize' in constructs ?\n      // Looks like a construct.\n      handleListOfConstructs([(/** @type {Construct} */constructs)]) : handleMapOfConstructs(constructs);\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleMapOfConstructs(map) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          const left = code !== null && map[code];\n          const all = code !== null && map.null;\n          const list = [\n          // To do: add more extension tests.\n          /* c8 ignore next 2 */\n          ...(Array.isArray(left) ? left : left ? [left] : []), ...(Array.isArray(all) ? all : all ? [all] : [])];\n          return handleListOfConstructs(list)(code);\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ReadonlyArray<Construct>} list\n       *   Constructs.\n       * @returns {State}\n       *   State.\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list;\n        constructIndex = 0;\n        if (list.length === 0) {\n          return bogusState;\n        }\n        return handleConstruct(list[constructIndex]);\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       *   Construct.\n       * @returns {State}\n       *   State.\n       */\n      function handleConstruct(construct) {\n        return start;\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store();\n          currentConstruct = construct;\n          if (!construct.partial) {\n            context.currentConstruct = construct;\n          }\n\n          // Always populated by defaults.\n\n          if (construct.name && context.parser.constructs.disable.null.includes(construct.name)) {\n            return nok(code);\n          }\n          return construct.tokenize.call(\n          // If we do have fields, create an object w/ `context` as its\n          // prototype.\n          // This allows a “live binding”, which is needed for `interrupt`.\n          fields ? Object.assign(Object.create(context), fields) : context, effects, ok, nok)(code);\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true;\n        onreturn(currentConstruct, info);\n        return returnState;\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true;\n        info.restore();\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex]);\n        }\n        return bogusState;\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   *   Construct.\n   * @param {number} from\n   *   From.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct);\n    }\n    if (construct.resolve) {\n      splice(context.events, from, context.events.length - from, construct.resolve(context.events.slice(from), context));\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context);\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   *   Info.\n   */\n  function store() {\n    const startPoint = now();\n    const startPrevious = context.previous;\n    const startCurrentConstruct = context.currentConstruct;\n    const startEventsIndex = context.events.length;\n    const startStack = Array.from(stack);\n    return {\n      from: startEventsIndex,\n      restore\n    };\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     *   Nothing.\n     */\n    function restore() {\n      point = startPoint;\n      context.previous = startPrevious;\n      context.currentConstruct = startCurrentConstruct;\n      context.events.length = startEventsIndex;\n      stack = startStack;\n      accountForPotentialSkip();\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line];\n      point.offset += columnStart[point.line] - 1;\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {Pick<Token, 'end' | 'start'>} token\n *   Token.\n * @returns {Array<Chunk>}\n *   Chunks.\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index;\n  const startBufferIndex = token.start._bufferIndex;\n  const endIndex = token.end._index;\n  const endBufferIndex = token.end._bufferIndex;\n  /** @type {Array<Chunk>} */\n  let view;\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)];\n  } else {\n    view = chunks.slice(startIndex, endIndex);\n    if (startBufferIndex > -1) {\n      const head = view[0];\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex);\n        /* c8 ignore next 4 -- used to be used, no longer */\n      } else {\n        view.shift();\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex));\n    }\n  }\n  return view;\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {ReadonlyArray<Chunk>} chunks\n *   Chunks.\n * @param {boolean | undefined} [expandTabs=false]\n *   Whether to expand tabs (default: `false`).\n * @returns {string}\n *   Result.\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1;\n  /** @type {Array<string>} */\n  const result = [];\n  /** @type {boolean | undefined} */\n  let atTab;\n  while (++index < chunks.length) {\n    const chunk = chunks[index];\n    /** @type {string} */\n    let value;\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else switch (chunk) {\n      case -5:\n        {\n          value = \"\\r\";\n          break;\n        }\n      case -4:\n        {\n          value = \"\\n\";\n          break;\n        }\n      case -3:\n        {\n          value = \"\\r\" + \"\\n\";\n          break;\n        }\n      case -2:\n        {\n          value = expandTabs ? \" \" : \"\\t\";\n          break;\n        }\n      case -1:\n        {\n          if (!expandTabs && atTab) continue;\n          value = \" \";\n          break;\n        }\n      default:\n        {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk);\n        }\n    }\n    atTab = chunk === -2;\n    result.push(value);\n  }\n  return result.join('');\n}","/**\n * @import {\n *   Create,\n *   FullNormalizedExtension,\n *   InitialConstruct,\n *   ParseContext,\n *   ParseOptions\n * } from 'micromark-util-types'\n */\n\nimport { combineExtensions } from 'micromark-util-combine-extensions';\nimport { content } from './initialize/content.js';\nimport { document } from './initialize/document.js';\nimport { flow } from './initialize/flow.js';\nimport { string, text } from './initialize/text.js';\nimport * as defaultConstructs from './constructs.js';\nimport { createTokenizer } from './create-tokenizer.js';\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n *   Configuration (optional).\n * @returns {ParseContext}\n *   Parser.\n */\nexport function parse(options) {\n  const settings = options || {};\n  const constructs = /** @type {FullNormalizedExtension} */\n  combineExtensions([defaultConstructs, ...(settings.extensions || [])]);\n\n  /** @type {ParseContext} */\n  const parser = {\n    constructs,\n    content: create(content),\n    defined: [],\n    document: create(document),\n    flow: create(flow),\n    lazy: {},\n    string: create(string),\n    text: create(text)\n  };\n  return parser;\n\n  /**\n   * @param {InitialConstruct} initial\n   *   Construct to start with.\n   * @returns {Create}\n   *   Create a tokenizer.\n   */\n  function create(initial) {\n    return creator;\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from);\n    }\n  }\n}","/**\n * @import {Chunk, Code, Encoding, Value} from 'micromark-util-types'\n */\n\n/**\n * @callback Preprocessor\n *   Preprocess a value.\n * @param {Value} value\n *   Value.\n * @param {Encoding | null | undefined} [encoding]\n *   Encoding when `value` is a typed array (optional).\n * @param {boolean | null | undefined} [end=false]\n *   Whether this is the last chunk (default: `false`).\n * @returns {Array<Chunk>}\n *   Chunks.\n */\n\nconst search = /[\\0\\t\\n\\r]/g;\n\n/**\n * @returns {Preprocessor}\n *   Preprocess a value.\n */\nexport function preprocess() {\n  let column = 1;\n  let buffer = '';\n  /** @type {boolean | undefined} */\n  let start = true;\n  /** @type {boolean | undefined} */\n  let atCarriageReturn;\n  return preprocessor;\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = [];\n    /** @type {RegExpMatchArray | null} */\n    let match;\n    /** @type {number} */\n    let next;\n    /** @type {number} */\n    let startPosition;\n    /** @type {number} */\n    let endPosition;\n    /** @type {Code} */\n    let code;\n    value = buffer + (typeof value === 'string' ? value.toString() : new TextDecoder(encoding || undefined).decode(value));\n    startPosition = 0;\n    buffer = '';\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++;\n      }\n      start = undefined;\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition;\n      match = search.exec(value);\n      endPosition = match && match.index !== undefined ? match.index : value.length;\n      code = value.charCodeAt(endPosition);\n      if (!match) {\n        buffer = value.slice(startPosition);\n        break;\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3);\n        atCarriageReturn = undefined;\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5);\n          atCarriageReturn = undefined;\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition));\n          column += endPosition - startPosition;\n        }\n        switch (code) {\n          case 0:\n            {\n              chunks.push(65533);\n              column++;\n              break;\n            }\n          case 9:\n            {\n              next = Math.ceil(column / 4) * 4;\n              chunks.push(-2);\n              while (column++ < next) chunks.push(-1);\n              break;\n            }\n          case 10:\n            {\n              chunks.push(-4);\n              column = 1;\n              break;\n            }\n          default:\n            {\n              atCarriageReturn = true;\n              column = 1;\n            }\n        }\n      }\n      startPosition = endPosition + 1;\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5);\n      if (buffer) chunks.push(buffer);\n      chunks.push(null);\n    }\n    return chunks;\n  }\n}","import { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nconst characterEscapeOrReference = /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi;\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode);\n}\n\n/**\n * @param {string} $0\n *   Match.\n * @param {string} $1\n *   Character escape.\n * @param {string} $2\n *   Character reference.\n * @returns {string}\n *   Decoded value\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1;\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0);\n  if (head === 35) {\n    const head = $2.charCodeAt(1);\n    const hex = head === 120 || head === 88;\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10);\n  }\n  return decodeNamedCharacterReference($2) || $0;\n}","/**\n * @import {\n *   Break,\n *   Blockquote,\n *   Code,\n *   Definition,\n *   Emphasis,\n *   Heading,\n *   Html,\n *   Image,\n *   InlineCode,\n *   Link,\n *   ListItem,\n *   List,\n *   Nodes,\n *   Paragraph,\n *   PhrasingContent,\n *   ReferenceType,\n *   Root,\n *   Strong,\n *   Text,\n *   ThematicBreak\n * } from 'mdast'\n * @import {\n *   Encoding,\n *   Event,\n *   Token,\n *   Value\n * } from 'micromark-util-types'\n * @import {Point} from 'unist'\n * @import {\n *   CompileContext,\n *   CompileData,\n *   Config,\n *   Extension,\n *   Handle,\n *   OnEnterError,\n *   Options\n * } from './types.js'\n */\n\nimport { toString } from 'mdast-util-to-string';\nimport { parse, postprocess, preprocess } from 'micromark';\nimport { decodeNumericCharacterReference } from 'micromark-util-decode-numeric-character-reference';\nimport { decodeString } from 'micromark-util-decode-string';\nimport { normalizeIdentifier } from 'micromark-util-normalize-identifier';\nimport { decodeNamedCharacterReference } from 'decode-named-character-reference';\nimport { stringifyPosition } from 'unist-util-stringify-position';\nconst own = {}.hasOwnProperty;\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding;\n    encoding = undefined;\n  }\n  return compiler(options)(postprocess(parse(options).document().write(preprocess()(value, encoding, true))));\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      characterReference: onexitcharacterreference,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  };\n  configure(config, (options || {}).mdastExtensions || []);\n\n  /** @type {CompileData} */\n  const data = {};\n  return compile;\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    };\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    };\n    /** @type {Array<number>} */\n    const listStack = [];\n    let index = -1;\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (events[index][1].type === \"listOrdered\" || events[index][1].type === \"listUnordered\") {\n        if (events[index][0] === 'enter') {\n          listStack.push(index);\n        } else {\n          const tail = listStack.pop();\n          index = prepareList(events, tail, index);\n        }\n      }\n    }\n    index = -1;\n    while (++index < events.length) {\n      const handler = config[events[index][0]];\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(Object.assign({\n          sliceSerialize: events[index][2].sliceSerialize\n        }, context), events[index][1]);\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1];\n      const handler = tail[1] || defaultOnError;\n      handler.call(context, undefined, tail[0]);\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(events.length > 0 ? events[0][1].start : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }),\n      end: point(events.length > 0 ? events[events.length - 2][1].end : {\n        line: 1,\n        column: 1,\n        offset: 0\n      })\n    };\n\n    // Call transforms.\n    index = -1;\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree;\n    }\n    return tree;\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1;\n    let containerBalance = -1;\n    let listSpread = false;\n    /** @type {Token | undefined} */\n    let listItem;\n    /** @type {number | undefined} */\n    let lineIndex;\n    /** @type {number | undefined} */\n    let firstBlankLineIndex;\n    /** @type {boolean | undefined} */\n    let atMarker;\n    while (++index <= length) {\n      const event = events[index];\n      switch (event[1].type) {\n        case \"listUnordered\":\n        case \"listOrdered\":\n        case \"blockQuote\":\n          {\n            if (event[0] === 'enter') {\n              containerBalance++;\n            } else {\n              containerBalance--;\n            }\n            atMarker = undefined;\n            break;\n          }\n        case \"lineEndingBlank\":\n          {\n            if (event[0] === 'enter') {\n              if (listItem && !atMarker && !containerBalance && !firstBlankLineIndex) {\n                firstBlankLineIndex = index;\n              }\n              atMarker = undefined;\n            }\n            break;\n          }\n        case \"linePrefix\":\n        case \"listItemValue\":\n        case \"listItemMarker\":\n        case \"listItemPrefix\":\n        case \"listItemPrefixWhitespace\":\n          {\n            // Empty.\n\n            break;\n          }\n        default:\n          {\n            atMarker = undefined;\n          }\n      }\n      if (!containerBalance && event[0] === 'enter' && event[1].type === \"listItemPrefix\" || containerBalance === -1 && event[0] === 'exit' && (event[1].type === \"listUnordered\" || event[1].type === \"listOrdered\")) {\n        if (listItem) {\n          let tailIndex = index;\n          lineIndex = undefined;\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex];\n            if (tailEvent[1].type === \"lineEnding\" || tailEvent[1].type === \"lineEndingBlank\") {\n              if (tailEvent[0] === 'exit') continue;\n              if (lineIndex) {\n                events[lineIndex][1].type = \"lineEndingBlank\";\n                listSpread = true;\n              }\n              tailEvent[1].type = \"lineEnding\";\n              lineIndex = tailIndex;\n            } else if (tailEvent[1].type === \"linePrefix\" || tailEvent[1].type === \"blockQuotePrefix\" || tailEvent[1].type === \"blockQuotePrefixWhitespace\" || tailEvent[1].type === \"blockQuoteMarker\" || tailEvent[1].type === \"listItemIndent\") {\n              // Empty\n            } else {\n              break;\n            }\n          }\n          if (firstBlankLineIndex && (!lineIndex || firstBlankLineIndex < lineIndex)) {\n            listItem._spread = true;\n          }\n\n          // Fix position.\n          listItem.end = Object.assign({}, lineIndex ? events[lineIndex][1].start : event[1].end);\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]]);\n          index++;\n          length++;\n        }\n\n        // Create a new list item.\n        if (event[1].type === \"listItemPrefix\") {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          };\n          listItem = item;\n          events.splice(index, 0, ['enter', item, event[2]]);\n          index++;\n          length++;\n          firstBlankLineIndex = undefined;\n          atMarker = true;\n        }\n      }\n    }\n    events[start][1]._spread = listSpread;\n    return length;\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token);\n      if (and) and.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['buffer']}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    });\n  }\n\n  /**\n   * @type {CompileContext['enter']}\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children;\n    siblings.push(node);\n    this.stack.push(node);\n    this.tokenStack.push([token, errorHandler || undefined]);\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    };\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close;\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token);\n      exit.call(this, token);\n    }\n  }\n\n  /**\n   * @type {CompileContext['exit']}\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop();\n    const open = this.tokenStack.pop();\n    if (!open) {\n      throw new Error('Cannot close `' + token.type + '` (' + stringifyPosition({\n        start: token.start,\n        end: token.end\n      }) + '): it’s not open');\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0]);\n      } else {\n        const handler = open[1] || defaultOnError;\n        handler.call(this, token, open[0]);\n      }\n    }\n    node.position.end = point(token.end);\n  }\n\n  /**\n   * @type {CompileContext['resume']}\n   */\n  function resume() {\n    return toString(this.stack.pop());\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2];\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10);\n      this.data.expectingFirstListItemValue = undefined;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.lang = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.meta = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return;\n    this.buffer();\n    this.data.flowCodeInside = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '');\n    this.data.flowCodeInside = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '');\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.label = label;\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length;\n      node.depth = depth;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1];\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1];\n    /** @type {Array<Nodes>} */\n    const siblings = node.children;\n    let tail = siblings[siblings.length - 1];\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text();\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      };\n      siblings.push(tail);\n    }\n    this.stack.push(tail);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop();\n    tail.value += this.sliceSerialize(token);\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1];\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1];\n      tail.position.end = point(token.end);\n      this.data.atHardBreak = undefined;\n      return;\n    }\n    if (!this.data.setextHeadingSlurpLineEnding && config.canContainEols.includes(context.type)) {\n      onenterdata.call(this, token);\n      onexitdata.call(this, token);\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.value = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1];\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut';\n      node.type += 'Reference';\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType;\n      // @ts-expect-error: mutate.\n      delete node.url;\n      delete node.title;\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier;\n      // @ts-expect-error: mutate.\n      delete node.label;\n    }\n    this.data.referenceType = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token);\n    const ancestor = this.stack[this.stack.length - 2];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string);\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase();\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1];\n    const value = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // Assume a reference.\n    this.data.inReference = true;\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children;\n      node.children = children;\n    } else {\n      node.alt = value;\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.url = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    node.title = data;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume();\n    const node = this.stack[this.stack.length - 1];\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label;\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(this.sliceSerialize(token)).toLowerCase();\n    this.data.referenceType = 'full';\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token);\n    const type = this.data.characterReferenceType;\n    /** @type {string} */\n    let value;\n    if (type) {\n      value = decodeNumericCharacterReference(data, type === \"characterReferenceMarkerNumeric\" ? 10 : 16);\n      this.data.characterReferenceType = undefined;\n    } else {\n      const result = decodeNamedCharacterReference(data);\n      value = result;\n    }\n    const tail = this.stack[this.stack.length - 1];\n    tail.value += value;\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreference(token) {\n    const tail = this.stack.pop();\n    tail.position.end = point(token.end);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = this.sliceSerialize(token);\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token);\n    const node = this.stack[this.stack.length - 1];\n    node.url = 'mailto:' + this.sliceSerialize(token);\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    };\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    };\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    };\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    };\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    };\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    };\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    };\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    };\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    };\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    };\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    };\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    };\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    };\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    };\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    };\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  };\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1;\n  while (++index < extensions.length) {\n    const value = extensions[index];\n    if (Array.isArray(value)) {\n      configure(combined, value);\n    } else {\n      extension(combined, value);\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key;\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'transforms':\n          {\n            const right = extension[key];\n            if (right) {\n              combined[key].push(...right);\n            }\n            break;\n          }\n        case 'enter':\n        case 'exit':\n          {\n            const right = extension[key];\n            if (right) {\n              Object.assign(combined[key], right);\n            }\n            break;\n          }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error('Cannot close `' + left.type + '` (' + stringifyPosition({\n      start: left.start,\n      end: left.end\n    }) + '): a different token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is open');\n  } else {\n    throw new Error('Cannot close document, a token (`' + right.type + '`, ' + stringifyPosition({\n      start: right.start,\n      end: right.end\n    }) + ') is still open');\n  }\n}","/**\n * @import {Event} from 'micromark-util-types'\n */\n\nimport { subtokenize } from 'micromark-util-subtokenize';\n\n/**\n * @param {Array<Event>} events\n *   Events.\n * @returns {Array<Event>}\n *   Events.\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events;\n}","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(definition.url || ''), alt: node.alt}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const definition = state.definitionById.get(id)\n\n  if (!definition) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(definition.url || '')}\n\n  if (definition.title !== null && definition.title !== undefined) {\n    properties.title = definition.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const definition = state.footnoteById.get(\n      state.footnoteOrder[referenceIndex]\n    )\n\n    if (!definition) {\n      continue\n    }\n\n    const content = state.all(definition)\n    const id = String(definition.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(definition, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","/**\n * @import {Root as HastRoot} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {Options as ToHastOptions} from 'mdast-util-to-hast'\n * @import {Processor} from 'unified'\n * @import {VFile} from 'vfile'\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * * if a processor is given,\n *   runs the (rehype) plugins used on it with a hast tree,\n *   then discards the result (*bridge mode*)\n * * otherwise,\n *   returns a hast tree,\n *   the plugins used after `remarkRehype` are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**:\n * > It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * * `rehype-stringify` also has an option `allowDangerousHtml` which will\n *   output the raw HTML.\n *   This is typically discouraged as noted by the option name but is useful if\n *   you completely trust authors\n * * `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *   into standard hast nodes (`element`, `text`, etc);\n *   this is a heavy task as it needs a full HTML parser,\n *   but it is the only way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark,\n * which we follow by default.\n * They are supported by GitHub,\n * so footnotes can be enabled in markdown with `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes,\n * which is hidden for sighted users but shown to assistive technology.\n * When your page is not in English,\n * you must define translated values.\n *\n * Back references use ARIA attributes,\n * but the section label itself uses a heading that is hidden with an\n * `sr-only` class.\n * To show it to sighted users,\n * define different attributes in `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem,\n * as it links footnote calls to footnote definitions on the page through `id`\n * attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * * when the node has a `value`\n *   (and doesn’t have `data.hName`, `data.hProperties`, or `data.hChildren`,\n *   see later),\n *   create a hast `text` node\n * * otherwise,\n *   create a `<div>` element (which could be changed with `data.hName`),\n *   with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @overload\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge | TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given,\n *   configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    // To do: in the future, disallow ` || options` fallback.\n    // With `unified-engine`, `destination` can be `undefined` but\n    // `options` will be the file set.\n    // We should not pass that as `options`.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(destination || options)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const minpath = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [extname]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, extname) {\n  if (extname !== undefined && typeof extname !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (\n    extname === undefined ||\n    extname.length === 0 ||\n    extname.length > path.length\n  ) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (extname === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extnameIndex = extname.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extnameIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === extname.codePointAt(extnameIndex--)) {\n          if (extnameIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extnameIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n      ? '//'\n      : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const minproc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @import {Node, Point, Position} from 'unist'\n * @import {Options as MessageOptions} from 'vfile-message'\n * @import {Compatible, Data, Map, Options, Value} from 'vfile'\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {minpath} from '#minpath'\nimport {minproc} from '#minproc'\nimport {urlToPath, isUrl} from '#minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    // Prevent calling `cwd` (which could be expensive) if it’s not needed;\n    // the empty string will be overridden in the next block.\n    this.cwd = 'cwd' in options ? '' : minproc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const field = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        field in options &&\n        options[field] !== undefined &&\n        options[field] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[field] = field === 'history' ? [...options[field]] : options[field]\n      }\n    }\n\n    /** @type {string} */\n    let field\n\n    // Set non-path related properties.\n    for (field in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(field)) {\n        // @ts-expect-error: fine to set other things.\n        this[field] = options[field]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path)\n      : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = minpath.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string'\n      ? minpath.dirname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = minpath.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string'\n      ? minpath.extname(this.path)\n      : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = minpath.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? minpath.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = minpath.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(minpath.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + minpath.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const value = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return value.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        // Not needed for us in `unified`: we only call this on the `copy`\n        // function,\n        // and we don't need to add its fields (`length`, `name`)\n        // over.\n        // See also: GH-246.\n        // const names = Object.getOwnPropertyNames(value)\n        //\n        // for (const p of names) {\n        //   const descriptor = Object.getOwnPropertyDescriptor(value, p)\n        //   if (descriptor) Object.defineProperty(apply, p, descriptor)\n        // }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@linkcode CompileResultMap}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@linkcode Node}\n *   and {@linkcode VFile} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@linkcode CompileResultMap}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@linkcode VFile} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@linkcode Node}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@linkcode Parser}, this should be\n *       `string`.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@linkcode Transformer}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@linkcode Parser}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@linkcode Compiler}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@linkcode VFile} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@linkcode VFile}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@linkcode Processor}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > **Note**: to register custom data in TypeScript, augment the\n   * > {@linkcode Data} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@linkcode CompileResultMap}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","/**\n * @import {Element, Nodes, Parents, Root} from 'hast'\n * @import {Root as MdastRoot} from 'mdast'\n * @import {ComponentType, JSX, ReactElement, ReactNode} from 'react'\n * @import {Options as RemarkRehypeOptions} from 'remark-rehype'\n * @import {BuildVisitor} from 'unist-util-visit'\n * @import {PluggableList, Processor} from 'unified'\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n */\n\n/**\n * @typedef ExtraProps\n *   Extra fields we pass.\n * @property {Element | undefined} [node]\n *   passed when `passNode` is on.\n */\n\n/**\n * @typedef {{\n *   [Key in keyof JSX.IntrinsicElements]?: ComponentType<JSX.IntrinsicElements[Key] & ExtraProps> | keyof JSX.IntrinsicElements\n * }} Components\n *   Map tag names to components.\n */\n\n/**\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n */\n\n/**\n * @typedef HooksOptionsOnly\n *   Configuration specifically for {@linkcode MarkdownHooks}.\n * @property {ReactNode | null | undefined} [fallback]\n *   Content to render while the processor processing the markdown (optional).\n */\n\n/**\n * @typedef {Options & HooksOptionsOnly} HooksOptions\n *   Configuration for {@linkcode MarkdownHooks};\n *   extends the regular {@linkcode Options} with a `fallback` prop.\n */\n\n/**\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport {useEffect, useState} from 'react'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {from: 'className', id: 'remove-classname'},\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * This is a synchronous component.\n * When using async plugins,\n * see {@linkcode MarkdownAsync} or {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nexport function Markdown(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  return post(processor.runSync(processor.parse(file), file), options)\n}\n\n/**\n * Component to render markdown with support for async plugins\n * through async/await.\n *\n * Components returning promises are supported on the server.\n * For async support on the client,\n * see {@linkcode MarkdownHooks}.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Promise<ReactElement>}\n *   Promise to a React element.\n */\nexport async function MarkdownAsync(options) {\n  const processor = createProcessor(options)\n  const file = createFile(options)\n  const tree = await processor.run(processor.parse(file), file)\n  return post(tree, options)\n}\n\n/**\n * Component to render markdown with support for async plugins through hooks.\n *\n * This uses `useEffect` and `useState` hooks.\n * Hooks run on the client and do not immediately render something.\n * For async support on the server,\n * see {@linkcode MarkdownAsync}.\n *\n * @param {Readonly<HooksOptions>} options\n *   Props.\n * @returns {ReactNode}\n *   React node.\n */\nexport function MarkdownHooks(options) {\n  const processor = createProcessor(options)\n  const [error, setError] = useState(\n    /** @type {Error | undefined} */ (undefined)\n  )\n  const [tree, setTree] = useState(/** @type {Root | undefined} */ (undefined))\n\n  useEffect(\n    function () {\n      let cancelled = false\n      const file = createFile(options)\n\n      processor.run(processor.parse(file), file, function (error, tree) {\n        if (!cancelled) {\n          setError(error)\n          setTree(tree)\n        }\n      })\n\n      /**\n       * @returns {undefined}\n       *   Nothing.\n       */\n      return function () {\n        cancelled = true\n      }\n    },\n    [\n      options.children,\n      options.rehypePlugins,\n      options.remarkPlugins,\n      options.remarkRehypeOptions\n    ]\n  )\n\n  if (error) throw error\n\n  return tree ? post(tree, options) : options.fallback\n}\n\n/**\n * Set up the `unified` processor.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {Processor<MdastRoot, MdastRoot, Root, undefined, undefined>}\n *   Result.\n */\nfunction createProcessor(options) {\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  return processor\n}\n\n/**\n * Set up the virtual file.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {VFile}\n *   Result.\n */\nfunction createFile(options) {\n  const children = options.children || ''\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  return file\n}\n\n/**\n * Process the result from unified some more.\n *\n * @param {Nodes} tree\n *   Tree.\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {ReactElement}\n *   React element.\n */\nfunction post(tree, options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  visit(tree, transform)\n\n  return toJsxRuntime(tree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {BuildVisitor<Root>} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n          ? disallowedElements.includes(node.tagName)\n          : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon === -1 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash !== -1 && colon > slash) ||\n    (questionMark !== -1 && colon > questionMark) ||\n    (numberSign !== -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occurs every 4 years, except for years that are divisible by 100 and not divisible by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n\n/**\n * @constant\n * @name constructFromSymbol\n * @summary Symbol enabling Date extensions to inherit properties from the reference date.\n *\n * The symbol is used to enable the `constructFrom` function to construct a date\n * using a reference date and a value. It allows to transfer extra properties\n * from the reference date to the new date. It's useful for extensions like\n * [`TZDate`](https://github.com/date-fns/tz) that accept a time zone as\n * a constructor argument.\n */\nexport const constructFromSymbol = Symbol.for(\"constructDateFrom\");\n","import { constructFromSymbol } from \"./constants.js\";\n\n/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * Starting from v3.7.0, it allows to construct a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from \"./constructFrom/date-fns\";\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date>(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use constructor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   );\n * }\n */\nexport function constructFrom(date, value) {\n  if (typeof date === \"function\") return date(value);\n\n  if (date && typeof date === \"object\" && constructFromSymbol in date)\n    return date[constructFromSymbol](value);\n\n  if (date instanceof Date) return new date.constructor(value);\n\n  return new Date(value);\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { constructFrom } from \"./constructFrom.js\";\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * Starting from v3.7.0, it clones a date using `[Symbol.for(\"constructDateFrom\")]`\n * enabling to transfer extra properties from the reference date to the new date.\n * It's useful for extensions like [`TZDate`](https://github.com/date-fns/tz)\n * that accept a time zone as a constructor argument.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument, context) {\n  // [TODO] Get rid of `toDate` or `constructFrom`?\n  return constructFrom(context || argument, argument);\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date, options?.in);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfISOWeek} function options.\n */\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date, options) {\n  return startOfWeek(date, { ...options, weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeekYear} function options.\n */\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(_date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { toDate } from \"../toDate.js\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfDay} function options.\n */\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { millisecondsInDay } from \"./constants.js\";\nimport { startOfDay } from \"./startOfDay.js\";\n\n/**\n * The {@link differenceInCalendarDays} function options.\n */\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - The options object\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const laterStartOfDay = startOfDay(laterDate_);\n  const earlierStartOfDay = startOfDay(earlierDate_);\n\n  const laterTimestamp =\n    +laterStartOfDay - getTimezoneOffsetInMilliseconds(laterStartOfDay);\n  const earlierTimestamp =\n    +earlierStartOfDay - getTimezoneOffsetInMilliseconds(earlierStartOfDay);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((laterTimestamp - earlierTimestamp) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","import { constructFrom } from \"../constructFrom.js\";\n\nexport function normalizeDates(context, ...dates) {\n  const normalize = constructFrom.bind(\n    null,\n    context || dates.find((date) => typeof date === \"object\"),\n  );\n  return dates.map(normalize);\n}\n","import { isDate } from \"./isDate.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertible into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  return !((!isDate(date) && typeof date !== \"number\") || isNaN(+toDate(date)));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // [TODO] -- I challenge you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // [TODO] -- I challenge you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // [TODO] I challenge you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","import { formatDistance } from \"./en-US/_lib/formatDistance.js\";\nimport { formatLong } from \"./en-US/_lib/formatLong.js\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.js\";\nimport { localize } from \"./en-US/_lib/localize.js\";\nimport { match } from \"./en-US/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.js\";\nimport { startOfYear } from \"./startOfYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getDayOfYear} function options.\n */\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link startOfYear} function options.\n */\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - The options\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date, options) {\n  const date_ = toDate(date, options?.in);\n  date_.setFullYear(date_.getFullYear(), 0, 1);\n  date_.setHours(0, 0, 0, 0);\n  return date_;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getISOWeek} function options.\n */\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @param date - The given date\n * @param options - The options\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { constructFrom } from \"./constructFrom.js\";\nimport { getISOWeekYear } from \"./getISOWeekYear.js\";\nimport { startOfISOWeek } from \"./startOfISOWeek.js\";\n\n/**\n * The {@link startOfISOWeekYear} function options.\n */\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date, options) {\n  const year = getISOWeekYear(date, options);\n  const fourthOfJanuary = constructFrom(options?.in || date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date, options?.in);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(options?.in || date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(options?.in || date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (+_date >= +startOfNextYear) {\n    return year + 1;\n  } else if (+_date >= +startOfThisYear) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\nimport { startOfWeekYear } from \"./startOfWeekYear.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\nexport function getWeek(date, options) {\n  const _date = toDate(date, options?.in);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { getWeekYear } from \"./getWeekYear.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(options?.in || date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.js\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","import { getDayOfYear } from \"../../getDayOfYear.js\";\nimport { getISOWeek } from \"../../getISOWeek.js\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.js\";\nimport { getWeek } from \"../../getWeek.js\";\nimport { getWeekYear } from \"../../getWeekYear.js\";\n\nimport { addLeadingZeros } from \"../addLeadingZeros.js\";\nimport { lightFormatters } from \"./lightFormatters.js\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(+date / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    return addLeadingZeros(+date, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { formatters } from \"./_lib/format/formatters.js\";\nimport { longFormatters } from \"./_lib/format/longFormatters.js\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.js\";\nimport { isValid } from \"./isValid.js\";\nimport { toDate } from \"./toDate.js\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date, options?.in);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","import { memo } from 'react';\r\nimport { User, Clock } from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { format } from 'date-fns';\r\n\r\ninterface MessageProps {\r\n  content: string;\r\n  timestamp: Date;\r\n  className?: string;\r\n}\r\n\r\nexport const UserMessage = memo(({ content, timestamp, className }: MessageProps) => {\r\n  return (\r\n    <div className={cn('flex justify-end mb-6', className)}>\r\n      <div className=\"flex flex-col items-end max-w-[80%]\">\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <span className=\"text-xs text-muted-foreground\">\r\n            {format(timestamp, 'HH:mm')}\r\n          </span>\r\n          <User className=\"w-4 h-4 text-primary\" />\r\n        </div>\r\n        <div className=\"bg-primary text-primary-foreground rounded-lg rounded-tr-none px-4 py-3\">\r\n          <div className=\"prose prose-sm prose-invert max-w-none\">\r\n            <ReactMarkdown>\r\n              {content}\r\n            </ReactMarkdown>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nUserMessage.displayName = 'UserMessage';\r\n\r\ninterface AIMessageProps extends MessageProps {\r\n  isStreaming?: boolean;\r\n  phase?: string;\r\n  model?: string;\r\n}\r\n\r\nexport const AIMessage = memo(({ \r\n  content, \r\n  timestamp, \r\n  isStreaming = false, \r\n  phase,\r\n  model,\r\n  className \r\n}: AIMessageProps) => {\r\n  return (\r\n    <div className={cn('flex justify-start mb-6', className)}>\r\n      <div className=\"flex flex-col items-start max-w-[80%]\">\r\n        <div className=\"flex items-center gap-2 mb-2\">\r\n          <div className=\"w-6 h-6 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center\">\r\n            <span className=\"text-xs font-bold text-white\">AI</span>\r\n          </div>\r\n          <span className=\"text-xs text-muted-foreground\">\r\n            {format(timestamp, 'HH:mm')}\r\n          </span>\r\n          {model && (\r\n            <span className=\"text-xs bg-muted px-2 py-1 rounded\">\r\n              {model}\r\n            </span>\r\n          )}\r\n          {phase && (\r\n            <span className=\"text-xs bg-blue-100 text-blue-800 px-2 py-1 rounded\">\r\n              {phase}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"bg-muted rounded-lg rounded-tl-none px-4 py-3 relative\">\r\n          <div className=\"prose prose-sm max-w-none\">\r\n            <ReactMarkdown>\r\n              {content}\r\n            </ReactMarkdown>\r\n          </div>\r\n          {isStreaming && (\r\n            <div className=\"absolute bottom-2 right-2\">\r\n              <div className=\"flex space-x-1\">\r\n                <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce\"></div>\r\n                <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce delay-100\"></div>\r\n                <div className=\"w-2 h-2 bg-primary rounded-full animate-bounce delay-200\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nAIMessage.displayName = 'AIMessage';\r\n\r\ninterface SystemMessageProps {\r\n  content: string;\r\n  timestamp: Date;\r\n  type?: 'info' | 'warning' | 'error' | 'success';\r\n  className?: string;\r\n}\r\n\r\nexport const SystemMessage = memo(({ \r\n  content, \r\n  timestamp, \r\n  type = 'info',\r\n  className \r\n}: SystemMessageProps) => {\r\n  const typeStyles = {\r\n    info: 'bg-blue-50 text-blue-800 border-blue-200',\r\n    warning: 'bg-yellow-50 text-yellow-800 border-yellow-200',\r\n    error: 'bg-red-50 text-red-800 border-red-200',\r\n    success: 'bg-green-50 text-green-800 border-green-200'\r\n  };\r\n\r\n  const typeIcons = {\r\n    info: Clock,\r\n    warning: Clock,\r\n    error: Clock,\r\n    success: Clock\r\n  };\r\n\r\n  const Icon = typeIcons[type];\r\n\r\n  return (\r\n    <div className={cn('flex justify-center mb-4', className)}>\r\n      <div className={cn(\r\n        'px-3 py-2 rounded-lg border text-sm flex items-center gap-2 max-w-fit',\r\n        typeStyles[type]\r\n      )}>\r\n        <Icon className=\"w-3 h-3\" />\r\n        <span>{content}</span>\r\n        <span className=\"text-xs opacity-70\">\r\n          {format(timestamp, 'HH:mm')}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nSystemMessage.displayName = 'SystemMessage';","import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nTextarea.displayName = \"Textarea\"\r\n\r\nexport { Textarea }","import { useState, useRef, useCallback, KeyboardEvent } from 'react';\r\nimport { Send, Paperclip, Square, Loader2 } from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface ChatInputProps {\r\n  onSendMessage: (message: string, files?: File[]) => void;\r\n  isGenerating?: boolean;\r\n  onStopGeneration?: () => void;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  className?: string;\r\n}\r\n\r\nexport function ChatInput({\r\n  onSendMessage,\r\n  isGenerating = false,\r\n  onStopGeneration,\r\n  placeholder = \"Describe what you want to build...\",\r\n  disabled = false,\r\n  className\r\n}: ChatInputProps) {\r\n  const [message, setMessage] = useState('');\r\n  const [attachedFiles, setAttachedFiles] = useState<File[]>([]);\r\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleSend = useCallback(() => {\r\n    if (!message.trim() || isGenerating) return;\r\n    \r\n    onSendMessage(message.trim(), attachedFiles.length > 0 ? attachedFiles : undefined);\r\n    setMessage('');\r\n    setAttachedFiles([]);\r\n    \r\n    // Reset textarea height\r\n    if (textareaRef.current) {\r\n      textareaRef.current.style.height = 'auto';\r\n    }\r\n  }, [message, attachedFiles, isGenerating, onSendMessage]);\r\n\r\n  const handleKeyDown = useCallback((e: KeyboardEvent<HTMLTextAreaElement>) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSend();\r\n    }\r\n  }, [handleSend]);\r\n\r\n  const handleFileUpload = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = Array.from(e.target.files || []);\r\n    setAttachedFiles(prev => [...prev, ...files]);\r\n  }, []);\r\n\r\n  const removeFile = useCallback((index: number) => {\r\n    setAttachedFiles(prev => prev.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  const adjustTextareaHeight = useCallback(() => {\r\n    const textarea = textareaRef.current;\r\n    if (!textarea) return;\r\n\r\n    textarea.style.height = 'auto';\r\n    const scrollHeight = textarea.scrollHeight;\r\n    const maxHeight = 120; // Approximately 6 lines\r\n    textarea.style.height = `${Math.min(scrollHeight, maxHeight)}px`;\r\n  }, []);\r\n\r\n  return (\r\n    <div className={cn('border-t bg-background p-4', className)}>\r\n      {/* File attachments */}\r\n      {attachedFiles.length > 0 && (\r\n        <div className=\"mb-3 flex flex-wrap gap-2\">\r\n          {attachedFiles.map((file, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"flex items-center gap-2 bg-muted px-3 py-1 rounded-lg text-sm\"\r\n            >\r\n              <Paperclip className=\"w-3 h-3\" />\r\n              <span className=\"truncate max-w-[150px]\">{file.name}</span>\r\n              <button\r\n                onClick={() => removeFile(index)}\r\n                className=\"text-muted-foreground hover:text-foreground\"\r\n              >\r\n                ×\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex items-end gap-2\">\r\n        {/* File input */}\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileUpload}\r\n          className=\"hidden\"\r\n          accept=\".txt,.md,.js,.ts,.jsx,.tsx,.py,.java,.cpp,.c,.html,.css,.json,.xml,.yaml,.yml\"\r\n        />\r\n\r\n        {/* Attach files button */}\r\n        <Button\r\n          type=\"button\"\r\n          variant=\"ghost\"\r\n          size=\"sm\"\r\n          onClick={() => fileInputRef.current?.click()}\r\n          disabled={disabled || isGenerating}\r\n          className=\"self-end\"\r\n        >\r\n          <Paperclip className=\"w-4 h-4\" />\r\n        </Button>\r\n\r\n        {/* Message input */}\r\n        <div className=\"flex-1 relative\">\r\n          <Textarea\r\n            ref={textareaRef}\r\n            value={message}\r\n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n              setMessage(e.target.value);\r\n              adjustTextareaHeight();\r\n            }}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n            className=\"min-h-[44px] resize-none pr-12\"\r\n            rows={1}\r\n          />\r\n          \r\n          {/* Character count */}\r\n          {message.length > 500 && (\r\n            <span className=\"absolute bottom-2 right-14 text-xs text-muted-foreground\">\r\n              {message.length}/2000\r\n            </span>\r\n          )}\r\n        </div>\r\n\r\n        {/* Send/Stop button */}\r\n        {isGenerating ? (\r\n          <Button\r\n            type=\"button\"\r\n            onClick={onStopGeneration}\r\n            variant=\"destructive\"\r\n            size=\"sm\"\r\n            className=\"self-end\"\r\n          >\r\n            <Square className=\"w-4 h-4 mr-1\" />\r\n            Stop\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"button\"\r\n            onClick={handleSend}\r\n            disabled={!message.trim() || disabled}\r\n            size=\"sm\"\r\n            className=\"self-end\"\r\n          >\r\n            {disabled ? (\r\n              <Loader2 className=\"w-4 h-4 animate-spin\" />\r\n            ) : (\r\n              <Send className=\"w-4 h-4\" />\r\n            )}\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Voice input hint */}\r\n      <div className=\"mt-2 text-xs text-muted-foreground text-center\">\r\n        Press Enter to send, Shift+Enter for new line\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { \r\n  Folder,\r\n  FolderOpen,\r\n  Plus,\r\n  Trash2,\r\n  Edit,\r\n  Download,\r\n  Search,\r\n  GitBranch,\r\n  History,\r\n  Save,\r\n  X,\r\n  Check,\r\n  FileText,\r\n  Image,\r\n  Code,\r\n  Archive\r\n} from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface FileNode {\r\n  id: string;\r\n  name: string;\r\n  type: 'file' | 'folder';\r\n  path: string;\r\n  parentId: string | null;\r\n  content?: string;\r\n  size?: number;\r\n  createdAt: Date;\r\n  modifiedAt: Date;\r\n  version: number;\r\n  isReadonly?: boolean;\r\n  language?: string;\r\n  children?: FileNode[];\r\n}\r\n\r\nexport interface FileVersion {\r\n  id: string;\r\n  fileId: string;\r\n  version: number;\r\n  content: string;\r\n  message: string;\r\n  timestamp: Date;\r\n  author: string;\r\n}\r\n\r\ninterface EnhancedFileManagerProps {\r\n  className?: string;\r\n  files: FileNode[];\r\n  onFileSelect?: (file: FileNode) => void;\r\n  onFileCreate?: (parentId: string | null, name: string, type: 'file' | 'folder') => void;\r\n  onFileDelete?: (fileId: string) => void;\r\n  onFileRename?: (fileId: string, newName: string) => void;\r\n  onFileSave?: (fileId: string, content: string) => void;\r\n  onFileDownload?: (file: FileNode) => void;\r\n  selectedFileId?: string;\r\n  readOnly?: boolean;\r\n}\r\n\r\nconst EnhancedFileManager: React.FC<EnhancedFileManagerProps> = ({\r\n  className,\r\n  files,\r\n  onFileSelect,\r\n  onFileCreate,\r\n  onFileDelete,\r\n  onFileRename,\r\n  onFileSave,\r\n  onFileDownload,\r\n  selectedFileId,\r\n  readOnly = false\r\n}) => {\r\n  const [expandedFolders, setExpandedFolders] = useState<Set<string>>(new Set());\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [editingFile, setEditingFile] = useState<string | null>(null);\r\n  const [fileContent, setFileContent] = useState('');\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [createParentId, setCreateParentId] = useState<string | null>(null);\r\n  const [createType, setCreateType] = useState<'file' | 'folder'>('file');\r\n  const [createName, setCreateName] = useState('');\r\n  const [renamingFile, setRenamingFile] = useState<string | null>(null);\r\n  const [renameValue, setRenameValue] = useState('');\r\n  const [fileVersions, setFileVersions] = useState<FileVersion[]>([]);\r\n  const [selectedVersionFile, setSelectedVersionFile] = useState<string | null>(null);\r\n\r\n  // Build file tree structure\r\n  const buildFileTree = (files: FileNode[]): FileNode[] => {\r\n    const fileMap = new Map<string, FileNode>();\r\n    const rootFiles: FileNode[] = [];\r\n\r\n    // Create map of all files\r\n    files.forEach(file => {\r\n      fileMap.set(file.id, { ...file, children: [] });\r\n    });\r\n\r\n    // Build parent-child relationships\r\n    files.forEach(file => {\r\n      const fileNode = fileMap.get(file.id)!;\r\n      if (file.parentId === null) {\r\n        rootFiles.push(fileNode);\r\n      } else {\r\n        const parent = fileMap.get(file.parentId);\r\n        if (parent) {\r\n          parent.children = parent.children || [];\r\n          parent.children.push(fileNode);\r\n        }\r\n      }\r\n    });\r\n\r\n    return rootFiles;\r\n  };\r\n\r\n  const fileTree = buildFileTree(files);\r\n\r\n  // Filter files based on search term\r\n  const filterFiles = (files: FileNode[], searchTerm: string): FileNode[] => {\r\n    if (!searchTerm) return files;\r\n    \r\n    return files.filter(file => {\r\n      const matchesSearch = file.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n      const hasMatchingChildren = file.children ? filterFiles(file.children, searchTerm).length > 0 : false;\r\n      return matchesSearch || hasMatchingChildren;\r\n    }).map(file => ({\r\n      ...file,\r\n      children: file.children ? filterFiles(file.children, searchTerm) : []\r\n    }));\r\n  };\r\n\r\n  const filteredFiles = filterFiles(fileTree, searchTerm);\r\n\r\n  const toggleFolder = (folderId: string) => {\r\n    setExpandedFolders(prev => {\r\n      const newSet = new Set(prev);\r\n      if (newSet.has(folderId)) {\r\n        newSet.delete(folderId);\r\n      } else {\r\n        newSet.add(folderId);\r\n      }\r\n      return newSet;\r\n    });\r\n  };\r\n\r\n  const handleFileClick = (file: FileNode) => {\r\n    if (file.type === 'folder') {\r\n      toggleFolder(file.id);\r\n    } else {\r\n      onFileSelect?.(file);\r\n      if (file.content !== undefined) {\r\n        setEditingFile(file.id);\r\n        setFileContent(file.content);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCreateFile = () => {\r\n    if (!createName.trim()) return;\r\n    onFileCreate?.(createParentId, createName.trim(), createType);\r\n    setCreateName('');\r\n    setShowCreateModal(false);\r\n  };\r\n\r\n  const handleRename = (fileId: string) => {\r\n    if (!renameValue.trim()) return;\r\n    onFileRename?.(fileId, renameValue.trim());\r\n    setRenamingFile(null);\r\n    setRenameValue('');\r\n  };\r\n\r\n  const handleSaveFile = () => {\r\n    if (editingFile) {\r\n      onFileSave?.(editingFile, fileContent);\r\n      \r\n      // Add to version history (mock)\r\n      const newVersion: FileVersion = {\r\n        id: `version_${Date.now()}`,\r\n        fileId: editingFile,\r\n        version: fileVersions.filter(v => v.fileId === editingFile).length + 1,\r\n        content: fileContent,\r\n        message: 'File updated',\r\n        timestamp: new Date(),\r\n        author: 'Current User'\r\n      };\r\n      setFileVersions(prev => [...prev, newVersion]);\r\n    }\r\n  };\r\n\r\n  const getFileIcon = (file: FileNode) => {\r\n    if (file.type === 'folder') {\r\n      return expandedFolders.has(file.id) ? \r\n        <FolderOpen className=\"h-4 w-4 text-blue-500\" /> : \r\n        <Folder className=\"h-4 w-4 text-blue-500\" />;\r\n    }\r\n    \r\n    const extension = file.name.split('.').pop()?.toLowerCase();\r\n    switch (extension) {\r\n      case 'js':\r\n      case 'ts':\r\n      case 'jsx':\r\n      case 'tsx':\r\n      case 'py':\r\n      case 'java':\r\n      case 'cpp':\r\n      case 'c':\r\n        return <Code className=\"h-4 w-4 text-green-500\" />;\r\n      case 'png':\r\n      case 'jpg':\r\n      case 'jpeg':\r\n      case 'gif':\r\n      case 'svg':\r\n        return <Image className=\"h-4 w-4 text-purple-500\" />;\r\n      case 'zip':\r\n      case 'tar':\r\n      case 'gz':\r\n        return <Archive className=\"h-4 w-4 text-yellow-500\" />;\r\n      default:\r\n        return <FileText className=\"h-4 w-4 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const formatFileSize = (bytes?: number) => {\r\n    if (!bytes) return 'Unknown';\r\n    const sizes = ['B', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\r\n    return `${(bytes / Math.pow(1024, i)).toFixed(1)} ${sizes[i]}`;\r\n  };\r\n\r\n  const renderFileNode = (file: FileNode, depth: number = 0) => {\r\n    const isSelected = file.id === selectedFileId;\r\n    const isExpanded = expandedFolders.has(file.id);\r\n    const isRenaming = renamingFile === file.id;\r\n\r\n    return (\r\n      <div key={file.id} className=\"select-none\">\r\n        <div\r\n          className={cn(\r\n            \"flex items-center gap-2 px-2 py-1 rounded cursor-pointer hover:bg-muted/50\",\r\n            isSelected && \"bg-muted\",\r\n            depth > 0 && \"ml-4\"\r\n          )}\r\n          style={{ paddingLeft: `${8 + depth * 16}px` }}\r\n        >\r\n          <div className=\"flex items-center gap-2 flex-1 min-w-0\">\r\n            {getFileIcon(file)}\r\n            {isRenaming ? (\r\n              <div className=\"flex items-center gap-1 flex-1\">\r\n                <Input\r\n                  value={renameValue}\r\n                  onChange={(e) => setRenameValue(e.target.value)}\r\n                  className=\"h-6 text-sm\"\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') handleRename(file.id);\r\n                    if (e.key === 'Escape') setRenamingFile(null);\r\n                  }}\r\n                  autoFocus\r\n                />\r\n                <Button size=\"sm\" variant=\"ghost\" onClick={() => handleRename(file.id)}>\r\n                  <Check className=\"h-3 w-3\" />\r\n                </Button>\r\n                <Button size=\"sm\" variant=\"ghost\" onClick={() => setRenamingFile(null)}>\r\n                  <X className=\"h-3 w-3\" />\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <span \r\n                className=\"text-sm truncate flex-1\" \r\n                onClick={() => handleFileClick(file)}\r\n              >\r\n                {file.name}\r\n              </span>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-1\">\r\n            {file.type === 'file' && (\r\n              <span className=\"text-xs text-muted-foreground\">\r\n                {formatFileSize(file.size)}\r\n              </span>\r\n            )}\r\n            {!readOnly && (\r\n              <div className=\"flex items-center gap-1\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"ghost\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    setRenamingFile(file.id);\r\n                    setRenameValue(file.name);\r\n                  }}\r\n                >\r\n                  <Edit className=\"h-3 w-3\" />\r\n                </Button>\r\n                <Button\r\n                  size=\"sm\"\r\n                  variant=\"ghost\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    onFileDelete?.(file.id);\r\n                  }}\r\n                >\r\n                  <Trash2 className=\"h-3 w-3\" />\r\n                </Button>\r\n                {file.type === 'file' && (\r\n                  <>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"ghost\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        onFileDownload?.(file);\r\n                      }}\r\n                    >\r\n                      <Download className=\"h-3 w-3\" />\r\n                    </Button>\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"ghost\"\r\n                      onClick={(e) => {\r\n                        e.stopPropagation();\r\n                        setSelectedVersionFile(file.id);\r\n                      }}\r\n                    >\r\n                      <History className=\"h-3 w-3\" />\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        \r\n        {file.type === 'folder' && isExpanded && file.children && (\r\n          <div>\r\n            {file.children.map(child => renderFileNode(child, depth + 1))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Card className={cn(\"h-full flex flex-col\", className)}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Folder className=\"h-5 w-5\" />\r\n            File Manager\r\n            <Badge variant=\"outline\">\r\n              {files.filter(f => f.type === 'file').length} files\r\n            </Badge>\r\n          </CardTitle>\r\n          {!readOnly && (\r\n            <div className=\"flex items-center gap-2\">\r\n              <Button \r\n                size=\"sm\" \r\n                onClick={() => {\r\n                  setCreateParentId(null);\r\n                  setCreateType('folder');\r\n                  setShowCreateModal(true);\r\n                }}\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-1\" />\r\n                Folder\r\n              </Button>\r\n              <Button \r\n                size=\"sm\" \r\n                onClick={() => {\r\n                  setCreateParentId(null);\r\n                  setCreateType('file');\r\n                  setShowCreateModal(true);\r\n                }}\r\n              >\r\n                <Plus className=\"h-4 w-4 mr-1\" />\r\n                File\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"relative\">\r\n          <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n          <Input\r\n            placeholder=\"Search files...\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n            className=\"pl-8\"\r\n          />\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"flex-1 p-0\">\r\n        <Tabs defaultValue=\"tree\" className=\"h-full flex flex-col\">\r\n          <TabsList className=\"mx-4 mb-2\">\r\n            <TabsTrigger value=\"tree\" className=\"flex items-center gap-1\">\r\n              <Folder className=\"h-4 w-4\" />\r\n              Tree View\r\n            </TabsTrigger>\r\n            {editingFile && (\r\n              <TabsTrigger value=\"editor\" className=\"flex items-center gap-1\">\r\n                <Edit className=\"h-4 w-4\" />\r\n                Editor\r\n              </TabsTrigger>\r\n            )}\r\n            <TabsTrigger value=\"versions\" className=\"flex items-center gap-1\">\r\n              <GitBranch className=\"h-4 w-4\" />\r\n              Versions\r\n            </TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"tree\" className=\"flex-1 mx-4 mb-4\">\r\n            <ScrollArea className=\"h-[600px] border rounded-md\">\r\n              <div className=\"p-2\">\r\n                {filteredFiles.length > 0 ? (\r\n                  filteredFiles.map(file => renderFileNode(file))\r\n                ) : searchTerm ? (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    No files match your search\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    <Folder className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                    <p>No files yet</p>\r\n                    {!readOnly && (\r\n                      <Button \r\n                        className=\"mt-2\" \r\n                        onClick={() => {\r\n                          setCreateParentId(null);\r\n                          setCreateType('file');\r\n                          setShowCreateModal(true);\r\n                        }}\r\n                      >\r\n                        Create your first file\r\n                      </Button>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </ScrollArea>\r\n          </TabsContent>\r\n\r\n          {editingFile && (\r\n            <TabsContent value=\"editor\" className=\"flex-1 mx-4 mb-4\">\r\n              <Card className=\"h-[600px] flex flex-col\">\r\n                <CardHeader className=\"pb-2\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Edit className=\"h-4 w-4\" />\r\n                      <span className=\"font-medium\">\r\n                        {files.find(f => f.id === editingFile)?.name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center gap-2\">\r\n                      <Button size=\"sm\" onClick={handleSaveFile}>\r\n                        <Save className=\"h-4 w-4 mr-1\" />\r\n                        Save\r\n                      </Button>\r\n                      <Button \r\n                        size=\"sm\" \r\n                        variant=\"outline\" \r\n                        onClick={() => setEditingFile(null)}\r\n                      >\r\n                        <X className=\"h-4 w-4\" />\r\n                      </Button>\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent className=\"flex-1 p-0\">\r\n                  <textarea\r\n                    value={fileContent}\r\n                    onChange={(e) => setFileContent(e.target.value)}\r\n                    className=\"w-full h-full p-4 font-mono text-sm border-0 resize-none focus:outline-none\"\r\n                    placeholder=\"Enter file content...\"\r\n                  />\r\n                </CardContent>\r\n              </Card>\r\n            </TabsContent>\r\n          )}\r\n\r\n          <TabsContent value=\"versions\" className=\"flex-1 mx-4 mb-4\">\r\n            <ScrollArea className=\"h-[600px] border rounded-md\">\r\n              <div className=\"p-4\">\r\n                <div className=\"space-y-4\">\r\n                  {fileVersions\r\n                    .filter(v => !selectedVersionFile || v.fileId === selectedVersionFile)\r\n                    .sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime())\r\n                    .map((version) => (\r\n                      <Card key={version.id} className=\"border\">\r\n                        <CardHeader className=\"pb-2\">\r\n                          <div className=\"flex items-center justify-between\">\r\n                            <div className=\"flex items-center gap-2\">\r\n                              <GitBranch className=\"h-4 w-4\" />\r\n                              <span className=\"font-medium\">\r\n                                v{version.version}\r\n                              </span>\r\n                              <span className=\"text-sm text-muted-foreground\">\r\n                                {files.find(f => f.id === version.fileId)?.name}\r\n                              </span>\r\n                            </div>\r\n                            <span className=\"text-xs text-muted-foreground\">\r\n                              {version.timestamp.toLocaleString()}\r\n                            </span>\r\n                          </div>\r\n                        </CardHeader>\r\n                        <CardContent className=\"pt-0\">\r\n                          <p className=\"text-sm mb-2\">{version.message}</p>\r\n                          <p className=\"text-xs text-muted-foreground\">\r\n                            by {version.author}\r\n                          </p>\r\n                        </CardContent>\r\n                      </Card>\r\n                    ))}\r\n                  {fileVersions.length === 0 && (\r\n                    <div className=\"text-center py-8 text-muted-foreground\">\r\n                      <GitBranch className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\r\n                      <p>No version history yet</p>\r\n                      <p className=\"text-sm\">Edit and save files to create versions</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </ScrollArea>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </CardContent>\r\n\r\n      {/* Create File/Folder Modal */}\r\n      {showCreateModal && (\r\n        <div className=\"fixed inset-0 bg-black/50 flex items-center justify-center z-50\">\r\n          <Card className=\"w-full max-w-md mx-4\">\r\n            <CardHeader>\r\n              <CardTitle>\r\n                Create {createType === 'file' ? 'File' : 'Folder'}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"space-y-2\">\r\n                <label className=\"text-sm font-medium\">Name</label>\r\n                <Input\r\n                  placeholder={createType === 'file' ? 'filename.ext' : 'folder-name'}\r\n                  value={createName}\r\n                  onChange={(e) => setCreateName(e.target.value)}\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') handleCreateFile();\r\n                    if (e.key === 'Escape') setShowCreateModal(false);\r\n                  }}\r\n                  autoFocus\r\n                />\r\n              </div>\r\n              \r\n              <div className=\"flex justify-end gap-2\">\r\n                <Button variant=\"outline\" onClick={() => setShowCreateModal(false)}>\r\n                  Cancel\r\n                </Button>\r\n                <Button onClick={handleCreateFile}>\r\n                  Create\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EnhancedFileManager;","import { useState, useCallback, useMemo, useEffect } from 'react';\r\nimport { \r\n  Layers,\r\n  Database,\r\n  Globe,\r\n  Server,\r\n  Cloud,\r\n  Monitor,\r\n  Package,\r\n  Settings,\r\n  Edit3,\r\n  Trash2\r\n} from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Card } from '@/components/ui/card';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface BlueprintNode {\r\n  id: string;\r\n  type: 'frontend' | 'backend' | 'database' | 'api' | 'service' | 'component' | 'custom';\r\n  title: string;\r\n  description?: string;\r\n  position: { x: number; y: number };\r\n  size: { width: number; height: number };\r\n  color?: string;\r\n  connections?: string[]; // IDs of connected nodes\r\n  technologies?: string[];\r\n  properties?: Record<string, any>;\r\n}\r\n\r\nexport interface BlueprintConnection {\r\n  id: string;\r\n  sourceId: string;\r\n  targetId: string;\r\n  type: 'api' | 'data' | 'dependency' | 'communication';\r\n  label?: string;\r\n}\r\n\r\ninterface BlueprintCanvasProps {\r\n  nodes: BlueprintNode[];\r\n  connections: BlueprintConnection[];\r\n  onNodeAdd: (node: Omit<BlueprintNode, 'id'>) => void;\r\n  onNodeUpdate: (id: string, updates: Partial<BlueprintNode>) => void;\r\n  onNodeDelete: (id: string) => void;\r\n  onConnectionAdd: (connection: Omit<BlueprintConnection, 'id'>) => void;\r\n  onConnectionDelete: (id: string) => void;\r\n  onNodeSelect?: (node: BlueprintNode | null) => void;\r\n  selectedNodeId?: string | null;\r\n  readOnly?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst nodeTypeConfig = {\r\n  frontend: { \r\n    icon: Monitor, \r\n    color: 'bg-blue-500', \r\n    label: 'Frontend' \r\n  },\r\n  backend: { \r\n    icon: Server, \r\n    color: 'bg-green-500', \r\n    label: 'Backend' \r\n  },\r\n  database: { \r\n    icon: Database, \r\n    color: 'bg-purple-500', \r\n    label: 'Database' \r\n  },\r\n  api: { \r\n    icon: Globe, \r\n    color: 'bg-orange-500', \r\n    label: 'API' \r\n  },\r\n  service: { \r\n    icon: Cloud, \r\n    color: 'bg-cyan-500', \r\n    label: 'Service' \r\n  },\r\n  component: { \r\n    icon: Package, \r\n    color: 'bg-yellow-500', \r\n    label: 'Component' \r\n  },\r\n  custom: { \r\n    icon: Settings, \r\n    color: 'bg-gray-500', \r\n    label: 'Custom' \r\n  }\r\n};\r\n\r\ninterface CanvasNodeProps {\r\n  node: BlueprintNode;\r\n  isSelected: boolean;\r\n  onSelect: () => void;\r\n  onUpdate: (updates: Partial<BlueprintNode>) => void;\r\n  onDelete: () => void;\r\n  readOnly?: boolean;\r\n}\r\n\r\nfunction CanvasNode({ \r\n  node, \r\n  isSelected, \r\n  onSelect, \r\n  onUpdate, \r\n  onDelete, \r\n  readOnly = false \r\n}: CanvasNodeProps) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editTitle, setEditTitle] = useState(node.title);\r\n  const [isDragging, setIsDragging] = useState(false);\r\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\r\n\r\n  const config = nodeTypeConfig[node.type];\r\n  const Icon = config.icon;\r\n\r\n  const handleMouseDown = (e: React.MouseEvent) => {\r\n    if (readOnly || isEditing) return;\r\n    setIsDragging(true);\r\n    setDragStart({\r\n      x: e.clientX - node.position.x,\r\n      y: e.clientY - node.position.y\r\n    });\r\n    onSelect();\r\n  };\r\n\r\n  const handleMouseMove = useCallback((e: MouseEvent) => {\r\n    if (!isDragging) return;\r\n    onUpdate({\r\n      position: {\r\n        x: e.clientX - dragStart.x,\r\n        y: e.clientY - dragStart.y\r\n      }\r\n    });\r\n  }, [isDragging, dragStart, onUpdate]);\r\n\r\n  const handleMouseUp = useCallback(() => {\r\n    setIsDragging(false);\r\n  }, []);\r\n\r\n  // Add event listeners for dragging\r\n  useEffect(() => {\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleMouseMove);\r\n      document.addEventListener('mouseup', handleMouseUp);\r\n      return () => {\r\n        document.removeEventListener('mousemove', handleMouseMove);\r\n        document.removeEventListener('mouseup', handleMouseUp);\r\n      };\r\n    }\r\n    return undefined;\r\n  }, [isDragging, handleMouseMove, handleMouseUp]);\r\n\r\n  const handleSaveEdit = () => {\r\n    onUpdate({ title: editTitle });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleSaveEdit();\r\n    } else if (e.key === 'Escape') {\r\n      setEditTitle(node.title);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={cn(\r\n        'absolute cursor-move select-none transition-all duration-200',\r\n        isSelected && 'ring-2 ring-primary shadow-lg',\r\n        isDragging && 'opacity-80 scale-105',\r\n        'group hover:shadow-md'\r\n      )}\r\n      style={{\r\n        left: node.position.x,\r\n        top: node.position.y,\r\n        width: node.size.width,\r\n        height: node.size.height,\r\n        backgroundColor: node.color\r\n      }}\r\n      onMouseDown={handleMouseDown}\r\n    >\r\n      <div className=\"p-3 h-full flex flex-col\">\r\n        {/* Node Header */}\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <div className={cn('p-1 rounded', config.color)}>\r\n            <Icon className=\"w-4 h-4 text-white\" />\r\n          </div>\r\n          \r\n          {!readOnly && (\r\n            <div className=\"hidden group-hover:flex items-center gap-1\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setIsEditing(true);\r\n                }}\r\n                className=\"h-6 w-6 p-0\"\r\n              >\r\n                <Edit3 className=\"w-3 h-3\" />\r\n              </Button>\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  onDelete();\r\n                }}\r\n                className=\"h-6 w-6 p-0 text-destructive hover:text-destructive\"\r\n              >\r\n                <Trash2 className=\"w-3 h-3\" />\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Node Title */}\r\n        {isEditing ? (\r\n          <Input\r\n            value={editTitle}\r\n            onChange={(e) => setEditTitle(e.target.value)}\r\n            onBlur={handleSaveEdit}\r\n            onKeyDown={handleKeyPress}\r\n            className=\"text-sm font-medium mb-1\"\r\n            autoFocus\r\n            onClick={(e) => e.stopPropagation()}\r\n          />\r\n        ) : (\r\n          <h4 className=\"text-sm font-medium mb-1 truncate\">\r\n            {node.title}\r\n          </h4>\r\n        )}\r\n\r\n        {/* Node Description */}\r\n        {node.description && (\r\n          <p className=\"text-xs text-muted-foreground mb-2 line-clamp-2\">\r\n            {node.description}\r\n          </p>\r\n        )}\r\n\r\n        {/* Technologies */}\r\n        {node.technologies && node.technologies.length > 0 && (\r\n          <div className=\"flex flex-wrap gap-1 mt-auto\">\r\n            {node.technologies.slice(0, 3).map((tech, index) => (\r\n              <span\r\n                key={index}\r\n                className=\"text-xs px-1 py-0.5 bg-background/50 rounded\"\r\n              >\r\n                {tech}\r\n              </span>\r\n            ))}\r\n            {node.technologies.length > 3 && (\r\n              <span className=\"text-xs text-muted-foreground\">\r\n                +{node.technologies.length - 3}\r\n              </span>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function BlueprintCanvas({\r\n  nodes,\r\n  connections,\r\n  onNodeAdd,\r\n  onNodeUpdate,\r\n  onNodeDelete,\r\n  onNodeSelect,\r\n  selectedNodeId,\r\n  readOnly = false,\r\n  className\r\n}: BlueprintCanvasProps) {\r\n  const [canvasSize] = useState({ width: 1200, height: 800 });\r\n  const [draggedNodeType, setDraggedNodeType] = useState<BlueprintNode['type'] | null>(null);\r\n\r\n  const handleCanvasClick = (e: React.MouseEvent) => {\r\n    if (e.target === e.currentTarget) {\r\n      onNodeSelect?.(null);\r\n    }\r\n  };\r\n\r\n  const handleCanvasDrop = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n    if (!draggedNodeType || readOnly) return;\r\n\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.clientX - rect.left - 75; // Center the node\r\n    const y = e.clientY - rect.top - 50;\r\n\r\n    const newNode: Omit<BlueprintNode, 'id'> = {\r\n      type: draggedNodeType,\r\n      title: `New ${nodeTypeConfig[draggedNodeType].label}`,\r\n      position: { x, y },\r\n      size: { width: 150, height: 100 },\r\n      technologies: []\r\n    };\r\n\r\n    onNodeAdd(newNode);\r\n    setDraggedNodeType(null);\r\n  };\r\n\r\n  const handleCanvasDragOver = (e: React.DragEvent) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  // Render connections between nodes\r\n  const connectionElements = useMemo(() => {\r\n    return connections.map(connection => {\r\n      const sourceNode = nodes.find(n => n.id === connection.sourceId);\r\n      const targetNode = nodes.find(n => n.id === connection.targetId);\r\n      \r\n      if (!sourceNode || !targetNode) return null;\r\n\r\n      const sourceCenter = {\r\n        x: sourceNode.position.x + sourceNode.size.width / 2,\r\n        y: sourceNode.position.y + sourceNode.size.height / 2\r\n      };\r\n      \r\n      const targetCenter = {\r\n        x: targetNode.position.x + targetNode.size.width / 2,\r\n        y: targetNode.position.y + targetNode.size.height / 2\r\n      };\r\n\r\n      return (\r\n        <svg\r\n          key={connection.id}\r\n          className=\"absolute inset-0 pointer-events-none\"\r\n          style={{ width: canvasSize.width, height: canvasSize.height }}\r\n        >\r\n          <defs>\r\n            <marker\r\n              id={`arrowhead-${connection.id}`}\r\n              markerWidth=\"10\"\r\n              markerHeight=\"7\"\r\n              refX=\"9\"\r\n              refY=\"3.5\"\r\n              orient=\"auto\"\r\n            >\r\n              <polygon\r\n                points=\"0 0, 10 3.5, 0 7\"\r\n                fill=\"#6b7280\"\r\n              />\r\n            </marker>\r\n          </defs>\r\n          <line\r\n            x1={sourceCenter.x}\r\n            y1={sourceCenter.y}\r\n            x2={targetCenter.x}\r\n            y2={targetCenter.y}\r\n            stroke=\"#6b7280\"\r\n            strokeWidth=\"2\"\r\n            markerEnd={`url(#arrowhead-${connection.id})`}\r\n          />\r\n          {connection.label && (\r\n            <text\r\n              x={(sourceCenter.x + targetCenter.x) / 2}\r\n              y={(sourceCenter.y + targetCenter.y) / 2}\r\n              textAnchor=\"middle\"\r\n              className=\"text-xs fill-muted-foreground\"\r\n            >\r\n              {connection.label}\r\n            </text>\r\n          )}\r\n        </svg>\r\n      );\r\n    });\r\n  }, [connections, nodes, canvasSize]);\r\n\r\n  return (\r\n    <div className={cn('flex h-full bg-background', className)}>\r\n      {/* Node Palette */}\r\n      {!readOnly && (\r\n        <div className=\"w-48 border-r bg-muted/30 p-3 overflow-y-auto\">\r\n          <h3 className=\"font-medium text-sm mb-3\">Components</h3>\r\n          <div className=\"space-y-2\">\r\n            {Object.entries(nodeTypeConfig).map(([type, config]) => {\r\n              const Icon = config.icon;\r\n              return (\r\n                <div\r\n                  key={type}\r\n                  draggable\r\n                  onDragStart={() => setDraggedNodeType(type as BlueprintNode['type'])}\r\n                  className=\"flex items-center gap-2 p-2 rounded cursor-move hover:bg-accent transition-colors\"\r\n                >\r\n                  <div className={cn('p-1 rounded', config.color)}>\r\n                    <Icon className=\"w-4 h-4 text-white\" />\r\n                  </div>\r\n                  <span className=\"text-sm\">{config.label}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Canvas */}\r\n      <div className=\"flex-1 relative overflow-hidden\">\r\n        <div\r\n          className=\"w-full h-full relative bg-grid-pattern\"\r\n          style={{\r\n            width: canvasSize.width,\r\n            height: canvasSize.height,\r\n            backgroundImage: `\r\n              radial-gradient(circle at 1px 1px, rgba(0,0,0,0.1) 1px, transparent 0),\r\n              radial-gradient(circle at 1px 1px, rgba(0,0,0,0.05) 1px, transparent 0)\r\n            `,\r\n            backgroundSize: '20px 20px, 60px 60px'\r\n          }}\r\n          onClick={handleCanvasClick}\r\n          onDrop={handleCanvasDrop}\r\n          onDragOver={handleCanvasDragOver}\r\n        >\r\n          {/* Render connections */}\r\n          {connectionElements}\r\n\r\n          {/* Render nodes */}\r\n          {nodes.map(node => (\r\n            <CanvasNode\r\n              key={node.id}\r\n              node={node}\r\n              isSelected={node.id === selectedNodeId}\r\n              onSelect={() => onNodeSelect?.(node)}\r\n              onUpdate={(updates) => onNodeUpdate(node.id, updates)}\r\n              onDelete={() => onNodeDelete(node.id)}\r\n              readOnly={readOnly}\r\n            />\r\n          ))}\r\n\r\n          {/* Empty state */}\r\n          {nodes.length === 0 && (\r\n            <div className=\"absolute inset-0 flex items-center justify-center\">\r\n              <div className=\"text-center text-muted-foreground\">\r\n                <Layers className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                <h3 className=\"text-lg font-medium mb-2\">Empty Blueprint</h3>\r\n                <p className=\"text-sm\">\r\n                  {readOnly \r\n                    ? 'No components in this blueprint yet'\r\n                    : 'Drag components from the palette to start designing'\r\n                  }\r\n                </p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState } from 'react';\r\nimport { \r\n  Settings,\r\n  Code,\r\n  Database,\r\n  Server,\r\n  Globe,\r\n  Layers,\r\n  Plus,\r\n  X\r\n} from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { cn } from '@/lib/utils';\r\nimport type { BlueprintNode, BlueprintConnection } from './BlueprintCanvas';\r\n\r\ninterface BlueprintPropertiesProps {\r\n  selectedNode: BlueprintNode | null;\r\n  nodes: BlueprintNode[];\r\n  connections: BlueprintConnection[];\r\n  onNodeUpdate: (id: string, updates: Partial<BlueprintNode>) => void;\r\n  onConnectionAdd: (connection: Omit<BlueprintConnection, 'id'>) => void;\r\n  onConnectionDelete: (id: string) => void;\r\n  className?: string;\r\n}\r\n\r\nconst nodeTypeOptions = [\r\n  { value: 'frontend', label: 'Frontend', icon: Globe },\r\n  { value: 'backend', label: 'Backend', icon: Server },\r\n  { value: 'database', label: 'Database', icon: Database },\r\n  { value: 'api', label: 'API', icon: Globe },\r\n  { value: 'service', label: 'Service', icon: Settings },\r\n  { value: 'component', label: 'Component', icon: Layers },\r\n  { value: 'custom', label: 'Custom', icon: Code }\r\n];\r\n\r\nconst connectionTypeOptions = [\r\n  { value: 'api', label: 'API Call', color: 'bg-blue-500' },\r\n  { value: 'data', label: 'Data Flow', color: 'bg-green-500' },\r\n  { value: 'dependency', label: 'Dependency', color: 'bg-orange-500' },\r\n  { value: 'communication', label: 'Communication', color: 'bg-purple-500' }\r\n];\r\n\r\nconst commonTechnologies = {\r\n  frontend: ['React', 'Vue', 'Angular', 'Svelte', 'Next.js', 'Nuxt.js', 'Vite', 'TypeScript'],\r\n  backend: ['Node.js', 'Python', 'Java', 'Go', 'Rust', 'PHP', 'Ruby', 'Express', 'FastAPI'],\r\n  database: ['PostgreSQL', 'MongoDB', 'Redis', 'MySQL', 'SQLite', 'Firestore', 'DynamoDB'],\r\n  api: ['REST', 'GraphQL', 'gRPC', 'WebSocket', 'OpenAPI', 'Swagger'],\r\n  service: ['Docker', 'Kubernetes', 'AWS', 'GCP', 'Azure', 'Vercel', 'Netlify'],\r\n  component: ['UI Library', 'Chart.js', 'D3.js', 'Three.js', 'Material-UI', 'Tailwind'],\r\n  custom: []\r\n};\r\n\r\nexport function BlueprintProperties({\r\n  selectedNode,\r\n  nodes,\r\n  connections,\r\n  onNodeUpdate,\r\n  onConnectionAdd,\r\n  onConnectionDelete,\r\n  className\r\n}: BlueprintPropertiesProps) {\r\n  const [newTech, setNewTech] = useState('');\r\n  const [newConnection, setNewConnection] = useState({\r\n    targetId: '',\r\n    type: 'api' as BlueprintConnection['type'],\r\n    label: ''\r\n  });\r\n\r\n  if (!selectedNode) {\r\n    return (\r\n      <div className={cn('w-80 border-l bg-muted/30 p-4 flex items-center justify-center', className)}>\r\n        <div className=\"text-center text-muted-foreground\">\r\n          <Settings className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n          <p className=\"text-sm\">Select a component to edit properties</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleUpdate = (updates: Partial<BlueprintNode>) => {\r\n    onNodeUpdate(selectedNode.id, updates);\r\n  };\r\n\r\n  const handleAddTechnology = () => {\r\n    if (!newTech.trim()) return;\r\n    \r\n    const currentTechs = selectedNode.technologies || [];\r\n    if (!currentTechs.includes(newTech.trim())) {\r\n      handleUpdate({\r\n        technologies: [...currentTechs, newTech.trim()]\r\n      });\r\n    }\r\n    setNewTech('');\r\n  };\r\n\r\n  const handleRemoveTechnology = (tech: string) => {\r\n    const currentTechs = selectedNode.technologies || [];\r\n    handleUpdate({\r\n      technologies: currentTechs.filter(t => t !== tech)\r\n    });\r\n  };\r\n\r\n  const handleAddConnection = () => {\r\n    if (!newConnection.targetId) return;\r\n    \r\n    const connectionData: Omit<BlueprintConnection, 'id'> = {\r\n      sourceId: selectedNode.id,\r\n      targetId: newConnection.targetId,\r\n      type: newConnection.type\r\n    };\r\n    \r\n    if (newConnection.label.trim()) {\r\n      connectionData.label = newConnection.label.trim();\r\n    }\r\n    \r\n    onConnectionAdd(connectionData);\r\n    \r\n    setNewConnection({\r\n      targetId: '',\r\n      type: 'api',\r\n      label: ''\r\n    });\r\n  };\r\n\r\n  const nodeConnections = connections.filter(\r\n    conn => conn.sourceId === selectedNode.id || conn.targetId === selectedNode.id\r\n  );\r\n\r\n  const availableTargets = nodes.filter(node => \r\n    node.id !== selectedNode.id && \r\n    !connections.some(conn => \r\n      conn.sourceId === selectedNode.id && conn.targetId === node.id\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className={cn('w-80 border-l bg-muted/30 flex flex-col', className)}>\r\n      <div className=\"p-4 border-b\">\r\n        <h3 className=\"font-medium text-sm\">Component Properties</h3>\r\n      </div>\r\n\r\n      <div className=\"flex-1 overflow-y-auto\">\r\n        <Tabs defaultValue=\"general\" className=\"w-full\">\r\n          <TabsList className=\"w-full mx-4 mt-4\">\r\n            <TabsTrigger value=\"general\" className=\"flex-1\">General</TabsTrigger>\r\n            <TabsTrigger value=\"connections\" className=\"flex-1\">Connections</TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"general\" className=\"p-4 space-y-4\">\r\n            {/* Basic Properties */}\r\n            <div className=\"space-y-3\">\r\n              <div>\r\n                <Label htmlFor=\"node-title\">Title</Label>\r\n                <Input\r\n                  id=\"node-title\"\r\n                  value={selectedNode.title}\r\n                  onChange={(e) => handleUpdate({ title: e.target.value })}\r\n                  placeholder=\"Component title\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"node-type\">Type</Label>\r\n                <Select\r\n                  value={selectedNode.type}\r\n                  onValueChange={(value) => handleUpdate({ type: value as BlueprintNode['type'] })}\r\n                >\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    {nodeTypeOptions.map(option => {\r\n                      const Icon = option.icon;\r\n                      return (\r\n                        <SelectItem key={option.value} value={option.value}>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <Icon className=\"w-4 h-4\" />\r\n                            {option.label}\r\n                          </div>\r\n                        </SelectItem>\r\n                      );\r\n                    })}\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div>\r\n                <Label htmlFor=\"node-description\">Description</Label>\r\n                <Textarea\r\n                  id=\"node-description\"\r\n                  value={selectedNode.description || ''}\r\n                  onChange={(e) => handleUpdate({ description: e.target.value })}\r\n                  placeholder=\"Component description\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Technologies */}\r\n            <div>\r\n              <Label>Technologies</Label>\r\n              <div className=\"space-y-2\">\r\n                {/* Current Technologies */}\r\n                <div className=\"flex flex-wrap gap-1\">\r\n                  {selectedNode.technologies?.map((tech, index) => (\r\n                    <Badge \r\n                      key={index} \r\n                      variant=\"secondary\" \r\n                      className=\"text-xs\"\r\n                    >\r\n                      {tech}\r\n                      <Button\r\n                        variant=\"ghost\"\r\n                        size=\"sm\"\r\n                        onClick={() => handleRemoveTechnology(tech)}\r\n                        className=\"h-auto w-auto p-0 ml-1 hover:bg-transparent\"\r\n                      >\r\n                        <X className=\"w-3 h-3\" />\r\n                      </Button>\r\n                    </Badge>\r\n                  ))}\r\n                </div>\r\n\r\n                {/* Add Technology */}\r\n                <div className=\"flex gap-2\">\r\n                  <Input\r\n                    value={newTech}\r\n                    onChange={(e) => setNewTech(e.target.value)}\r\n                    placeholder=\"Add technology\"\r\n                    onKeyDown={(e) => e.key === 'Enter' && handleAddTechnology()}\r\n                  />\r\n                  <Button\r\n                    size=\"sm\"\r\n                    onClick={handleAddTechnology}\r\n                    disabled={!newTech.trim()}\r\n                  >\r\n                    <Plus className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </div>\r\n\r\n                {/* Suggested Technologies */}\r\n                {commonTechnologies[selectedNode.type]?.length > 0 && (\r\n                  <div className=\"space-y-1\">\r\n                    <Label className=\"text-xs text-muted-foreground\">Suggestions</Label>\r\n                    <div className=\"flex flex-wrap gap-1\">\r\n                      {commonTechnologies[selectedNode.type]\r\n                        .filter(tech => !selectedNode.technologies?.includes(tech))\r\n                        .slice(0, 6)\r\n                        .map(tech => (\r\n                          <Button\r\n                            key={tech}\r\n                            variant=\"outline\"\r\n                            size=\"sm\"\r\n                            onClick={() => {\r\n                              const currentTechs = selectedNode.technologies || [];\r\n                              handleUpdate({\r\n                                technologies: [...currentTechs, tech]\r\n                              });\r\n                            }}\r\n                            className=\"h-6 text-xs\"\r\n                          >\r\n                            {tech}\r\n                          </Button>\r\n                        ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Position and Size */}\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <div>\r\n                <Label className=\"text-xs\">X Position</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={selectedNode.position.x}\r\n                  onChange={(e) => handleUpdate({\r\n                    position: { ...selectedNode.position, x: parseInt(e.target.value) || 0 }\r\n                  })}\r\n                  className=\"text-xs\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label className=\"text-xs\">Y Position</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={selectedNode.position.y}\r\n                  onChange={(e) => handleUpdate({\r\n                    position: { ...selectedNode.position, y: parseInt(e.target.value) || 0 }\r\n                  })}\r\n                  className=\"text-xs\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label className=\"text-xs\">Width</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={selectedNode.size.width}\r\n                  onChange={(e) => handleUpdate({\r\n                    size: { ...selectedNode.size, width: parseInt(e.target.value) || 150 }\r\n                  })}\r\n                  className=\"text-xs\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Label className=\"text-xs\">Height</Label>\r\n                <Input\r\n                  type=\"number\"\r\n                  value={selectedNode.size.height}\r\n                  onChange={(e) => handleUpdate({\r\n                    size: { ...selectedNode.size, height: parseInt(e.target.value) || 100 }\r\n                  })}\r\n                  className=\"text-xs\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"connections\" className=\"p-4 space-y-4\">\r\n            {/* Existing Connections */}\r\n            <div>\r\n              <Label>Current Connections</Label>\r\n              {nodeConnections.length > 0 ? (\r\n                <div className=\"space-y-2 mt-2\">\r\n                  {nodeConnections.map(connection => {\r\n                    const isOutgoing = connection.sourceId === selectedNode.id;\r\n                    const otherNode = nodes.find(n => \r\n                      n.id === (isOutgoing ? connection.targetId : connection.sourceId)\r\n                    );\r\n                    const connectionType = connectionTypeOptions.find(t => t.value === connection.type);\r\n                    \r\n                    return (\r\n                      <Card key={connection.id} className=\"p-2\">\r\n                        <div className=\"flex items-center justify-between\">\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <div className={cn('w-2 h-2 rounded-full', connectionType?.color)} />\r\n                            <span className=\"text-sm\">\r\n                              {isOutgoing ? '→' : '←'} {otherNode?.title || 'Unknown'}\r\n                            </span>\r\n                          </div>\r\n                          <Button\r\n                            variant=\"ghost\"\r\n                            size=\"sm\"\r\n                            onClick={() => onConnectionDelete(connection.id)}\r\n                            className=\"h-6 w-6 p-0 text-destructive\"\r\n                          >\r\n                            <X className=\"w-3 h-3\" />\r\n                          </Button>\r\n                        </div>\r\n                        {connection.label && (\r\n                          <p className=\"text-xs text-muted-foreground mt-1\">\r\n                            {connection.label}\r\n                          </p>\r\n                        )}\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                </div>\r\n              ) : (\r\n                <p className=\"text-sm text-muted-foreground mt-2\">\r\n                  No connections yet\r\n                </p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Add New Connection */}\r\n            {availableTargets.length > 0 && (\r\n              <div>\r\n                <Label>Add Connection</Label>\r\n                <div className=\"space-y-2 mt-2\">\r\n                  <Select\r\n                    value={newConnection.targetId}\r\n                    onValueChange={(value) => setNewConnection(prev => ({ ...prev, targetId: value }))}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue placeholder=\"Select target component\" />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {availableTargets.map(node => (\r\n                        <SelectItem key={node.id} value={node.id}>\r\n                          {node.title}\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n\r\n                  <Select\r\n                    value={newConnection.type}\r\n                    onValueChange={(value) => setNewConnection(prev => ({ \r\n                      ...prev, \r\n                      type: value as BlueprintConnection['type'] \r\n                    }))}\r\n                  >\r\n                    <SelectTrigger>\r\n                      <SelectValue />\r\n                    </SelectTrigger>\r\n                    <SelectContent>\r\n                      {connectionTypeOptions.map(option => (\r\n                        <SelectItem key={option.value} value={option.value}>\r\n                          <div className=\"flex items-center gap-2\">\r\n                            <div className={cn('w-2 h-2 rounded-full', option.color)} />\r\n                            {option.label}\r\n                          </div>\r\n                        </SelectItem>\r\n                      ))}\r\n                    </SelectContent>\r\n                  </Select>\r\n\r\n                  <Input\r\n                    value={newConnection.label}\r\n                    onChange={(e) => setNewConnection(prev => ({ ...prev, label: e.target.value }))}\r\n                    placeholder=\"Connection label (optional)\"\r\n                  />\r\n\r\n                  <Button\r\n                    onClick={handleAddConnection}\r\n                    disabled={!newConnection.targetId}\r\n                    className=\"w-full\"\r\n                  >\r\n                    Add Connection\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TabsContent>\r\n        </Tabs>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { useState, useCallback, useMemo } from 'react';\r\nimport { \r\n  Save,\r\n  Download,\r\n  Eye,\r\n  EyeOff\r\n} from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Input } from '@/components/ui/input';\r\nimport { cn } from '@/lib/utils';\r\nimport { BlueprintCanvas, type BlueprintNode, type BlueprintConnection } from './BlueprintCanvas';\r\nimport { BlueprintProperties } from './BlueprintProperties';\r\n\r\nexport interface Blueprint {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  nodes: BlueprintNode[];\r\n  connections: BlueprintConnection[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  version: number;\r\n}\r\n\r\ninterface BlueprintEditorProps {\r\n  blueprint?: Blueprint;\r\n  onSave?: (blueprint: Blueprint) => void;\r\n  onExport?: (blueprint: Blueprint) => void;\r\n  readOnly?: boolean;\r\n  className?: string;\r\n}\r\n\r\n// Helper function to generate unique IDs\r\nconst generateId = () => Math.random().toString(36).substring(2, 9);\r\n\r\nexport function BlueprintEditor({\r\n  blueprint,\r\n  onSave,\r\n  onExport,\r\n  readOnly = false,\r\n  className\r\n}: BlueprintEditorProps) {\r\n  const [currentBlueprint, setCurrentBlueprint] = useState<Blueprint>(() => \r\n    blueprint || {\r\n      id: generateId(),\r\n      title: 'New Blueprint',\r\n      description: '',\r\n      nodes: [],\r\n      connections: [],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      version: 1\r\n    }\r\n  );\r\n\r\n  const [selectedNodeId, setSelectedNodeId] = useState<string | null>(null);\r\n  const [showProperties, setShowProperties] = useState(true);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editTitle, setEditTitle] = useState(currentBlueprint.title);\r\n\r\n  // Update blueprint with new changes\r\n  const updateBlueprint = useCallback((updates: Partial<Blueprint>) => {\r\n    setCurrentBlueprint(prev => ({\r\n      ...prev,\r\n      ...updates,\r\n      updatedAt: new Date(),\r\n      version: prev.version + 1\r\n    }));\r\n  }, []);\r\n\r\n  // Node management functions\r\n  const handleNodeAdd = useCallback((nodeData: Omit<BlueprintNode, 'id'>) => {\r\n    const newNode: BlueprintNode = {\r\n      ...nodeData,\r\n      id: generateId()\r\n    };\r\n    \r\n    updateBlueprint({\r\n      nodes: [...currentBlueprint.nodes, newNode]\r\n    });\r\n  }, [currentBlueprint.nodes, updateBlueprint]);\r\n\r\n  const handleNodeUpdate = useCallback((nodeId: string, updates: Partial<BlueprintNode>) => {\r\n    updateBlueprint({\r\n      nodes: currentBlueprint.nodes.map(node => \r\n        node.id === nodeId ? { ...node, ...updates } : node\r\n      )\r\n    });\r\n  }, [currentBlueprint.nodes, updateBlueprint]);\r\n\r\n  const handleNodeDelete = useCallback((nodeId: string) => {\r\n    // Remove the node and all its connections\r\n    updateBlueprint({\r\n      nodes: currentBlueprint.nodes.filter(node => node.id !== nodeId),\r\n      connections: currentBlueprint.connections.filter(\r\n        conn => conn.sourceId !== nodeId && conn.targetId !== nodeId\r\n      )\r\n    });\r\n    \r\n    if (selectedNodeId === nodeId) {\r\n      setSelectedNodeId(null);\r\n    }\r\n  }, [currentBlueprint.nodes, currentBlueprint.connections, selectedNodeId, updateBlueprint]);\r\n\r\n  // Connection management functions\r\n  const handleConnectionAdd = useCallback((connectionData: Omit<BlueprintConnection, 'id'>) => {\r\n    const newConnection: BlueprintConnection = {\r\n      ...connectionData,\r\n      id: generateId()\r\n    };\r\n    \r\n    updateBlueprint({\r\n      connections: [...currentBlueprint.connections, newConnection]\r\n    });\r\n  }, [currentBlueprint.connections, updateBlueprint]);\r\n\r\n  const handleConnectionDelete = useCallback((connectionId: string) => {\r\n    updateBlueprint({\r\n      connections: currentBlueprint.connections.filter(conn => conn.id !== connectionId)\r\n    });\r\n  }, [currentBlueprint.connections, updateBlueprint]);\r\n\r\n  const handleNodeSelect = useCallback((node: BlueprintNode | null) => {\r\n    setSelectedNodeId(node?.id || null);\r\n  }, []);\r\n\r\n  const selectedNode = useMemo(() => \r\n    currentBlueprint.nodes.find(node => node.id === selectedNodeId) || null\r\n  , [currentBlueprint.nodes, selectedNodeId]);\r\n\r\n  const handleSave = () => {\r\n    onSave?.(currentBlueprint);\r\n  };\r\n\r\n  const handleExport = () => {\r\n    onExport?.(currentBlueprint);\r\n  };\r\n\r\n  const handleTitleSave = () => {\r\n    updateBlueprint({ title: editTitle });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter') {\r\n      handleTitleSave();\r\n    } else if (e.key === 'Escape') {\r\n      setEditTitle(currentBlueprint.title);\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const stats = useMemo(() => {\r\n    const nodesByType = currentBlueprint.nodes.reduce((acc, node) => {\r\n      acc[node.type] = (acc[node.type] || 0) + 1;\r\n      return acc;\r\n    }, {} as Record<string, number>);\r\n\r\n    return {\r\n      totalNodes: currentBlueprint.nodes.length,\r\n      totalConnections: currentBlueprint.connections.length,\r\n      nodesByType\r\n    };\r\n  }, [currentBlueprint.nodes, currentBlueprint.connections]);\r\n\r\n  return (\r\n    <div className={cn('flex flex-col h-full bg-background', className)}>\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between p-4 border-b bg-muted/30\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"flex items-center gap-2\">\r\n            {isEditing ? (\r\n              <Input\r\n                value={editTitle}\r\n                onChange={(e) => setEditTitle(e.target.value)}\r\n                onBlur={handleTitleSave}\r\n                onKeyDown={handleKeyPress}\r\n                className=\"text-lg font-semibold\"\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <h1 \r\n                className=\"text-lg font-semibold cursor-pointer hover:text-primary\"\r\n                onClick={() => !readOnly && setIsEditing(true)}\r\n              >\r\n                {currentBlueprint.title}\r\n              </h1>\r\n            )}\r\n          </div>\r\n          \r\n          <div className=\"text-sm text-muted-foreground\">\r\n            {stats.totalNodes} components, {stats.totalConnections} connections\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center gap-2\">\r\n          {!readOnly && (\r\n            <>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={handleSave}\r\n                disabled={!onSave}\r\n                title=\"Save Blueprint\"\r\n              >\r\n                <Save className=\"w-4 h-4\" />\r\n              </Button>\r\n\r\n              <div className=\"w-px h-6 bg-border\" />\r\n            </>\r\n          )}\r\n\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={handleExport}\r\n            disabled={!onExport}\r\n            title=\"Export Blueprint\"\r\n          >\r\n            <Download className=\"w-4 h-4\" />\r\n          </Button>\r\n\r\n          <Button\r\n            variant=\"outline\"\r\n            size=\"sm\"\r\n            onClick={() => setShowProperties(!showProperties)}\r\n            title={showProperties ? 'Hide Properties Panel' : 'Show Properties Panel'}\r\n          >\r\n            {showProperties ? <EyeOff className=\"w-4 h-4\" /> : <Eye className=\"w-4 h-4\" />}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex flex-1 overflow-hidden\">\r\n        {/* Canvas */}\r\n        <div className=\"flex-1\">\r\n          <BlueprintCanvas\r\n            nodes={currentBlueprint.nodes}\r\n            connections={currentBlueprint.connections}\r\n            onNodeAdd={handleNodeAdd}\r\n            onNodeUpdate={handleNodeUpdate}\r\n            onNodeDelete={handleNodeDelete}\r\n            onConnectionAdd={handleConnectionAdd}\r\n            onConnectionDelete={handleConnectionDelete}\r\n            onNodeSelect={handleNodeSelect}\r\n            selectedNodeId={selectedNodeId}\r\n            readOnly={readOnly}\r\n          />\r\n        </div>\r\n\r\n        {/* Properties Panel */}\r\n        {showProperties && (\r\n          <BlueprintProperties\r\n            selectedNode={selectedNode}\r\n            nodes={currentBlueprint.nodes}\r\n            connections={currentBlueprint.connections}\r\n            onNodeUpdate={handleNodeUpdate}\r\n            onConnectionAdd={handleConnectionAdd}\r\n            onConnectionDelete={handleConnectionDelete}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Footer */}\r\n      <div className=\"flex items-center justify-between p-2 border-t bg-muted/30 text-xs text-muted-foreground\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <span>Version {currentBlueprint.version}</span>\r\n          <span>Updated {currentBlueprint.updatedAt.toLocaleTimeString()}</span>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-4\">\r\n          {Object.entries(stats.nodesByType).map(([type, count]) => (\r\n            <span key={type} className=\"capitalize\">\r\n              {count} {type}{count !== 1 ? 's' : ''}\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Export utility functions for blueprint operations\r\nexport const blueprintUtils = {\r\n  // Generate blueprint from text description\r\n  generateFromDescription: (description: string): Partial<Blueprint> => {\r\n    // This would integrate with AI to generate blueprint structure\r\n    // For now, return empty blueprint\r\n    return {\r\n      title: 'AI Generated Blueprint',\r\n      description,\r\n      nodes: [],\r\n      connections: []\r\n    };\r\n  },\r\n\r\n  // Export blueprint to various formats\r\n  exportToJSON: (blueprint: Blueprint): string => {\r\n    return JSON.stringify(blueprint, null, 2);\r\n  },\r\n\r\n  exportToMarkdown: (blueprint: Blueprint): string => {\r\n    let markdown = `# ${blueprint.title}\\n\\n`;\r\n    \r\n    if (blueprint.description) {\r\n      markdown += `${blueprint.description}\\n\\n`;\r\n    }\r\n\r\n    markdown += `## Components (${blueprint.nodes.length})\\n\\n`;\r\n    blueprint.nodes.forEach(node => {\r\n      markdown += `### ${node.title}\\n`;\r\n      markdown += `- **Type**: ${node.type}\\n`;\r\n      if (node.description) {\r\n        markdown += `- **Description**: ${node.description}\\n`;\r\n      }\r\n      if (node.technologies?.length) {\r\n        markdown += `- **Technologies**: ${node.technologies.join(', ')}\\n`;\r\n      }\r\n      markdown += '\\n';\r\n    });\r\n\r\n    if (blueprint.connections.length > 0) {\r\n      markdown += `## Connections (${blueprint.connections.length})\\n\\n`;\r\n      blueprint.connections.forEach(conn => {\r\n        const source = blueprint.nodes.find(n => n.id === conn.sourceId);\r\n        const target = blueprint.nodes.find(n => n.id === conn.targetId);\r\n        markdown += `- **${source?.title}** → **${target?.title}** (${conn.type})`;\r\n        if (conn.label) {\r\n          markdown += ` - ${conn.label}`;\r\n        }\r\n        markdown += '\\n';\r\n      });\r\n    }\r\n\r\n    return markdown;\r\n  },\r\n\r\n  // Import blueprint from JSON\r\n  importFromJSON: (jsonString: string): Blueprint => {\r\n    return JSON.parse(jsonString);\r\n  }\r\n};","import { useState, useCallback } from 'react';\r\nimport { \r\n  Sparkles, \r\n  Wand2, \r\n  FileText, \r\n  Code, \r\n  Download,\r\n  Share,\r\n  Layers\r\n} from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Textarea } from '@/components/ui/textarea';\r\nimport { Label } from '@/components/ui/label';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { cn } from '@/lib/utils';\r\nimport { BlueprintEditor, type Blueprint, blueprintUtils } from './BlueprintEditor';\r\n\r\ninterface BlueprintIntegrationProps {\r\n  onBlueprintGenerate?: (blueprint: Blueprint) => void;\r\n  onCodeGenerate?: (blueprint: Blueprint) => void;\r\n  onBlueprintShare?: (blueprint: Blueprint) => void;\r\n  currentBlueprint?: Blueprint;\r\n  className?: string;\r\n}\r\n\r\nexport function BlueprintIntegration({\r\n  onBlueprintGenerate,\r\n  onCodeGenerate,\r\n  onBlueprintShare,\r\n  currentBlueprint,\r\n  className\r\n}: BlueprintIntegrationProps) {\r\n  const [blueprint, setBlueprint] = useState<Blueprint | undefined>(currentBlueprint);\r\n  const [aiDescription, setAiDescription] = useState('');\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('design');\r\n\r\n  const handleAIGenerate = useCallback(async () => {\r\n    if (!aiDescription.trim()) return;\r\n    \r\n    setIsGenerating(true);\r\n    try {\r\n      // Simulate AI generation - in real implementation, this would call an AI service\r\n      await new Promise(resolve => setTimeout(resolve, 2000));\r\n      \r\n      const generatedBlueprint = blueprintUtils.generateFromDescription(aiDescription);\r\n      const newBlueprint: Blueprint = {\r\n        id: Math.random().toString(36).substring(2, 9),\r\n        title: generatedBlueprint.title || 'AI Generated Blueprint',\r\n        description: generatedBlueprint.description || aiDescription,\r\n        nodes: generatedBlueprint.nodes || [\r\n          {\r\n            id: 'frontend-1',\r\n            type: 'frontend',\r\n            title: 'React Frontend',\r\n            description: 'Modern React application with TypeScript',\r\n            position: { x: 100, y: 100 },\r\n            size: { width: 150, height: 100 },\r\n            technologies: ['React', 'TypeScript', 'Vite']\r\n          },\r\n          {\r\n            id: 'backend-1',\r\n            type: 'backend',\r\n            title: 'Node.js API',\r\n            description: 'RESTful API with Express.js',\r\n            position: { x: 400, y: 100 },\r\n            size: { width: 150, height: 100 },\r\n            technologies: ['Node.js', 'Express', 'TypeScript']\r\n          },\r\n          {\r\n            id: 'database-1',\r\n            type: 'database',\r\n            title: 'PostgreSQL',\r\n            description: 'Relational database for data storage',\r\n            position: { x: 400, y: 250 },\r\n            size: { width: 150, height: 100 },\r\n            technologies: ['PostgreSQL', 'Prisma']\r\n          }\r\n        ],\r\n        connections: generatedBlueprint.connections || [\r\n          {\r\n            id: 'conn-1',\r\n            sourceId: 'frontend-1',\r\n            targetId: 'backend-1',\r\n            type: 'api',\r\n            label: 'HTTP Requests'\r\n          },\r\n          {\r\n            id: 'conn-2',\r\n            sourceId: 'backend-1',\r\n            targetId: 'database-1',\r\n            type: 'data',\r\n            label: 'Database Queries'\r\n          }\r\n        ],\r\n        createdAt: new Date(),\r\n        updatedAt: new Date(),\r\n        version: 1\r\n      };\r\n      \r\n      setBlueprint(newBlueprint);\r\n      setActiveTab('design');\r\n      onBlueprintGenerate?.(newBlueprint);\r\n      \r\n    } catch (error) {\r\n      console.error('AI generation failed:', error);\r\n    } finally {\r\n      setIsGenerating(false);\r\n    }\r\n  }, [aiDescription, onBlueprintGenerate]);\r\n\r\n  const handleBlueprintSave = useCallback((updatedBlueprint: Blueprint) => {\r\n    setBlueprint(updatedBlueprint);\r\n  }, []);\r\n\r\n  const handleBlueprintExport = useCallback((blueprintToExport: Blueprint) => {\r\n    const markdown = blueprintUtils.exportToMarkdown(blueprintToExport);\r\n    const blob = new Blob([markdown], { type: 'text/markdown' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `${blueprintToExport.title.replace(/\\s+/g, '-').toLowerCase()}.md`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }, []);\r\n\r\n  const handleGenerateCode = useCallback(() => {\r\n    if (!blueprint) return;\r\n    onCodeGenerate?.(blueprint);\r\n  }, [blueprint, onCodeGenerate]);\r\n\r\n  const handleShareBlueprint = useCallback(() => {\r\n    if (!blueprint) return;\r\n    onBlueprintShare?.(blueprint);\r\n  }, [blueprint, onBlueprintShare]);\r\n\r\n  return (\r\n    <div className={cn('flex flex-col h-full', className)}>\r\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"flex-1 flex flex-col\">\r\n        <div className=\"border-b bg-muted/30 px-4\">\r\n          <TabsList className=\"grid w-full max-w-md grid-cols-3\">\r\n            <TabsTrigger value=\"generate\" className=\"flex items-center gap-2\">\r\n              <Sparkles className=\"w-4 h-4\" />\r\n              AI Generate\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"design\" className=\"flex items-center gap-2\">\r\n              <Layers className=\"w-4 h-4\" />\r\n              Design\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"export\" className=\"flex items-center gap-2\">\r\n              <FileText className=\"w-4 h-4\" />\r\n              Export\r\n            </TabsTrigger>\r\n          </TabsList>\r\n        </div>\r\n\r\n        <div className=\"flex-1 overflow-hidden\">\r\n          <TabsContent value=\"generate\" className=\"h-full m-0 p-4\">\r\n            <div className=\"max-w-2xl mx-auto space-y-6\">\r\n              <div className=\"text-center space-y-2\">\r\n                <h2 className=\"text-2xl font-semibold flex items-center justify-center gap-2\">\r\n                  <Wand2 className=\"w-6 h-6\" />\r\n                  AI Blueprint Generator\r\n                </h2>\r\n                <p className=\"text-muted-foreground\">\r\n                  Describe your application and let AI create a visual blueprint for you\r\n                </p>\r\n              </div>\r\n\r\n              <Card>\r\n                <CardHeader>\r\n                  <CardTitle className=\"text-lg\">Application Description</CardTitle>\r\n                </CardHeader>\r\n                <CardContent className=\"space-y-4\">\r\n                  <div>\r\n                    <Label htmlFor=\"ai-description\">\r\n                      Describe the application you want to build\r\n                    </Label>\r\n                    <Textarea\r\n                      id=\"ai-description\"\r\n                      value={aiDescription}\r\n                      onChange={(e) => setAiDescription(e.target.value)}\r\n                      placeholder=\"Example: Build a social media platform with user authentication, posts, comments, real-time notifications, and image uploads. Use React for frontend, Node.js for backend, and MongoDB for database...\"\r\n                      rows={6}\r\n                      className=\"mt-2\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    <Badge variant=\"secondary\" className=\"text-xs\">\r\n                      🎯 Be specific about features\r\n                    </Badge>\r\n                    <Badge variant=\"secondary\" className=\"text-xs\">\r\n                      🛠️ Mention preferred technologies\r\n                    </Badge>\r\n                    <Badge variant=\"secondary\" className=\"text-xs\">\r\n                      📊 Include data requirements\r\n                    </Badge>\r\n                  </div>\r\n\r\n                  <Button\r\n                    onClick={handleAIGenerate}\r\n                    disabled={!aiDescription.trim() || isGenerating}\r\n                    className=\"w-full\"\r\n                    size=\"lg\"\r\n                  >\r\n                    {isGenerating ? (\r\n                      <>\r\n                        <Sparkles className=\"w-4 h-4 mr-2 animate-spin\" />\r\n                        Generating Blueprint...\r\n                      </>\r\n                    ) : (\r\n                      <>\r\n                        <Wand2 className=\"w-4 h-4 mr-2\" />\r\n                        Generate Blueprint\r\n                      </>\r\n                    )}\r\n                  </Button>\r\n                </CardContent>\r\n              </Card>\r\n\r\n              {blueprint && (\r\n                <Card>\r\n                  <CardHeader>\r\n                    <CardTitle className=\"text-lg flex items-center gap-2\">\r\n                      <Layers className=\"w-5 h-5\" />\r\n                      Generated Blueprint: {blueprint.title}\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <CardContent>\r\n                    <div className=\"space-y-3\">\r\n                      <p className=\"text-sm text-muted-foreground\">\r\n                        {blueprint.description}\r\n                      </p>\r\n                      \r\n                      <div className=\"flex items-center gap-4 text-sm\">\r\n                        <span>{blueprint.nodes.length} components</span>\r\n                        <span>{blueprint.connections.length} connections</span>\r\n                        <span>Version {blueprint.version}</span>\r\n                      </div>\r\n\r\n                      <div className=\"flex gap-2\">\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={() => setActiveTab('design')}\r\n                        >\r\n                          <Layers className=\"w-4 h-4 mr-2\" />\r\n                          View & Edit\r\n                        </Button>\r\n                        <Button\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={handleGenerateCode}\r\n                        >\r\n                          <Code className=\"w-4 h-4 mr-2\" />\r\n                          Generate Code\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </CardContent>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"design\" className=\"h-full m-0\">\r\n            {blueprint ? (\r\n              <BlueprintEditor\r\n                blueprint={blueprint}\r\n                onSave={handleBlueprintSave}\r\n                onExport={handleBlueprintExport}\r\n              />\r\n            ) : (\r\n              <div className=\"h-full flex items-center justify-center\">\r\n                <div className=\"text-center text-muted-foreground\">\r\n                  <Layers className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                  <h3 className=\"text-lg font-medium mb-2\">No Blueprint Yet</h3>\r\n                  <p className=\"text-sm mb-4\">\r\n                    Generate a blueprint with AI or create one manually\r\n                  </p>\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={() => setActiveTab('generate')}\r\n                  >\r\n                    <Sparkles className=\"w-4 h-4 mr-2\" />\r\n                    Start with AI\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"export\" className=\"h-full m-0 p-4\">\r\n            <div className=\"max-w-2xl mx-auto space-y-6\">\r\n              <div className=\"text-center space-y-2\">\r\n                <h2 className=\"text-2xl font-semibold flex items-center justify-center gap-2\">\r\n                  <FileText className=\"w-6 h-6\" />\r\n                  Export & Share\r\n                </h2>\r\n                <p className=\"text-muted-foreground\">\r\n                  Export your blueprint or share it with others\r\n                </p>\r\n              </div>\r\n\r\n              {blueprint ? (\r\n                <div className=\"space-y-4\">\r\n                  <Card>\r\n                    <CardHeader>\r\n                      <CardTitle>{blueprint.title}</CardTitle>\r\n                    </CardHeader>\r\n                    <CardContent>\r\n                      <div className=\"space-y-4\">\r\n                        <div className=\"grid grid-cols-3 gap-4 text-center\">\r\n                          <div>\r\n                            <div className=\"text-2xl font-bold\">{blueprint.nodes.length}</div>\r\n                            <div className=\"text-sm text-muted-foreground\">Components</div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-2xl font-bold\">{blueprint.connections.length}</div>\r\n                            <div className=\"text-sm text-muted-foreground\">Connections</div>\r\n                          </div>\r\n                          <div>\r\n                            <div className=\"text-2xl font-bold\">v{blueprint.version}</div>\r\n                            <div className=\"text-sm text-muted-foreground\">Version</div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"flex flex-col gap-2\">\r\n                          <Button\r\n                            onClick={() => handleBlueprintExport(blueprint)}\r\n                            className=\"w-full\"\r\n                          >\r\n                            <Download className=\"w-4 h-4 mr-2\" />\r\n                            Download Markdown\r\n                          </Button>\r\n                          \r\n                          <Button\r\n                            variant=\"outline\"\r\n                            onClick={handleShareBlueprint}\r\n                            className=\"w-full\"\r\n                          >\r\n                            <Share className=\"w-4 h-4 mr-2\" />\r\n                            Share Blueprint\r\n                          </Button>\r\n                          \r\n                          <Button\r\n                            variant=\"outline\"\r\n                            onClick={handleGenerateCode}\r\n                            className=\"w-full\"\r\n                          >\r\n                            <Code className=\"w-4 h-4 mr-2\" />\r\n                            Generate Code from Blueprint\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </CardContent>\r\n                  </Card>\r\n                </div>\r\n              ) : (\r\n                <div className=\"text-center text-muted-foreground\">\r\n                  <FileText className=\"w-12 h-12 mx-auto mb-4 opacity-50\" />\r\n                  <h3 className=\"text-lg font-medium mb-2\">No Blueprint to Export</h3>\r\n                  <p className=\"text-sm\">\r\n                    Create a blueprint first to export and share it\r\n                  </p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </TabsContent>\r\n        </div>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","\r\nimport { \r\n  Clock,\r\n  CheckCircle,\r\n  AlertCircle,\r\n  XCircle,\r\n  Play,\r\n  Pause,\r\n  RotateCcw,\r\n  Zap,\r\n  Code,\r\n  FileText,\r\n  Package,\r\n  Rocket,\r\n  Brain,\r\n  Database\r\n} from 'lucide-react';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { cn } from '@/lib/utils';\r\n\r\nexport interface PhaseStep {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  status: 'pending' | 'running' | 'completed' | 'error' | 'skipped';\r\n  duration?: number; // in milliseconds\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n  progress?: number; // 0-100\r\n  output?: string;\r\n  error?: string;\r\n  icon?: 'brain' | 'code' | 'file' | 'package' | 'database' | 'rocket' | 'zap';\r\n}\r\n\r\nexport interface GenerationPhase {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  steps: PhaseStep[];\r\n  status: 'pending' | 'running' | 'completed' | 'error' | 'paused';\r\n  estimatedDuration?: number;\r\n  actualDuration?: number;\r\n  startTime?: Date;\r\n  endTime?: Date;\r\n}\r\n\r\ninterface PhaseTimelineProps {\r\n  phases: GenerationPhase[];\r\n  currentPhaseId?: string;\r\n  currentStepId?: string;\r\n  onPhaseStart?: (phaseId: string) => void;\r\n  onPhasePause?: (phaseId: string) => void;\r\n  onPhaseRetry?: (phaseId: string) => void;\r\n  onStepRetry?: (phaseId: string, stepId: string) => void;\r\n  showControls?: boolean;\r\n  compact?: boolean;\r\n  className?: string;\r\n}\r\n\r\nconst stepIcons = {\r\n  brain: Brain,\r\n  code: Code,\r\n  file: FileText,\r\n  package: Package,\r\n  database: Database,\r\n  rocket: Rocket,\r\n  zap: Zap\r\n};\r\n\r\nconst statusColors = {\r\n  pending: 'text-muted-foreground',\r\n  running: 'text-blue-500',\r\n  completed: 'text-green-500',\r\n  error: 'text-red-500',\r\n  skipped: 'text-gray-400',\r\n  paused: 'text-orange-500'\r\n};\r\n\r\nconst statusBgColors = {\r\n  pending: 'bg-muted',\r\n  running: 'bg-blue-100 dark:bg-blue-900/20',\r\n  completed: 'bg-green-100 dark:bg-green-900/20',\r\n  error: 'bg-red-100 dark:bg-red-900/20',\r\n  skipped: 'bg-gray-100 dark:bg-gray-900/20',\r\n  paused: 'bg-orange-100 dark:bg-orange-900/20'\r\n};\r\n\r\nfunction formatDuration(ms?: number): string {\r\n  if (!ms) return '--';\r\n  \r\n  if (ms < 1000) return `${ms}ms`;\r\n  if (ms < 60000) return `${(ms / 1000).toFixed(1)}s`;\r\n  return `${(ms / 60000).toFixed(1)}m`;\r\n}\r\n\r\nfunction getStatusIcon(status: PhaseStep['status'] | GenerationPhase['status']) {\r\n  switch (status) {\r\n    case 'pending':\r\n      return Clock;\r\n    case 'running':\r\n      return Play;\r\n    case 'completed':\r\n      return CheckCircle;\r\n    case 'error':\r\n      return XCircle;\r\n    case 'skipped':\r\n      return AlertCircle;\r\n    case 'paused':\r\n      return Pause;\r\n    default:\r\n      return Clock;\r\n  }\r\n}\r\n\r\ninterface PhaseStepItemProps {\r\n  step: PhaseStep;\r\n  isActive: boolean;\r\n  onRetry?: () => void;\r\n  compact?: boolean;\r\n}\r\n\r\nfunction PhaseStepItem({ step, isActive, onRetry, compact = false }: PhaseStepItemProps) {\r\n  const StatusIcon = getStatusIcon(step.status);\r\n  const StepIcon = step.icon ? stepIcons[step.icon] : Code;\r\n  \r\n  const duration = step.endTime && step.startTime \r\n    ? step.endTime.getTime() - step.startTime.getTime()\r\n    : step.duration;\r\n\r\n  return (\r\n    <div className={cn(\r\n      'flex items-start gap-3 p-3 rounded-lg transition-all',\r\n      isActive && 'ring-2 ring-primary/20',\r\n      statusBgColors[step.status]\r\n    )}>\r\n      <div className=\"flex items-center gap-2 flex-shrink-0\">\r\n        <div className={cn('p-1.5 rounded-full', statusColors[step.status])}>\r\n          <StatusIcon className=\"w-4 h-4\" />\r\n        </div>\r\n        <div className={cn('p-1.5 rounded-full bg-background', statusColors[step.status])}>\r\n          <StepIcon className=\"w-4 h-4\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex-1 min-w-0\">\r\n        <div className=\"flex items-center justify-between mb-1\">\r\n          <h4 className=\"font-medium text-sm truncate\">\r\n            {step.name}\r\n          </h4>\r\n          \r\n          <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\r\n            {step.status === 'running' && step.progress !== undefined && (\r\n              <Badge variant=\"secondary\" className=\"text-xs\">\r\n                {step.progress}%\r\n              </Badge>\r\n            )}\r\n            <span>{formatDuration(duration)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {!compact && (\r\n          <p className=\"text-xs text-muted-foreground mb-2 line-clamp-2\">\r\n            {step.description}\r\n          </p>\r\n        )}\r\n\r\n        {step.status === 'running' && step.progress !== undefined && (\r\n          <Progress value={step.progress} className=\"h-1.5 mb-2\" />\r\n        )}\r\n\r\n        {step.status === 'error' && step.error && (\r\n          <div className=\"bg-red-50 dark:bg-red-900/10 border border-red-200 dark:border-red-800 rounded p-2 mb-2\">\r\n            <p className=\"text-xs text-red-700 dark:text-red-300\">\r\n              {step.error}\r\n            </p>\r\n            {onRetry && (\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                onClick={onRetry}\r\n                className=\"mt-1 h-6 text-xs\"\r\n              >\r\n                <RotateCcw className=\"w-3 h-3 mr-1\" />\r\n                Retry\r\n              </Button>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {step.output && step.status === 'completed' && !compact && (\r\n          <div className=\"bg-green-50 dark:bg-green-900/10 border border-green-200 dark:border-green-800 rounded p-2\">\r\n            <p className=\"text-xs text-green-700 dark:text-green-300 line-clamp-2\">\r\n              {step.output}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface PhaseCardProps {\r\n  phase: GenerationPhase;\r\n  isActive: boolean;\r\n  currentStepId?: string;\r\n  onStart?: () => void;\r\n  onPause?: () => void;\r\n  onRetry?: () => void;\r\n  onStepRetry?: (stepId: string) => void;\r\n  showControls?: boolean;\r\n  compact?: boolean;\r\n}\r\n\r\nfunction PhaseCard({ \r\n  phase, \r\n  isActive, \r\n  currentStepId,\r\n  onStart,\r\n  onPause,\r\n  onRetry,\r\n  onStepRetry,\r\n  showControls = false,\r\n  compact = false\r\n}: PhaseCardProps) {\r\n  const completedSteps = phase.steps.filter(step => step.status === 'completed').length;\r\n  const totalSteps = phase.steps.length;\r\n  const progress = totalSteps > 0 ? (completedSteps / totalSteps) * 100 : 0;\r\n  \r\n  const duration = phase.endTime && phase.startTime \r\n    ? phase.endTime.getTime() - phase.startTime.getTime()\r\n    : phase.actualDuration;\r\n\r\n  return (\r\n    <Card className={cn(\r\n      'transition-all',\r\n      isActive && 'ring-2 ring-primary shadow-lg',\r\n      statusBgColors[phase.status]\r\n    )}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <div className={cn('p-2 rounded-full', statusColors[phase.status])}>\r\n              {getStatusIcon(phase.status)({ className: 'w-5 h-5' })}\r\n            </div>\r\n            <div>\r\n              <CardTitle className=\"text-base\">{phase.name}</CardTitle>\r\n              {!compact && (\r\n                <p className=\"text-sm text-muted-foreground mt-1\">\r\n                  {phase.description}\r\n                </p>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            <Badge variant=\"secondary\" className=\"text-xs\">\r\n              {completedSteps}/{totalSteps}\r\n            </Badge>\r\n            {showControls && (\r\n              <div className=\"flex gap-1\">\r\n                {phase.status === 'pending' && onStart && (\r\n                  <Button variant=\"outline\" size=\"sm\" onClick={onStart}>\r\n                    <Play className=\"w-3 h-3\" />\r\n                  </Button>\r\n                )}\r\n                {phase.status === 'running' && onPause && (\r\n                  <Button variant=\"outline\" size=\"sm\" onClick={onPause}>\r\n                    <Pause className=\"w-3 h-3\" />\r\n                  </Button>\r\n                )}\r\n                {(phase.status === 'error' || phase.status === 'paused') && onRetry && (\r\n                  <Button variant=\"outline\" size=\"sm\" onClick={onRetry}>\r\n                    <RotateCcw className=\"w-3 h-3\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"space-y-2\">\r\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\r\n            <span>Progress: {progress.toFixed(0)}%</span>\r\n            <span>Duration: {formatDuration(duration)}</span>\r\n          </div>\r\n          <Progress value={progress} className=\"h-2\" />\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"pt-0\">\r\n        <div className=\"space-y-2\">\r\n          {phase.steps.map((step) => (\r\n            <PhaseStepItem\r\n              key={step.id}\r\n              step={step}\r\n              isActive={step.id === currentStepId}\r\n              {...(onStepRetry && { onRetry: () => onStepRetry(step.id) })}\r\n              compact={compact}\r\n            />\r\n          ))}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport function PhaseTimeline({\r\n  phases,\r\n  currentPhaseId,\r\n  currentStepId,\r\n  onPhaseStart,\r\n  onPhasePause,\r\n  onPhaseRetry,\r\n  onStepRetry,\r\n  showControls = false,\r\n  compact = false,\r\n  className\r\n}: PhaseTimelineProps) {\r\n  const totalPhases = phases.length;\r\n  const completedPhases = phases.filter(phase => phase.status === 'completed').length;\r\n  const overallProgress = totalPhases > 0 ? (completedPhases / totalPhases) * 100 : 0;\r\n\r\n  const totalSteps = phases.reduce((acc, phase) => acc + phase.steps.length, 0);\r\n  const completedSteps = phases.reduce((acc, phase) => \r\n    acc + phase.steps.filter(step => step.status === 'completed').length, 0\r\n  );\r\n  const stepProgress = totalSteps > 0 ? (completedSteps / totalSteps) * 100 : 0;\r\n\r\n  if (phases.length === 0) {\r\n    return (\r\n      <div className={cn('p-6 text-center text-muted-foreground', className)}>\r\n        <Clock className=\"w-8 h-8 mx-auto mb-2 opacity-50\" />\r\n        <p className=\"text-sm\">No generation phases yet</p>\r\n        <p className=\"text-xs\">Start a conversation to see progress</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn('space-y-4', className)}>\r\n      {/* Overall Progress */}\r\n      <Card>\r\n        <CardContent className=\"p-4\">\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <h3 className=\"font-medium\">Generation Progress</h3>\r\n              <Badge variant=\"secondary\">\r\n                {completedPhases}/{totalPhases} phases\r\n              </Badge>\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between text-sm\">\r\n                <span>Overall Progress</span>\r\n                <span>{overallProgress.toFixed(0)}%</span>\r\n              </div>\r\n              <Progress value={overallProgress} className=\"h-2\" />\r\n            </div>\r\n            \r\n            <div className=\"space-y-2\">\r\n              <div className=\"flex items-center justify-between text-sm\">\r\n                <span>Step Progress</span>\r\n                <span>{completedSteps}/{totalSteps} steps</span>\r\n              </div>\r\n              <Progress value={stepProgress} className=\"h-1.5\" />\r\n            </div>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Phase Cards */}\r\n      <div className=\"space-y-3\">\r\n        {phases.map((phase) => (\r\n          <PhaseCard\r\n            key={phase.id}\r\n            phase={phase}\r\n            isActive={phase.id === currentPhaseId}\r\n            {...(currentStepId && { currentStepId })}\r\n            {...(onPhaseStart && { onStart: () => onPhaseStart(phase.id) })}\r\n            {...(onPhasePause && { onPause: () => onPhasePause(phase.id) })}\r\n            {...(onPhaseRetry && { onRetry: () => onPhaseRetry(phase.id) })}\r\n            {...(onStepRetry && { onStepRetry: (stepId) => onStepRetry(phase.id, stepId) })}\r\n            showControls={showControls}\r\n            compact={compact}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { Input } from '@/components/ui/input';\r\nimport { \r\n  Bug,\r\n  Monitor,\r\n  Activity,\r\n  AlertTriangle,\r\n  Info,\r\n  Search,\r\n  Download,\r\n  Trash2,\r\n  Play,\r\n  Pause,\r\n  Clock,\r\n  Zap,\r\n  Server,\r\n  Wifi\r\n} from 'lucide-react';\r\nimport { cn } from '@/lib/utils';\r\nimport type { LogEntry, PerformanceMetric, ErrorInfo } from './types';\r\n\r\ninterface DebugPanelProps {\r\n  className?: string;\r\n  isActive?: boolean;\r\n  sessionId?: string;\r\n  onToggleRecording?: (recording: boolean) => void;\r\n}\r\n\r\nconst DebugPanel: React.FC<DebugPanelProps> = ({\r\n  className,\r\n  isActive = false,\r\n  sessionId,\r\n  onToggleRecording\r\n}) => {\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedLevel, setSelectedLevel] = useState<string>('all');\r\n  const [logs, setLogs] = useState<LogEntry[]>([]);\r\n  const [errors, setErrors] = useState<ErrorInfo[]>([]);\r\n  const [metrics, setMetrics] = useState<PerformanceMetric[]>([]);\r\n\r\n  // Mock data generation\r\n  useEffect(() => {\r\n    if (isActive) {\r\n      setLogs(generateMockLogs());\r\n      setErrors(generateMockErrors());\r\n      setMetrics(generateMockMetrics());\r\n    }\r\n  }, [isActive, sessionId]);\r\n\r\n  // Auto-refresh logs when recording\r\n  useEffect(() => {\r\n    if (isRecording) {\r\n      const interval = setInterval(() => {\r\n        setLogs(prev => [...prev, generateRandomLog()]);\r\n        setMetrics(prev => [...prev.slice(-20), generateRandomMetric()]);\r\n      }, 2000);\r\n      return () => clearInterval(interval);\r\n    }\r\n    return undefined;\r\n  }, [isRecording]);\r\n\r\n  const handleToggleRecording = () => {\r\n    const newRecording = !isRecording;\r\n    setIsRecording(newRecording);\r\n    onToggleRecording?.(newRecording);\r\n  };\r\n\r\n  const clearLogs = () => {\r\n    setLogs([]);\r\n    setErrors([]);\r\n    setMetrics([]);\r\n  };\r\n\r\n  const exportLogs = () => {\r\n    const debugData = {\r\n      timestamp: new Date().toISOString(),\r\n      sessionId,\r\n      logs,\r\n      errors,\r\n      metrics\r\n    };\r\n    const blob = new Blob([JSON.stringify(debugData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `debug-session-${sessionId || 'unknown'}-${Date.now()}.json`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const filteredLogs = logs.filter(log => {\r\n    const matchesSearch = log.message.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         log.source.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesLevel = selectedLevel === 'all' || log.level === selectedLevel;\r\n    return matchesSearch && matchesLevel;\r\n  });\r\n\r\n  const getLogIcon = (level: LogEntry['level']) => {\r\n    switch (level) {\r\n      case 'error': return <AlertTriangle className=\"h-4 w-4 text-red-500\" />;\r\n      case 'warning': return <AlertTriangle className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'info': return <Info className=\"h-4 w-4 text-blue-500\" />;\r\n      case 'debug': return <Bug className=\"h-4 w-4 text-gray-500\" />;\r\n      default: return <Info className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const getMetricIcon = (category: PerformanceMetric['category']) => {\r\n    switch (category) {\r\n      case 'response_time': return <Clock className=\"h-4 w-4 text-blue-500\" />;\r\n      case 'token_usage': return <Zap className=\"h-4 w-4 text-yellow-500\" />;\r\n      case 'memory': return <Server className=\"h-4 w-4 text-green-500\" />;\r\n      case 'network': return <Wifi className=\"h-4 w-4 text-purple-500\" />;\r\n      default: return <Activity className=\"h-4 w-4\" />;\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (date: Date) => {\r\n    return date.toLocaleTimeString('en-US', { \r\n      hour12: false, \r\n      hour: '2-digit', \r\n      minute: '2-digit', \r\n      second: '2-digit' \r\n    });\r\n  };\r\n\r\n  return (\r\n    <Card className={cn(\"h-full flex flex-col\", className)}>\r\n      <CardHeader className=\"pb-3\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <CardTitle className=\"flex items-center gap-2\">\r\n            <Monitor className=\"h-5 w-5\" />\r\n            Debug Panel\r\n            {isRecording && (\r\n              <Badge variant=\"destructive\" className=\"animate-pulse\">\r\n                Recording\r\n              </Badge>\r\n            )}\r\n          </CardTitle>\r\n          <div className=\"flex items-center gap-2\">\r\n            <Button\r\n              variant={isRecording ? \"destructive\" : \"outline\"}\r\n              size=\"sm\"\r\n              onClick={handleToggleRecording}\r\n            >\r\n              {isRecording ? <Pause className=\"h-4 w-4\" /> : <Play className=\"h-4 w-4\" />}\r\n              {isRecording ? 'Stop' : 'Record'}\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={clearLogs}>\r\n              <Trash2 className=\"h-4 w-4\" />\r\n            </Button>\r\n            <Button variant=\"outline\" size=\"sm\" onClick={exportLogs}>\r\n              <Download className=\"h-4 w-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </CardHeader>\r\n\r\n      <CardContent className=\"flex-1 p-0\">\r\n        <Tabs defaultValue=\"logs\" className=\"h-full flex flex-col\">\r\n          <TabsList className=\"mx-4 mb-2\">\r\n            <TabsTrigger value=\"logs\" className=\"flex items-center gap-1\">\r\n              <Bug className=\"h-4 w-4\" />\r\n              Logs ({logs.length})\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"errors\" className=\"flex items-center gap-1\">\r\n              <AlertTriangle className=\"h-4 w-4\" />\r\n              Errors ({errors.filter(e => !e.resolved).length})\r\n            </TabsTrigger>\r\n            <TabsTrigger value=\"metrics\" className=\"flex items-center gap-1\">\r\n              <Activity className=\"h-4 w-4\" />\r\n              Metrics\r\n            </TabsTrigger>\r\n          </TabsList>\r\n\r\n          <TabsContent value=\"logs\" className=\"flex-1 mx-4 mb-4\">\r\n            <div className=\"space-y-3\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <div className=\"relative flex-1\">\r\n                  <Search className=\"absolute left-2 top-2.5 h-4 w-4 text-muted-foreground\" />\r\n                  <Input\r\n                    placeholder=\"Search logs...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                    className=\"pl-8\"\r\n                  />\r\n                </div>\r\n                <select\r\n                  value={selectedLevel}\r\n                  onChange={(e) => setSelectedLevel(e.target.value)}\r\n                  className=\"px-3 py-2 border rounded-md bg-background text-sm\"\r\n                >\r\n                  <option value=\"all\">All Levels</option>\r\n                  <option value=\"error\">Errors</option>\r\n                  <option value=\"warning\">Warnings</option>\r\n                  <option value=\"info\">Info</option>\r\n                  <option value=\"debug\">Debug</option>\r\n                </select>\r\n              </div>\r\n\r\n              <ScrollArea className=\"h-[400px] border rounded-md\">\r\n                <div className=\"p-3 space-y-2\">\r\n                  {filteredLogs.map((log) => (\r\n                    <div\r\n                      key={log.id}\r\n                      className=\"flex items-start gap-3 p-2 rounded border-l-2 border-l-blue-500 bg-muted/30\"\r\n                    >\r\n                      {getLogIcon(log.level)}\r\n                      <div className=\"flex-1 min-w-0\">\r\n                        <div className=\"flex items-center gap-2 text-sm\">\r\n                          <span className=\"font-mono text-xs text-muted-foreground\">\r\n                            {formatTimestamp(log.timestamp)}\r\n                          </span>\r\n                          <Badge variant=\"outline\" className=\"text-xs\">\r\n                            {log.source}\r\n                          </Badge>\r\n                          <Badge \r\n                            variant={log.level === 'error' ? 'destructive' : \r\n                                    log.level === 'warning' ? 'secondary' : 'default'}\r\n                            className=\"text-xs\"\r\n                          >\r\n                            {log.level.toUpperCase()}\r\n                          </Badge>\r\n                        </div>\r\n                        <p className=\"text-sm mt-1 break-words\">{log.message}</p>\r\n                        {log.details && (\r\n                          <pre className=\"text-xs bg-muted p-2 rounded mt-2 overflow-x-auto\">\r\n                            {JSON.stringify(log.details, null, 2)}\r\n                          </pre>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                  {filteredLogs.length === 0 && (\r\n                    <div className=\"text-center py-8 text-muted-foreground\">\r\n                      {searchTerm || selectedLevel !== 'all' \r\n                        ? 'No logs match your filters' \r\n                        : 'No logs recorded yet'\r\n                      }\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ScrollArea>\r\n            </div>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"errors\" className=\"flex-1 mx-4 mb-4\">\r\n            <ScrollArea className=\"h-[500px] border rounded-md\">\r\n              <div className=\"p-3 space-y-3\">\r\n                {errors.map((error) => (\r\n                  <Card key={error.id} className={cn(\r\n                    \"border-l-4\",\r\n                    error.severity === 'critical' ? 'border-l-red-600' :\r\n                    error.severity === 'high' ? 'border-l-red-400' :\r\n                    error.severity === 'medium' ? 'border-l-yellow-400' :\r\n                    'border-l-blue-400'\r\n                  )}>\r\n                    <CardHeader className=\"pb-2\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <AlertTriangle className=\"h-4 w-4 text-red-500\" />\r\n                          <span className=\"font-mono text-xs text-muted-foreground\">\r\n                            {formatTimestamp(error.timestamp)}\r\n                          </span>\r\n                          <Badge variant=\"destructive\" className=\"text-xs\">\r\n                            {error.severity.toUpperCase()}\r\n                          </Badge>\r\n                          {error.resolved && (\r\n                            <Badge variant=\"outline\" className=\"text-xs\">\r\n                              RESOLVED\r\n                            </Badge>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </CardHeader>\r\n                    <CardContent className=\"pt-0\">\r\n                      <p className=\"text-sm font-medium mb-2\">{error.error}</p>\r\n                      {error.stack && (\r\n                        <pre className=\"text-xs bg-muted p-2 rounded overflow-x-auto\">\r\n                          {error.stack}\r\n                        </pre>\r\n                      )}\r\n                      {error.context && (\r\n                        <div className=\"mt-2\">\r\n                          <p className=\"text-xs font-medium mb-1\">Context:</p>\r\n                          <pre className=\"text-xs bg-muted p-2 rounded overflow-x-auto\">\r\n                            {JSON.stringify(error.context, null, 2)}\r\n                          </pre>\r\n                        </div>\r\n                      )}\r\n                    </CardContent>\r\n                  </Card>\r\n                ))}\r\n                {errors.length === 0 && (\r\n                  <div className=\"text-center py-8 text-muted-foreground\">\r\n                    No errors recorded\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </ScrollArea>\r\n          </TabsContent>\r\n\r\n          <TabsContent value=\"metrics\" className=\"flex-1 mx-4 mb-4\">\r\n            <div className=\"space-y-4\">\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                {['response_time', 'token_usage', 'memory', 'network'].map((category) => {\r\n                  const categoryMetrics = metrics.filter(m => m.category === category);\r\n                  const latest = categoryMetrics[categoryMetrics.length - 1];\r\n                  const average = categoryMetrics.length > 0 \r\n                    ? categoryMetrics.reduce((sum, m) => sum + m.value, 0) / categoryMetrics.length \r\n                    : 0;\r\n\r\n                  return (\r\n                    <Card key={category}>\r\n                      <CardHeader className=\"pb-2\">\r\n                        <CardTitle className=\"text-sm flex items-center gap-2\">\r\n                          {getMetricIcon(category as PerformanceMetric['category'])}\r\n                          {category.replace('_', ' ').toUpperCase()}\r\n                        </CardTitle>\r\n                      </CardHeader>\r\n                      <CardContent>\r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Current:</span>\r\n                            <span className=\"font-mono\">\r\n                              {latest ? `${latest.value}${latest.unit}` : 'N/A'}\r\n                            </span>\r\n                          </div>\r\n                          <div className=\"flex justify-between text-sm\">\r\n                            <span>Average:</span>\r\n                            <span className=\"font-mono\">\r\n                              {categoryMetrics.length > 0 \r\n                                ? `${average.toFixed(1)}${latest?.unit || ''}` \r\n                                : 'N/A'\r\n                              }\r\n                            </span>\r\n                          </div>\r\n                          {latest && (\r\n                            <Progress \r\n                              value={Math.min((latest.value / (average * 2)) * 100, 100)} \r\n                              className=\"h-2\"\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </CardContent>\r\n                    </Card>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              <ScrollArea className=\"h-[300px] border rounded-md\">\r\n                <div className=\"p-3 space-y-2\">\r\n                  {metrics.slice(-50).reverse().map((metric) => (\r\n                    <div\r\n                      key={metric.id}\r\n                      className=\"flex items-center justify-between p-2 rounded bg-muted/30\"\r\n                    >\r\n                      <div className=\"flex items-center gap-2\">\r\n                        {getMetricIcon(metric.category)}\r\n                        <span className=\"text-sm font-medium\">{metric.name}</span>\r\n                        <span className=\"font-mono text-xs text-muted-foreground\">\r\n                          {formatTimestamp(metric.timestamp)}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"font-mono text-sm\">\r\n                        {metric.value}{metric.unit}\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                  {metrics.length === 0 && (\r\n                    <div className=\"text-center py-8 text-muted-foreground\">\r\n                      No metrics recorded yet\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </ScrollArea>\r\n            </div>\r\n          </TabsContent>\r\n        </Tabs>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n// Mock data generators\r\nconst generateMockLogs = (): LogEntry[] => {\r\n  const sources = ['AI Generator', 'Database', 'Authentication', 'File System', 'Network'];\r\n  const levels: LogEntry['level'][] = ['info', 'warning', 'error', 'debug'];\r\n  const messages = [\r\n    'Starting code generation process',\r\n    'Database connection established',\r\n    'User authentication successful',\r\n    'File upload completed',\r\n    'API request processed',\r\n    'Cache miss - fetching from database',\r\n    'Rate limit warning: approaching threshold',\r\n    'Network timeout - retrying request',\r\n    'Invalid API key provided',\r\n    'Memory usage threshold exceeded'\r\n  ];\r\n\r\n  return Array.from({ length: 25 }, (_, i) => ({\r\n    id: `log-${i}`,\r\n    timestamp: new Date(Date.now() - (25 - i) * 30000),\r\n    level: levels[Math.floor(Math.random() * levels.length)],\r\n    source: sources[Math.floor(Math.random() * sources.length)],\r\n    message: messages[Math.floor(Math.random() * messages.length)],\r\n    details: Math.random() > 0.7 ? { requestId: `req-${i}`, duration: Math.floor(Math.random() * 1000) } : undefined\r\n  }));\r\n};\r\n\r\nconst generateMockErrors = (): ErrorInfo[] => {\r\n  const errors = [\r\n    'Network connection timeout',\r\n    'Invalid API response format',\r\n    'Database query failed',\r\n    'Authentication token expired',\r\n    'File permission denied'\r\n  ];\r\n\r\n  return Array.from({ length: 3 }, (_, i) => ({\r\n    id: `error-${i}`,\r\n    timestamp: new Date(Date.now() - (3 - i) * 120000),\r\n    error: errors[Math.floor(Math.random() * errors.length)],\r\n    stack: `Error: ${errors[i]}\\n    at function1 (file1.js:10:5)\\n    at function2 (file2.js:20:10)`,\r\n    context: { userId: 'user123', requestId: `req-${i}` },\r\n    severity: ['low', 'medium', 'high', 'critical'][Math.floor(Math.random() * 4)] as ErrorInfo['severity'],\r\n    resolved: Math.random() > 0.5\r\n  }));\r\n};\r\n\r\nconst generateMockMetrics = (): PerformanceMetric[] => {\r\n  const categories: PerformanceMetric['category'][] = ['response_time', 'token_usage', 'memory', 'network'];\r\n  const names = {\r\n    response_time: ['API Response', 'DB Query', 'File Read'],\r\n    token_usage: ['Input Tokens', 'Output Tokens', 'Total Tokens'],\r\n    memory: ['Heap Usage', 'RSS Memory', 'External Memory'],\r\n    network: ['Download Speed', 'Upload Speed', 'Latency']\r\n  };\r\n  const units = {\r\n    response_time: 'ms',\r\n    token_usage: '',\r\n    memory: 'MB',\r\n    network: 'ms'\r\n  };\r\n\r\n  return Array.from({ length: 20 }, (_, i) => {\r\n    const category = categories[Math.floor(Math.random() * categories.length)];\r\n    return {\r\n      id: `metric-${i}`,\r\n      name: names[category][Math.floor(Math.random() * names[category].length)],\r\n      value: Math.floor(Math.random() * 1000),\r\n      unit: units[category],\r\n      timestamp: new Date(Date.now() - (20 - i) * 15000),\r\n      category\r\n    };\r\n  });\r\n};\r\n\r\nconst generateRandomLog = (): LogEntry => {\r\n  const sources = ['AI Generator', 'Database', 'Authentication', 'File System', 'Network'];\r\n  const levels: LogEntry['level'][] = ['info', 'warning', 'error', 'debug'];\r\n  const messages = [\r\n    'Real-time log entry generated',\r\n    'Background process completed',\r\n    'Cache refreshed successfully',\r\n    'Webhook received and processed',\r\n    'Scheduled task executed'\r\n  ];\r\n\r\n  return {\r\n    id: `log-${Date.now()}`,\r\n    timestamp: new Date(),\r\n    level: levels[Math.floor(Math.random() * levels.length)],\r\n    source: sources[Math.floor(Math.random() * sources.length)],\r\n    message: messages[Math.floor(Math.random() * messages.length)]\r\n  };\r\n};\r\n\r\nconst generateRandomMetric = (): PerformanceMetric => {\r\n  const categories: PerformanceMetric['category'][] = ['response_time', 'token_usage', 'memory', 'network'];\r\n  const category = categories[Math.floor(Math.random() * categories.length)];\r\n  \r\n  return {\r\n    id: `metric-${Date.now()}`,\r\n    name: `Live ${category.replace('_', ' ')}`,\r\n    value: Math.floor(Math.random() * 1000),\r\n    unit: category === 'response_time' ? 'ms' : category === 'memory' ? 'MB' : '',\r\n    timestamp: new Date(),\r\n    category\r\n  };\r\n};\r\n\r\nexport default DebugPanel;","import { useState, useRef, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  MessageSquare, \r\n  Download, \r\n  Trash2,\r\n  Maximize2,\r\n  Minimize2,\r\n  PanelLeft,\r\n  PanelRight,\r\n  Layers,\r\n  Clock,\r\n  Bug\r\n} from 'lucide-react';\r\n\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\n\r\nimport { UserMessage, AIMessage, SystemMessage } from './Messages';\r\nimport { ChatInput } from './ChatInput';\r\nimport { EnhancedFileManager, FileNode } from '@/components/file-manager';\r\nimport { BlueprintIntegration } from '@/components/blueprint';\r\nimport type { Blueprint } from '@/components/blueprint';\r\nimport { PhaseTimeline, createMockPhases } from '@/components/phase';\r\nimport type { GenerationPhase } from '@/components/phase';\r\nimport { DebugPanel } from '@/components/debug';\r\nimport { useChat } from '@/hooks/useChat';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { cn } from '@/lib/utils';\r\n\r\ninterface ChatPageProps {\r\n  className?: string;\r\n}\r\n\r\nexport default function AdvancedChat({ className }: ChatPageProps) {\r\n  const { user } = useAuth();\r\n  \r\n  const [showFileExplorer, setShowFileExplorer] = useState(true);\r\n  const [selectedFile, setSelectedFile] = useState<FileNode | null>(null);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [mockPhases] = useState<GenerationPhase[]>(createMockPhases());\r\n  \r\n  const chatContainerRef = useRef<HTMLDivElement>(null);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const {\r\n    session,\r\n    isGenerating,\r\n    currentPhase,\r\n    streamingMessageId,\r\n    error,\r\n    sendMessage,\r\n    stopGeneration,\r\n    clearChat,\r\n  } = useChat({\r\n    onFileGenerated: (file) => {\r\n      console.log('File generated:', file);\r\n    },\r\n    onError: (error) => {\r\n      console.error('Chat error:', error);\r\n    }\r\n  });\r\n\r\n  // Auto-scroll to bottom when new messages arrive\r\n  useEffect(() => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  }, [session?.messages, streamingMessageId]);\r\n\r\n  const handleSendMessage = async (content: string, files?: File[]) => {\r\n    await sendMessage(content, files);\r\n  };\r\n\r\n  // Convert old FileNode format to enhanced format\r\n  const convertToEnhancedFileNodes = (files: any[]): FileNode[] => {\r\n    return files.map(file => ({\r\n      ...file,\r\n      parentId: null, // Set to null for root level files, could be enhanced later\r\n      createdAt: file.modified || new Date(),\r\n      modifiedAt: file.modified || new Date(),\r\n      version: 1,\r\n      isReadonly: false\r\n    }));\r\n  };\r\n\r\n  const handleFileSelect = (file: FileNode) => {\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  const handleFileDownload = (file: FileNode) => {\r\n    if (!file.content) return;\r\n    \r\n    const blob = new Blob([file.content], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = file.name;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const handleExportChat = () => {\r\n    if (!session) return;\r\n    \r\n    const chatData = {\r\n      title: session.title,\r\n      messages: session.messages,\r\n      files: session.files,\r\n      createdAt: session.createdAt,\r\n    };\r\n    \r\n    const blob = new Blob([JSON.stringify(chatData, null, 2)], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `chat-${session.id}.json`;\r\n    a.click();\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  // Blueprint handlers\r\n  const handleBlueprintGenerate = (blueprint: Blueprint) => {\r\n    console.log('Blueprint generated:', blueprint);\r\n    // Optionally send a message to the chat about the blueprint\r\n    handleSendMessage(`I've created a blueprint for \"${blueprint.title}\" with ${blueprint.nodes.length} components. Let me generate the code based on this architecture.`);\r\n  };\r\n\r\n  const handleCodeGenerate = (blueprint: Blueprint) => {\r\n    console.log('Generating code from blueprint:', blueprint);\r\n    // Convert blueprint to a structured prompt for code generation\r\n    const prompt = `Generate a complete application based on this blueprint:\r\n\r\nTitle: ${blueprint.title}\r\nDescription: ${blueprint.description || 'No description provided'}\r\n\r\nComponents:\r\n${blueprint.nodes.map(node => `- ${node.title} (${node.type}): ${node.description || 'No description'}\r\n  Technologies: ${node.technologies?.join(', ') || 'Not specified'}`).join('\\n')}\r\n\r\nConnections:\r\n${blueprint.connections.map(conn => {\r\n  const source = blueprint.nodes.find(n => n.id === conn.sourceId);\r\n  const target = blueprint.nodes.find(n => n.id === conn.targetId);\r\n  return `- ${source?.title} → ${target?.title} (${conn.type}${conn.label ? `: ${conn.label}` : ''})`;\r\n}).join('\\n')}\r\n\r\nPlease generate the complete code structure including all necessary files, configurations, and documentation.`;\r\n\r\n    handleSendMessage(prompt);\r\n  };\r\n\r\n  const handleBlueprintShare = (blueprint: Blueprint) => {\r\n    console.log('Sharing blueprint:', blueprint);\r\n    // Copy blueprint link or data to clipboard\r\n    navigator.clipboard.writeText(JSON.stringify(blueprint, null, 2));\r\n    // Could also trigger a toast notification here\r\n  };\r\n\r\n  if (!user) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full\">\r\n        <Card className=\"p-6 text-center\">\r\n          <MessageSquare className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\r\n          <h3 className=\"text-lg font-semibold mb-2\">Sign in to start chatting</h3>\r\n          <p className=\"text-muted-foreground\">You need to be signed in to access the AI chat.</p>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={cn(\r\n      'flex h-screen bg-background',\r\n      isFullscreen && 'fixed inset-0 z-50',\r\n      className\r\n    )}>\r\n      {/* Chat Area */}\r\n      <div className=\"flex flex-col flex-1 min-w-0\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-4 border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <MessageSquare className=\"w-5 h-5\" />\r\n            <div>\r\n              <h1 className=\"font-semibold\">\r\n                {session?.title || 'New Chat'}\r\n              </h1>\r\n              {currentPhase && (\r\n                <Badge variant=\"secondary\" className=\"text-xs\">\r\n                  {currentPhase}\r\n                </Badge>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-2\">\r\n            {session?.agentMode && (\r\n              <Badge variant=\"outline\">\r\n                {session.agentMode}\r\n              </Badge>\r\n            )}\r\n            \r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setShowFileExplorer(!showFileExplorer)}\r\n            >\r\n              {showFileExplorer ? <PanelRight /> : <PanelLeft />}\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={() => setIsFullscreen(!isFullscreen)}\r\n            >\r\n              {isFullscreen ? <Minimize2 /> : <Maximize2 />}\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={handleExportChat}\r\n              disabled={!session?.messages.length}\r\n            >\r\n              <Download className=\"w-4 h-4\" />\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"ghost\"\r\n              size=\"sm\"\r\n              onClick={clearChat}\r\n              disabled={!session?.messages.length}\r\n            >\r\n              <Trash2 className=\"w-4 h-4\" />\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Messages Area */}\r\n        <div \r\n          ref={chatContainerRef}\r\n          className=\"flex-1 overflow-auto p-4 space-y-4\"\r\n        >\r\n          <AnimatePresence>\r\n            {session?.messages.map((message) => (\r\n              <motion.div\r\n                key={message.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                {message.type === 'user' && (\r\n                  <UserMessage\r\n                    content={message.content}\r\n                    timestamp={message.timestamp}\r\n                  />\r\n                )}\r\n                \r\n                {message.type === 'ai' && (\r\n                  <AIMessage\r\n                    content={message.content}\r\n                    timestamp={message.timestamp}\r\n                    isStreaming={message.id === streamingMessageId}\r\n                    {...(message.phase && { phase: message.phase })}\r\n                    {...(message.model && { model: message.model })}\r\n                  />\r\n                )}\r\n                \r\n                {message.type === 'system' && (\r\n                  <SystemMessage\r\n                    content={message.content}\r\n                    timestamp={message.timestamp}\r\n                    type={message.content.toLowerCase().includes('error') ? 'error' : 'info'}\r\n                  />\r\n                )}\r\n              </motion.div>\r\n            ))}\r\n          </AnimatePresence>\r\n          \r\n          {/* Error Display */}\r\n          {error && (\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"p-4 bg-red-50 border border-red-200 rounded-lg\"\r\n            >\r\n              <p className=\"text-red-800 text-sm\">{error}</p>\r\n            </motion.div>\r\n          )}\r\n          \r\n          {/* Empty State */}\r\n          {!session?.messages.length && !isGenerating && (\r\n            <div className=\"flex flex-col items-center justify-center h-full text-center\">\r\n              <MessageSquare className=\"w-16 h-16 text-muted-foreground mb-4\" />\r\n              <h3 className=\"text-xl font-semibold mb-2\">Welcome to Stich AI</h3>\r\n              <p className=\"text-muted-foreground mb-6 max-w-md\">\r\n                Describe what you want to build and I'll help you create it. \r\n                I can generate code, suggest architectures, and guide you through implementation.\r\n              </p>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 max-w-lg\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => handleSendMessage(\"Create a React todo app with TypeScript\")}\r\n                  className=\"text-left justify-start\"\r\n                >\r\n                  🚀 Create a React todo app\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => handleSendMessage(\"Build a REST API with authentication\")}\r\n                  className=\"text-left justify-start\"\r\n                >\r\n                  🔐 Build a REST API\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => handleSendMessage(\"Design a responsive landing page\")}\r\n                  className=\"text-left justify-start\"\r\n                >\r\n                  🎨 Design a landing page\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => handleSendMessage(\"Create a database schema for an e-commerce app\")}\r\n                  className=\"text-left justify-start\"\r\n                >\r\n                  📊 Design a database\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Chat Input */}\r\n        <ChatInput\r\n          onSendMessage={handleSendMessage}\r\n          isGenerating={isGenerating}\r\n          onStopGeneration={stopGeneration}\r\n          disabled={!user}\r\n        />\r\n      </div>\r\n\r\n      {/* Right Sidebar - Files & Blueprints */}\r\n      <AnimatePresence>\r\n        {showFileExplorer && (\r\n          <motion.div\r\n            initial={{ width: 0, opacity: 0 }}\r\n            animate={{ width: 350, opacity: 1 }}\r\n            exit={{ width: 0, opacity: 0 }}\r\n            transition={{ duration: 0.3 }}\r\n            className=\"border-l bg-muted/30\"\r\n          >\r\n            <Tabs defaultValue=\"files\" className=\"h-full flex flex-col\">\r\n              <TabsList className=\"grid w-full grid-cols-4 mx-4 mt-4\">\r\n                <TabsTrigger value=\"files\" className=\"text-sm\">Files</TabsTrigger>\r\n                <TabsTrigger value=\"blueprint\" className=\"text-sm\">\r\n                  <Layers className=\"w-4 h-4 mr-1\" />\r\n                  Blueprint\r\n                </TabsTrigger>\r\n                <TabsTrigger value=\"phases\" className=\"text-sm\">\r\n                  <Clock className=\"w-4 h-4 mr-1\" />\r\n                  Phases\r\n                </TabsTrigger>\r\n                <TabsTrigger value=\"debug\" className=\"text-sm\">\r\n                  <Bug className=\"w-4 h-4 mr-1\" />\r\n                  Debug\r\n                </TabsTrigger>\r\n              </TabsList>\r\n              \r\n              <TabsContent value=\"files\" className=\"flex-1 m-0\">\r\n                <EnhancedFileManager\r\n                  files={convertToEnhancedFileNodes(session?.files || [])}\r\n                  onFileSelect={handleFileSelect}\r\n                  onFileDownload={handleFileDownload}\r\n                  {...(selectedFile?.id && { selectedFileId: selectedFile.id })}\r\n                  className=\"h-full\"\r\n                  readOnly={false}\r\n                />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"blueprint\" className=\"flex-1 m-0\">\r\n                <BlueprintIntegration\r\n                  onBlueprintGenerate={handleBlueprintGenerate}\r\n                  onCodeGenerate={handleCodeGenerate}\r\n                  onBlueprintShare={handleBlueprintShare}\r\n                  className=\"h-full\"\r\n                />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"phases\" className=\"flex-1 m-0 p-4\">\r\n                <PhaseTimeline\r\n                  phases={mockPhases}\r\n                  {...(isGenerating && { currentPhaseId: 'planning' })}\r\n                  {...(isGenerating && { currentStepId: 'select-technologies' })}\r\n                  compact={true}\r\n                  className=\"h-full\"\r\n                />\r\n              </TabsContent>\r\n              \r\n              <TabsContent value=\"debug\" className=\"flex-1 m-0 p-4\">\r\n                <DebugPanel\r\n                  isActive={true}\r\n                  {...(session?.id && { sessionId: session.id })}\r\n                  className=\"h-full\"\r\n                />\r\n              </TabsContent>\r\n            </Tabs>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n}","import { Clock, CheckCircle, Play, AlertCircle } from 'lucide-react';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { Progress } from '@/components/ui/progress';\r\nimport { cn } from '@/lib/utils';\r\nimport type { GenerationPhase } from './PhaseTimeline';\r\n\r\ninterface CompactPhaseDisplayProps {\r\n  phases: GenerationPhase[];\r\n  currentPhase?: string;\r\n  className?: string;\r\n}\r\n\r\nexport function CompactPhaseDisplay({ phases, currentPhase, className }: CompactPhaseDisplayProps) {\r\n  if (phases.length === 0) {\r\n    return (\r\n      <div className={cn('text-center text-muted-foreground p-2', className)}>\r\n        <Clock className=\"w-4 h-4 mx-auto mb-1\" />\r\n        <p className=\"text-xs\">Ready to generate</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const currentPhaseData = phases.find(p => p.id === currentPhase);\r\n  const completedPhases = phases.filter(p => p.status === 'completed').length;\r\n  const totalSteps = phases.reduce((acc, phase) => acc + phase.steps.length, 0);\r\n  const completedSteps = phases.reduce((acc, phase) => \r\n    acc + phase.steps.filter(step => step.status === 'completed').length, 0\r\n  );\r\n  const progress = totalSteps > 0 ? (completedSteps / totalSteps) * 100 : 0;\r\n\r\n  return (\r\n    <div className={cn('space-y-2', className)}>\r\n      <div className=\"flex items-center justify-between text-xs\">\r\n        <span className=\"text-muted-foreground\">\r\n          Phase {completedPhases + 1}/{phases.length}\r\n        </span>\r\n        <Badge variant=\"secondary\" className=\"text-xs\">\r\n          {completedSteps}/{totalSteps} steps\r\n        </Badge>\r\n      </div>\r\n      \r\n      <Progress value={progress} className=\"h-1.5\" />\r\n      \r\n      {currentPhaseData && (\r\n        <div className=\"flex items-center gap-2\">\r\n          <div className=\"flex items-center gap-1\">\r\n            {currentPhaseData.status === 'running' && <Play className=\"w-3 h-3 text-blue-500\" />}\r\n            {currentPhaseData.status === 'completed' && <CheckCircle className=\"w-3 h-3 text-green-500\" />}\r\n            {currentPhaseData.status === 'error' && <AlertCircle className=\"w-3 h-3 text-red-500\" />}\r\n            {currentPhaseData.status === 'pending' && <Clock className=\"w-3 h-3 text-muted-foreground\" />}\r\n          </div>\r\n          <span className=\"text-xs font-medium truncate\">\r\n            {currentPhaseData.name}\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Mock data generator for testing\r\nexport function createMockPhases(): GenerationPhase[] {\r\n  return [\r\n    {\r\n      id: 'analysis',\r\n      name: 'Requirements Analysis',\r\n      description: 'Analyzing user requirements and project scope',\r\n      status: 'completed',\r\n      startTime: new Date(Date.now() - 5000),\r\n      endTime: new Date(Date.now() - 3000),\r\n      steps: [\r\n        {\r\n          id: 'parse-input',\r\n          name: 'Parse Input',\r\n          description: 'Processing user input and extracting requirements',\r\n          status: 'completed',\r\n          icon: 'brain',\r\n          startTime: new Date(Date.now() - 5000),\r\n          endTime: new Date(Date.now() - 4000),\r\n          output: 'Successfully parsed user requirements'\r\n        },\r\n        {\r\n          id: 'analyze-scope',\r\n          name: 'Analyze Scope',\r\n          description: 'Determining project scope and complexity',\r\n          status: 'completed',\r\n          icon: 'brain',\r\n          startTime: new Date(Date.now() - 4000),\r\n          endTime: new Date(Date.now() - 3000),\r\n          output: 'Project scope determined: Medium complexity web application'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'planning',\r\n      name: 'Architecture Planning',\r\n      description: 'Creating system architecture and component design',\r\n      status: 'running',\r\n      startTime: new Date(Date.now() - 3000),\r\n      steps: [\r\n        {\r\n          id: 'design-architecture',\r\n          name: 'Design Architecture',\r\n          description: 'Creating overall system architecture',\r\n          status: 'completed',\r\n          icon: 'package',\r\n          startTime: new Date(Date.now() - 3000),\r\n          endTime: new Date(Date.now() - 2000),\r\n          output: 'Architecture designed with microservices pattern'\r\n        },\r\n        {\r\n          id: 'select-technologies',\r\n          name: 'Select Technologies',\r\n          description: 'Choosing appropriate technology stack',\r\n          status: 'running',\r\n          icon: 'zap',\r\n          startTime: new Date(Date.now() - 2000),\r\n          progress: 75\r\n        },\r\n        {\r\n          id: 'plan-components',\r\n          name: 'Plan Components',\r\n          description: 'Planning individual component structure',\r\n          status: 'pending',\r\n          icon: 'package'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'generation',\r\n      name: 'Code Generation',\r\n      description: 'Generating application code and files',\r\n      status: 'pending',\r\n      steps: [\r\n        {\r\n          id: 'generate-backend',\r\n          name: 'Generate Backend',\r\n          description: 'Creating backend API and services',\r\n          status: 'pending',\r\n          icon: 'code'\r\n        },\r\n        {\r\n          id: 'generate-frontend',\r\n          name: 'Generate Frontend',\r\n          description: 'Creating user interface components',\r\n          status: 'pending',\r\n          icon: 'code'\r\n        },\r\n        {\r\n          id: 'generate-database',\r\n          name: 'Generate Database',\r\n          description: 'Creating database schema and migrations',\r\n          status: 'pending',\r\n          icon: 'database'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 'deployment',\r\n      name: 'Deployment Setup',\r\n      description: 'Setting up deployment configuration',\r\n      status: 'pending',\r\n      steps: [\r\n        {\r\n          id: 'create-config',\r\n          name: 'Create Config',\r\n          description: 'Creating deployment configuration files',\r\n          status: 'pending',\r\n          icon: 'file'\r\n        },\r\n        {\r\n          id: 'setup-ci-cd',\r\n          name: 'Setup CI/CD',\r\n          description: 'Configuring continuous integration',\r\n          status: 'pending',\r\n          icon: 'rocket'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n}","import { useState, useCallback, useRef, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '@/contexts/AuthContext';\r\nimport { FileNode } from '@/components/chat/FileExplorer';\r\n\r\nexport interface ChatMessage {\r\n  id: string;\r\n  type: 'user' | 'ai' | 'system';\r\n  content: string;\r\n  timestamp: Date;\r\n  isStreaming?: boolean;\r\n  phase?: string;\r\n  model?: string;\r\n  files?: FileNode[];\r\n}\r\n\r\nexport interface ChatSession {\r\n  id: string;\r\n  title: string;\r\n  messages: ChatMessage[];\r\n  files: FileNode[];\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  model?: string;\r\n  agentMode?: 'deterministic' | 'smart';\r\n}\r\n\r\ninterface UseChatOptions {\r\n  onFileGenerated?: (file: FileNode) => void;\r\n  onError?: (error: string) => void;\r\n}\r\n\r\nexport function useChat(options: UseChatOptions = {}) {\r\n  const { chatId } = useParams();\r\n  const navigate = useNavigate();\r\n  const { user } = useAuth();\r\n  \r\n  const [session, setSession] = useState<ChatSession | null>(null);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [currentPhase, setCurrentPhase] = useState<string>('');\r\n  const [streamingMessageId, setStreamingMessageId] = useState<string | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const abortControllerRef = useRef<AbortController | null>(null);\r\n\r\n  // Load existing chat session\r\n  useEffect(() => {\r\n    if (chatId && user) {\r\n      loadChatSession(chatId);\r\n    } else if (!chatId) {\r\n      // Create new session\r\n      createNewSession();\r\n    }\r\n  }, [chatId, user]);\r\n\r\n  const loadChatSession = async (sessionId: string) => {\r\n    try {\r\n      const response = await fetch(`/api/chat/${sessionId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${await user?.getIdToken()}`,\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setSession(data);\r\n      } else {\r\n        setError('Failed to load chat session');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error loading chat session');\r\n      console.error('Error loading chat session:', err);\r\n    }\r\n  };\r\n\r\n  const createNewSession = () => {\r\n    const newSession: ChatSession = {\r\n      id: generateId(),\r\n      title: 'New Chat',\r\n      messages: [],\r\n      files: [],\r\n      createdAt: new Date(),\r\n      updatedAt: new Date(),\r\n      agentMode: 'deterministic'\r\n    };\r\n    setSession(newSession);\r\n  };\r\n\r\n  const generateId = () => {\r\n    return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n  };\r\n\r\n  const sendMessage = useCallback(async (content: string, attachedFiles?: File[]) => {\r\n    if (!session || !user) return;\r\n\r\n    const userMessage: ChatMessage = {\r\n      id: generateId(),\r\n      type: 'user',\r\n      content,\r\n      timestamp: new Date(),\r\n    };\r\n\r\n    // Add user message to session\r\n    setSession(prev => prev ? {\r\n      ...prev,\r\n      messages: [...prev.messages, userMessage],\r\n      updatedAt: new Date()\r\n    } : null);\r\n\r\n    // Start AI generation\r\n    setIsGenerating(true);\r\n    setError(null);\r\n    \r\n    const aiMessageId = generateId();\r\n    setStreamingMessageId(aiMessageId);\r\n\r\n    try {\r\n      // Create abort controller for this request\r\n      abortControllerRef.current = new AbortController();\r\n\r\n      const formData = new FormData();\r\n      formData.append('message', content);\r\n      formData.append('sessionId', session.id);\r\n      formData.append('agentMode', session.agentMode || 'deterministic');\r\n      \r\n      if (attachedFiles) {\r\n        attachedFiles.forEach((file, index) => {\r\n          formData.append(`file_${index}`, file);\r\n        });\r\n      }\r\n\r\n      const response = await fetch('/api/ai/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Authorization': `Bearer ${await user.getIdToken()}`,\r\n        },\r\n        body: formData,\r\n        signal: abortControllerRef.current.signal,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\r\n      }\r\n\r\n      const reader = response.body?.getReader();\r\n      if (!reader) {\r\n        throw new Error('No response body');\r\n      }\r\n\r\n      let aiContent = '';\r\n      const decoder = new TextDecoder();\r\n\r\n      while (true) {\r\n        const { done, value } = await reader.read();\r\n        if (done) break;\r\n\r\n        const chunk = decoder.decode(value);\r\n        const lines = chunk.split('\\n');\r\n\r\n        for (const line of lines) {\r\n          if (line.startsWith('data: ')) {\r\n            const data = line.slice(6);\r\n            \r\n            if (data === '[DONE]') {\r\n              setIsGenerating(false);\r\n              setStreamingMessageId(null);\r\n              setCurrentPhase('');\r\n              break;\r\n            }\r\n\r\n            try {\r\n              const parsed = JSON.parse(data);\r\n              \r\n              if (parsed.type === 'content') {\r\n                aiContent += parsed.content;\r\n                updateStreamingMessage(aiMessageId, aiContent, true);\r\n              } else if (parsed.type === 'phase') {\r\n                setCurrentPhase(parsed.phase);\r\n              } else if (parsed.type === 'file') {\r\n                const newFile: FileNode = {\r\n                  id: generateId(),\r\n                  name: parsed.name,\r\n                  type: 'file',\r\n                  content: parsed.content,\r\n                  path: parsed.path,\r\n                  size: parsed.content?.length || 0,\r\n                  modified: new Date(),\r\n                };\r\n                \r\n                addFileToSession(newFile);\r\n                options.onFileGenerated?.(newFile);\r\n              } else if (parsed.type === 'error') {\r\n                throw new Error(parsed.message);\r\n              }\r\n            } catch (parseError) {\r\n              console.warn('Failed to parse SSE data:', parseError);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Finalize the AI message\r\n      updateStreamingMessage(aiMessageId, aiContent, false);\r\n\r\n      // Update session title if this is the first message\r\n      if (session.messages.length === 1) {\r\n        const title = content.length > 50 ? content.substring(0, 50) + '...' : content;\r\n        setSession(prev => prev ? { ...prev, title } : null);\r\n        \r\n        // Update URL to include chat ID\r\n        if (!chatId) {\r\n          navigate(`/chat/${session.id}`, { replace: true });\r\n        }\r\n      }\r\n\r\n    } catch (err: any) {\r\n      if (err.name === 'AbortError') {\r\n        console.log('Request aborted');\r\n      } else {\r\n        const errorMessage = err.message || 'Failed to generate response';\r\n        setError(errorMessage);\r\n        options.onError?.(errorMessage);\r\n        \r\n        // Add error message to chat\r\n        const errorMsg: ChatMessage = {\r\n          id: generateId(),\r\n          type: 'system',\r\n          content: `Error: ${errorMessage}`,\r\n          timestamp: new Date(),\r\n        };\r\n        \r\n        setSession(prev => prev ? {\r\n          ...prev,\r\n          messages: [...prev.messages, errorMsg]\r\n        } : null);\r\n      }\r\n    } finally {\r\n      setIsGenerating(false);\r\n      setStreamingMessageId(null);\r\n      setCurrentPhase('');\r\n      abortControllerRef.current = null;\r\n    }\r\n  }, [session, user, chatId, navigate, options]);\r\n\r\n  const updateStreamingMessage = (messageId: string, content: string, isStreaming: boolean) => {\r\n    setSession(prev => {\r\n      if (!prev) return null;\r\n\r\n      const existingMessageIndex = prev.messages.findIndex(m => m.id === messageId);\r\n      \r\n      const message: ChatMessage = {\r\n        id: messageId,\r\n        type: 'ai',\r\n        content,\r\n        timestamp: new Date(),\r\n        isStreaming,\r\n        ...(currentPhase && { phase: currentPhase }),\r\n        ...(session?.model && { model: session.model }),\r\n      };\r\n\r\n      if (existingMessageIndex >= 0) {\r\n        // Update existing message\r\n        const newMessages = [...prev.messages];\r\n        newMessages[existingMessageIndex] = message;\r\n        return { ...prev, messages: newMessages };\r\n      } else {\r\n        // Add new message\r\n        return {\r\n          ...prev,\r\n          messages: [...prev.messages, message]\r\n        };\r\n      }\r\n    });\r\n  };\r\n\r\n  const addFileToSession = (file: FileNode) => {\r\n    setSession(prev => prev ? {\r\n      ...prev,\r\n      files: [...prev.files, file],\r\n      updatedAt: new Date()\r\n    } : null);\r\n  };\r\n\r\n  const stopGeneration = useCallback(() => {\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n    }\r\n  }, []);\r\n\r\n  const clearChat = useCallback(() => {\r\n    setSession(prev => prev ? {\r\n      ...prev,\r\n      messages: [],\r\n      files: [],\r\n      updatedAt: new Date()\r\n    } : null);\r\n    setError(null);\r\n  }, []);\r\n\r\n  const deleteMessage = useCallback((messageId: string) => {\r\n    setSession(prev => prev ? {\r\n      ...prev,\r\n      messages: prev.messages.filter(m => m.id !== messageId),\r\n      updatedAt: new Date()\r\n    } : null);\r\n  }, []);\r\n\r\n  return {\r\n    session,\r\n    isGenerating,\r\n    currentPhase,\r\n    streamingMessageId,\r\n    error,\r\n    sendMessage,\r\n    stopGeneration,\r\n    clearChat,\r\n    deleteMessage,\r\n  };\r\n}","import AdvancedChat from '@/components/chat/AdvancedChat';\r\n\r\nexport default function ChatPage() {\r\n  return <AdvancedChat />;\r\n}"],"names":["ok","unreachable","nameRe","nameReJsx","emptyOptions","name","options","jsx","test","re","empty","value","replace","Schema","constructor","property","normal","space","this","merge","definitions","definition","Object","assign","normalize","toLowerCase","prototype","Info","attribute","booleanish","boolean","commaOrSpaceSeparated","commaSeparated","defined","mustUseProperty","number","overloadedBoolean","spaceSeparated","powers","increment","checks","keys","types","DefinedInfo","mask","index","super","mark","length","check","values","key","create","properties","normals","entries","info","transform","attributes","includes","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","_","slice","caseSensitiveTransform","caseInsensitiveTransform","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","className","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootClonable","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","style","tabIndex","target","title","translate","type","typeMustMatch","useMap","width","wrap","writingSuggestions","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","end","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlns","xmlnsxlink","xmlnsXLink","xml","xmlBase","xmlLang","xmlSpace","hastToReact","cap","dash","valid","kebab","$0","camelcase","charAt","toUpperCase","htmlBase","svgBase","__importDefault","mod","__esModule","defineProperty","cjs","iterator","styleObject","declarations","inline_style_parser_1","hasIterator","forEach","declaration","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","str","inlineStyleParser","TypeError","lineno","column","updatePosition","lines","match","i","lastIndexOf","position","line","node","Position","whitespace","source","error","msg","err","Error","reason","filename","silent","m","exec","comments","c","comment","push","pos","prop","val","ret","decl","decls","require$$0","utilities","camelCase","CUSTOM_PROPERTY_REGEX","HYPHEN_REGEX","NO_HYPHEN_REGEX","VENDOR_PREFIX_REGEX","MS_VENDOR_PREFIX_REGEX","capitalize","character","trimHyphen","concat","skipCamelCase","reactCompat","style_to_object_1","utilities_1","require$$1","StyleToJS","output","pointEnd","point","pointStart","stringifyPosition","VFileMessage","causeOrReason","optionsOrParentOrPlace","legacyCause","place","ancestors","cause","message","ruleId","indexOf","parent","fatal","file","stack","actual","expected","note","url","own","hasOwnProperty","emptyMap","Map","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","filePath","development","jsxDEV","props","isStaticChildren","Array","isArray","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","schema","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","call","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","element","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","assert","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Type","rest","dashes","find","Number","isNaN","settings","join","padRight","padLeft","commas","styleToJs","parseStyle","String","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","split","isIdentifierName","computed","Boolean","optional","toDash","urlAttributes","icon","includeImageAlt","includeHtml","all","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","charCodeAt","splice","remove","items","parameters","chunkStart","unshift","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","decodeNumericCharacterReference","base","parseInt","fromCodePoint","normalizeIdentifier","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","normalizeUri","skip","next","encodeURIComponent","factorySpace","effects","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","_tokenizer","flowContinue","writeToChild","endOfFile","stream","sliceStream","defineSkip","write","seen","entry","nok","disable","null","classifyCharacter","resolveAll","context","called","resolve","attention","group","openingSequence","closingSequence","use","nextEvents","_close","_open","sliceSerialize","movePoint","insideSpan","attentionMarkers","marker","inside","after","close","_bufferIndex","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","blankLine","partial","blockQuote","contBefore","_container","characterEscape","numeric","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","tail","sequenceOpen","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","codeIndented","afterPrefix","atBreak","furtherStart","codeText","tailExitIndex","headEnterIndex","between","SpliceBuffer","initial","RangeError","shift","setCursor","stop","reverse","deleteCount","Math","trunc","removed","chunkedPush","pushMany","unshiftMany","n","subtokenize","eventsArray","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","eventIndex","startPosition","startPositions","tokenizer","_contentTypeTextTrailing","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","chunkInside","contentEnd","continuationConstruct","contentContinue","prefixed","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","hardBreakEscape","headingAtx","sequenceFurther","htmlBlockNames","htmlRawNames","htmlFlow","resolveTo","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","htmlText","returnState","instruction","tagOpen","commentEnd","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelEnd","newEvents","_inactive","_balanced","labelStart","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","labelStartLink","lineEnding","thematicBreak","sequence","furtherBlankLines","initialBlankLine","notInCurrentItem","indentConstruct","initialSize","atMarker","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","setextUnderline","heading","paragraph","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","field","resolveAllLineSuffixes","notText","extraResolver","chunks","tabs","bufferIndex","chunk","_index","resolveText","createTokenizer","initialize","columnStart","resolveAllConstructs","constructFactory","construct","addResult","onsuccessfulcheck","accountForPotentialSkip","fields","expandTabs","atTab","serializeChunks","main","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","sliceChunks","chunkIndex","go","restore","onreturn","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","parse","extensions","defaultConstructs","search","characterEscapeOrReference","decode","$1","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcharacterreference","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","toString","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","endPosition","TextDecoder","lastIndex","ceil","preprocess","combined","remarkParse","doc","revert","subtype","suffix","contents","listItemLoose","trimLines","last","trimLine","handlers","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","env","globalThis","deserialize","serialized","$","out","unpair","arr","Date","flags","RegExp","BigInt","Uint8Array","DataView","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","toISOString","serializer","structuredClone$1","structuredClone","any","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","visitParents","visitor","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","testOrVisitor","visitorOrReverse","maybeReverse","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","defaultHandlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","setProperty","enumerable","configurable","newValue","writable","getProperty","extend","copy","copyIsArray","clone","arguments","deep","getPrototypeOf","Symbol","toStringTag","trough","fns","pipeline","middlewareIndex","callback","middleware","wrapped","fnExpectsCallback","done","then","middelware","minpath","basename","extname","assertPath","seenNonSlash","firstNonSlashEnd","extnameIndex","dirname","unmatchedSlash","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","sep","JSON","stringify","minproc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","setPrototypeOf","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","isPlainObj","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","processor","rehypePlugins","remarkPlugins","remarkRehypeOptions","createProcessor","createFile","allowedElements","allowElement","disallowedElements","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","deprecation","post","colon","questionMark","numberSign","millisecondsInWeek","constructFromSymbol","for","constructFrom","date","toDate","defaultOptions","getDefaultOptions","startOfWeek","weekStartsOn","locale","_date","day","getDay","diff","setDate","getDate","setHours","startOfISOWeek","getISOWeekYear","year","getFullYear","fourthOfJanuaryOfNextYear","setFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getTimezoneOffsetInMilliseconds","utcDate","UTC","getMonth","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","startOfDay","differenceInCalendarDays","laterDate","earlierDate","laterDate_","earlierDate_","dates","bind","normalizeDates","laterStartOfDay","earlierStartOfDay","laterTimestamp","earlierTimestamp","round","isValid","formatDistanceLocale","lessThanXSeconds","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","defaultWidth","formats","formatLong","full","long","medium","short","time","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","valuesArray","formattingValues","defaultFormattingWidth","argumentCallback","buildMatchFn","matchPattern","matchPatterns","defaultMatchWidth","matchResult","matchedString","parsePatterns","defaultParseWidth","array","predicate","findIndex","valueCallback","enUS","formatDistance","tokenValue","addSuffix","comparison","formatRelative","_baseDate","_options","localize","ordinalNumber","dirtyNumber","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","firstWeekContainsDate","getDayOfYear","date_","startOfYear","getISOWeek","fourthOfJanuary","startOfISOWeekYear","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","lightFormatters","signedYear","M","a","dayPeriodEnumValue","h","H","s","S","numberOfDigits","milliseconds","pow","dayPeriodEnum","formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","isoDayOfWeek","b","hours","B","K","X","_localize","timezoneOffset","getTimezoneOffset","formatTimezoneWithOptionalMinutes","formatTimezone","O","formatTimezoneShort","t","T","delimiter","sign","absOffset","minutes","dateLongFormatter","timeLongFormatter","longFormatters","p","P","datePattern","timePattern","dateTimeFormat","dayOfYearTokenRE","weekYearTokenRE","throwTokens","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","formatStr","defaultLocale","originalDate","parts","substring","firstCharacter","longFormatter","isToken","cleanEscapedString","preprocessor","formatterOptions","isProtectedWeekYearToken","isProtectedDayOfYearToken","input","_message","subject","warnOrThrowProtectedError","formatter","matched","UserMessage","memo","timestamp","cn","User","ReactMarkdown","displayName","AIMessage","isStreaming","model","SystemMessage","Icon","Clock","warning","success","Textarea","React.forwardRef","ref","ChatInput","onSendMessage","isGenerating","onStopGeneration","setMessage","useState","attachedFiles","setAttachedFiles","textareaRef","useRef","fileInputRef","handleSend","useCallback","handleKeyDown","shiftKey","preventDefault","handleFileUpload","files","prev","removeFile","adjustTextareaHeight","textarea","scrollHeight","Paperclip","Button","variant","click","Square","Loader2","Send","EnhancedFileManager","onFileSelect","onFileCreate","onFileDelete","onFileRename","onFileSave","onFileDownload","selectedFileId","expandedFolders","setExpandedFolders","searchTerm","setSearchTerm","editingFile","setEditingFile","fileContent","setFileContent","showCreateModal","setShowCreateModal","createParentId","setCreateParentId","createType","setCreateType","createName","setCreateName","renamingFile","setRenamingFile","renameValue","setRenameValue","fileVersions","setFileVersions","selectedVersionFile","setSelectedVersionFile","fileTree","fileMap","rootFiles","fileNode","parentId","buildFileTree","filterFiles","matchesSearch","hasMatchingChildren","filteredFiles","handleFileClick","folderId","newSet","handleCreateFile","handleRename","fileId","getFileIcon","FolderOpen","Folder","Code","Image","Archive","FileText","formatFileSize","bytes","floor","log","toFixed","renderFileNode","isSelected","isExpanded","isRenaming","paddingLeft","Input","Check","stopPropagation","Edit","Trash2","Download","History","Card","CardHeader","CardTitle","Badge","f","Plus","Search","CardContent","Tabs","defaultValue","TabsList","TabsTrigger","GitBranch","TabsContent","ScrollArea","newVersion","v","author","Save","sort","toLocaleString","nodeTypeConfig","frontend","Monitor","backend","Server","database","Database","api","Globe","service","Cloud","component","Package","custom","Settings","CanvasNode","onUpdate","onDelete","isEditing","setIsEditing","editTitle","setEditTitle","isDragging","setIsDragging","dragStart","setDragStart","handleMouseMove","clientX","clientY","handleMouseUp","useEffect","addEventListener","removeEventListener","handleSaveEdit","top","backgroundColor","Edit3","description","technologies","tech","BlueprintCanvas","connections","onNodeAdd","onNodeUpdate","onNodeDelete","onNodeSelect","selectedNodeId","canvasSize","draggedNodeType","setDraggedNodeType","connectionElements","useMemo","connection","sourceNode","sourceId","targetNode","targetId","sourceCenter","targetCenter","backgroundImage","backgroundSize","currentTarget","rect","getBoundingClientRect","newNode","updates","Layers","nodeTypeOptions","connectionTypeOptions","commonTechnologies","BlueprintProperties","selectedNode","onConnectionAdd","onConnectionDelete","newTech","setNewTech","newConnection","setNewConnection","handleUpdate","handleAddTechnology","currentTechs","nodeConnections","conn","availableTargets","some","Label","Select","onValueChange","SelectTrigger","SelectValue","SelectContent","option","SelectItem","handleRemoveTechnology","isOutgoing","otherNode","connectionType","connectionData","generateId","random","BlueprintEditor","blueprint","onSave","onExport","currentBlueprint","setCurrentBlueprint","createdAt","updatedAt","setSelectedNodeId","showProperties","setShowProperties","updateBlueprint","handleNodeAdd","nodeData","handleNodeUpdate","nodeId","handleNodeDelete","handleConnectionAdd","handleConnectionDelete","connectionId","handleNodeSelect","handleTitleSave","stats","nodesByType","reduce","acc","totalNodes","totalConnections","EyeOff","Eye","toLocaleTimeString","blueprintUtils","markdown","BlueprintIntegration","onBlueprintGenerate","onCodeGenerate","onBlueprintShare","setBlueprint","aiDescription","setAiDescription","setIsGenerating","activeTab","setActiveTab","handleAIGenerate","setTimeout","generatedBlueprint","newBlueprint","handleBlueprintSave","updatedBlueprint","handleBlueprintExport","blueprintToExport","blob","Blob","createObjectURL","appendChild","removeChild","revokeObjectURL","handleGenerateCode","handleShareBlueprint","Sparkles","Wand2","Share","stepIcons","brain","Brain","package","rocket","Rocket","zap","Zap","statusColors","pending","running","completed","skipped","paused","statusBgColors","formatDuration","ms","getStatusIcon","status","Play","CheckCircle","XCircle","AlertCircle","Pause","PhaseStepItem","isActive","onRetry","StatusIcon","StepIcon","duration","endTime","startTime","progress","Progress","RotateCcw","PhaseCard","currentStepId","onStart","onStepRetry","showControls","completedSteps","steps","totalSteps","actualDuration","PhaseTimeline","phases","currentPhaseId","onPhaseStart","onPhasePause","onPhaseRetry","totalPhases","completedPhases","overallProgress","stepProgress","stepId","DebugPanel","sessionId","onToggleRecording","isRecording","setIsRecording","selectedLevel","setSelectedLevel","logs","setLogs","errors","setErrors","metrics","setMetrics","generateMockLogs","generateMockErrors","generateMockMetrics","interval","setInterval","generateRandomLog","generateRandomMetric","clearInterval","filteredLogs","matchesLevel","level","getLogIcon","AlertTriangle","Bug","getMetricIcon","category","Wifi","Activity","formatTimestamp","hour12","hour","minute","second","newRecording","debugData","resolved","details","severity","categoryMetrics","latest","average","sum","metric","sources","levels","requestId","userId","categories","names","response_time","token_usage","memory","network","units","AdvancedChat","user","useAuth","showFileExplorer","setShowFileExplorer","selectedFile","setSelectedFile","isFullscreen","setIsFullscreen","mockPhases","chatContainerRef","messagesEndRef","session","currentPhase","streamingMessageId","sendMessage","stopGeneration","clearChat","chatId","useParams","navigate","useNavigate","setSession","setCurrentPhase","setStreamingMessageId","setError","abortControllerRef","loadChatSession","createNewSession","response","fetch","Authorization","getIdToken","newSession","agentMode","substr","userMessage","aiMessageId","AbortController","formData","FormData","append","signal","statusText","reader","getReader","aiContent","decoder","read","startsWith","parsed","updateStreamingMessage","newFile","modified","addFileToSession","onFileGenerated","parseError","errorMessage","errorMsg","messageId","existingMessageIndex","newMessages","abort","deleteMessage","useChat","scrollIntoView","behavior","handleSendMessage","MessageSquare","PanelRight","PanelLeft","Minimize2","Maximize2","chatData","AnimatePresence","motion","div","animate","transition","modifiedAt","isReadonly","navigator","clipboard","writeText","ChatPage"],"mappings":"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AMgnB,GAAU,CAAC,OAAQz2B,EAASy2B,MAEjK,OAAO/B,CACT,EAvCEtB,SA8CF,SAA4BN,EAAS77B,EAAIm/B,GACvC,IAAI/qB,EAAO,EACX,OAYA,SAAeqC,GAGb,OADAolB,EAAQG,MAAM,cAchB,SAAgBvlB,GAEd,OADAolB,EAAQG,MAAM,sBACPqG,EAAa5rB,EACtB,CAhBSyjB,CAAOzjB,EAChB,EA2BA,SAAS4rB,EAAa5rB,GACpB,OAAa,KAATA,GAAerC,IAAS,GAC1BynB,EAAQI,QAAQxlB,GACT4rB,GAII,OAAT5rB,GAAiBykB,GAA0BzkB,IAC7ColB,EAAQK,KAAK,sBACN8G,EAAQvsB,IAEV0oB,EAAI1oB,EACb,CAYA,SAASusB,EAAQvsB,GACf,OAAa,KAATA,GACFolB,EAAQG,MAAM,sBACP6L,EAAgBpxB,IAEZ,OAATA,GAAiBwkB,GAAmBxkB,IACtColB,EAAQK,KAAK,cAINl8B,EAAGyW,IAER0kB,GAAc1kB,GACTmlB,GAAaC,EAASmH,EAAS,aAA/BpH,CAA6CnlB,IAKtDolB,EAAQG,MAAM,kBACP3yB,EAAKoN,GACd,CAcA,SAASoxB,EAAgBpxB,GACvB,OAAa,KAATA,GACFolB,EAAQI,QAAQxlB,GACToxB,IAEThM,EAAQK,KAAK,sBACN8G,EAAQvsB,GACjB,CAYA,SAASpN,EAAKoN,GACZ,OAAa,OAATA,GAA0B,KAATA,GAAeykB,GAA0BzkB,IAC5DolB,EAAQK,KAAK,kBACN8G,EAAQvsB,KAEjBolB,EAAQI,QAAQxlB,GACTpN,EACT,CACF,GCnLO,MAAMy+B,GAAiB,CAC5B,UACA,UACA,QACA,OACA,WACA,aACA,OACA,UACA,SACA,MACA,WACA,KACA,UACA,SACA,MACA,MACA,KACA,KACA,WACA,aACA,SACA,SACA,OACA,QACA,WACA,KACA,KACA,KACA,KACA,KACA,KACA,OACA,SACA,KACA,OACA,SACA,SACA,KACA,OACA,OACA,OACA,WACA,MACA,WACA,KACA,WACA,SACA,IACA,QACA,SACA,UACA,UACA,QACA,QACA,KACA,QACA,KACA,QA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168]}