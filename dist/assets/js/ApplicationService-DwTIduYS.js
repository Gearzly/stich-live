var t=Object.defineProperty,e=(e,r,i)=>((e,r,i)=>r in e?t(e,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[r]=i)(e,"symbol"!=typeof r?r+"":r,i);import{w as r,v as i,l as a}from"./firebase-rW0Qch21.js";import{f as s}from"./index-DEqFfg-I.js";class n extends s{constructor(){super(...arguments),e(this,"COLLECTION_NAME","applications")}async createApplication(t){try{const e={...t,status:"draft",isPublic:t.isPublic??!1,isFavorite:!1,tags:t.tags??[],analytics:{views:0,likes:0,forks:0,shares:0}};return await this.createDocument(this.COLLECTION_NAME,e)}catch(e){this.handleError(e,"createApplication")}}async getApplication(t){try{const e=await this.getDocument(this.COLLECTION_NAME,t);return e&&e.createdBy!==this.getCurrentUserId()&&await this.incrementAnalytics(t,"views"),e}catch(e){this.handleError(e,"getApplication")}}async updateApplication(t,e){try{const r=await this.getDocument(this.COLLECTION_NAME,t);if(!r)throw new Error("Application not found");const i=this.getCurrentUserId();if(r.createdBy!==i)throw new Error("Unauthorized: You can only update your own applications");await this.updateDocument(this.COLLECTION_NAME,t,e)}catch(r){this.handleError(r,"updateApplication")}}async deleteApplication(t){try{const e=await this.getDocument(this.COLLECTION_NAME,t);if(!e)throw new Error("Application not found");const r=this.getCurrentUserId();if(e.createdBy!==r)throw new Error("Unauthorized: You can only delete your own applications");await this.deleteDocument(this.COLLECTION_NAME,t)}catch(e){this.handleError(e,"deleteApplication")}}async getUserApplications(t){try{const e=t||this.getCurrentUserId();return await this.queryDocuments(this.COLLECTION_NAME,[r("createdBy","==",e),i("updatedAt","desc")])}catch(e){this.handleError(e,"getUserApplications")}}async searchApplications(t={}){try{const e=[];if(t.filters){const{category:i,framework:a,status:s,isPublic:n,createdBy:o}=t.filters;i&&e.push(r("category","==",i)),a&&e.push(r("framework","==",a)),s&&e.push(r("status","==",s)),void 0!==n&&e.push(r("isPublic","==",n)),o&&e.push(r("createdBy","==",o))}const s=t.sortBy||"updatedAt",n=t.sortOrder||"desc";e.push(i(s,n)),t.limit&&e.push(a(t.limit));let o=await this.queryDocuments(this.COLLECTION_NAME,e);if(t.searchTerm){const e=t.searchTerm.toLowerCase();o=o.filter(t=>t.name.toLowerCase().includes(e)||t.description.toLowerCase().includes(e)||t.tags.some(t=>t.toLowerCase().includes(e)))}return t.filters?.tags&&t.filters.tags.length>0&&(o=o.filter(e=>t.filters.tags.some(t=>e.tags.includes(t)))),o}catch(e){this.handleError(e,"searchApplications")}}async getPublicApplications(t=20){try{return await this.queryDocuments(this.COLLECTION_NAME,[r("isPublic","==",!0),r("status","==","deployed"),i("updatedAt","desc"),a(t)])}catch(e){this.handleError(e,"getPublicApplications")}}async getTrendingApplications(t=10){try{return await this.queryDocuments(this.COLLECTION_NAME,[r("isPublic","==",!0),r("status","==","deployed"),i("analytics.views","desc"),a(t)])}catch(e){this.handleError(e,"getTrendingApplications")}}async toggleFavorite(t){try{const e=await this.getDocument(this.COLLECTION_NAME,t);if(!e)throw new Error("Application not found");const r=this.getCurrentUserId();if(e.createdBy!==r)throw new Error("Unauthorized: You can only favorite your own applications");const i=!e.isFavorite;return await this.updateDocument(this.COLLECTION_NAME,t,{isFavorite:i}),i}catch(e){this.handleError(e,"toggleFavorite")}}async incrementAnalytics(t,e){try{const r=await this.getDocument(this.COLLECTION_NAME,t);if(!r)throw new Error("Application not found");const i=r.analytics[e]||0;await this.updateDocument(this.COLLECTION_NAME,t,{analytics:{...r.analytics,[e]:i+1}})}catch(r){this.handleError(r,"incrementAnalytics")}}async getCategories(){try{const t=await this.queryDocuments(this.COLLECTION_NAME,[r("isPublic","==",!0)]),e=new Set;return t.forEach(t=>e.add(t.category)),Array.from(e).sort()}catch(t){this.handleError(t,"getCategories")}}async getPopularTags(t=20){try{const e=await this.queryDocuments(this.COLLECTION_NAME,[r("isPublic","==",!0)]),i=new Map;return e.forEach(t=>{t.tags.forEach(t=>{i.set(t,(i.get(t)||0)+1)})}),Array.from(i.entries()).map(([t,e])=>({tag:t,count:e})).sort((t,e)=>e.count-t.count).slice(0,t)}catch(e){this.handleError(e,"getPopularTags")}}async cloneApplication(t,e){try{const r=await this.getDocument(this.COLLECTION_NAME,t);if(!r)throw new Error("Application not found");if(!r.isPublic&&r.createdBy!==this.getCurrentUserId())throw new Error("Cannot clone private application");const i={name:e||`${r.name} (Copy)`,description:r.description,category:r.category,framework:r.framework,isPublic:!1,tags:[...r.tags],generationSettings:{...r.generationSettings}},a=await this.createApplication(i);return await this.incrementAnalytics(t,"forks"),a}catch(r){this.handleError(r,"cloneApplication")}}}export{n as A};
//# sourceMappingURL=ApplicationService-DwTIduYS.js.map
