{"version":3,"file":"Settings-5-TE1NEL.js","sources":["../../../src/components/ui/switch.tsx","../../../src/components/ui/slider.tsx","../../../src/routes/Settings.tsx"],"sourcesContent":["/**\r\n * Switch Component\r\n * Toggle switch for boolean settings\r\n */\r\n\r\nimport { useState } from 'react';\r\nimport { cn } from '../../lib/utils';\r\n\r\ninterface SwitchProps {\r\n  checked?: boolean;\r\n  defaultChecked?: boolean;\r\n  onCheckedChange?: (checked: boolean) => void;\r\n  disabled?: boolean;\r\n  className?: string;\r\n  id?: string;\r\n}\r\n\r\nexport function Switch({ \r\n  checked, \r\n  defaultChecked = false, \r\n  onCheckedChange, \r\n  disabled = false, \r\n  className,\r\n  id \r\n}: SwitchProps) {\r\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\r\n  \r\n  const isControlled = checked !== undefined;\r\n  const currentChecked = isControlled ? checked : internalChecked;\r\n  \r\n  const handleToggle = () => {\r\n    const newChecked = !currentChecked;\r\n    \r\n    if (!isControlled) {\r\n      setInternalChecked(newChecked);\r\n    }\r\n    \r\n    onCheckedChange?.(newChecked);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      role=\"switch\"\r\n      aria-checked={currentChecked}\r\n      disabled={disabled}\r\n      onClick={handleToggle}\r\n      id={id}\r\n      className={cn(\r\n        'relative inline-flex h-6 w-11 items-center rounded-full transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2',\r\n        currentChecked ? 'bg-blue-600' : 'bg-gray-200',\r\n        disabled && 'opacity-50 cursor-not-allowed',\r\n        className\r\n      )}\r\n    >\r\n      <span\r\n        className={cn(\r\n          'inline-block h-4 w-4 transform rounded-full bg-white transition-transform',\r\n          checked ? 'translate-x-6' : 'translate-x-1'\r\n        )}\r\n      />\r\n    </button>\r\n  );\r\n}","/**\r\n * Slider Component\r\n * A customizable range input slider with smooth interactions\r\n */\r\n\r\nimport React from 'react';\r\nimport { cn } from '../../lib/utils';\r\n\r\ninterface SliderProps {\r\n  value: number[];\r\n  onValueChange: (value: number[]) => void;\r\n  min: number;\r\n  max: number;\r\n  step: number;\r\n  className?: string;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport function Slider({\r\n  value,\r\n  onValueChange,\r\n  min,\r\n  max,\r\n  step,\r\n  className,\r\n  disabled = false,\r\n}: SliderProps) {\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = parseFloat(e.target.value);\r\n    onValueChange([newValue]);\r\n  };\r\n\r\n  const percentage = ((value[0] - min) / (max - min)) * 100;\r\n\r\n  return (\r\n    <div className={cn('relative w-full', className)}>\r\n      <div className=\"relative\">\r\n        <input\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          step={step}\r\n          value={value[0]}\r\n          onChange={handleChange}\r\n          disabled={disabled}\r\n          className={cn(\r\n            'w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer',\r\n            'focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50',\r\n            'slider-thumb',\r\n            disabled && 'opacity-50 cursor-not-allowed'\r\n          )}\r\n          style={{\r\n            background: `linear-gradient(to right, #3b82f6 0%, #3b82f6 ${percentage}%, #e5e7eb ${percentage}%, #e5e7eb 100%)`,\r\n          }}\r\n        />\r\n      </div>\r\n      <style dangerouslySetInnerHTML={{\r\n        __html: `\r\n          .slider-thumb::-webkit-slider-thumb {\r\n            appearance: none;\r\n            height: 16px;\r\n            width: 16px;\r\n            border-radius: 50%;\r\n            background: #3b82f6;\r\n            cursor: pointer;\r\n            border: 2px solid white;\r\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n          }\r\n\r\n          .slider-thumb::-moz-range-thumb {\r\n            height: 16px;\r\n            width: 16px;\r\n            border-radius: 50%;\r\n            background: #3b82f6;\r\n            cursor: pointer;\r\n            border: 2px solid white;\r\n            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n          }\r\n\r\n          .slider-thumb:disabled::-webkit-slider-thumb {\r\n            cursor: not-allowed;\r\n          }\r\n\r\n          .slider-thumb:disabled::-moz-range-thumb {\r\n            cursor: not-allowed;\r\n          }\r\n        `\r\n      }} />\r\n    </div>\r\n  );\r\n}","/**\r\n * Settings Page\r\n * Comprehensive settings and preferences interface\r\n */\r\n\r\n// import React, { useState } from 'react';\r\nimport { useState } from 'react';\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '../components/ui/card';\r\nimport { Button } from '../components/ui/button';\r\nimport { Switch } from '../components/ui/switch';\r\nimport { Label } from '../components/ui/label';\r\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '../components/ui/select';\r\nimport { Slider } from '../components/ui/slider';\r\nimport { Input } from '../components/ui/input';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '../components/ui/tabs';\r\nimport { Badge } from '../components/ui/badge';\r\nimport { useSettings } from '../contexts/SettingsContext';\r\n// import { useAuth } from '../contexts/AuthContext'; // Not currently used\r\nimport { useNotifications } from '../contexts/NotificationContext';\r\nimport { \r\n  Palette, \r\n  Shield, \r\n  Zap, \r\n  User, \r\n  Download, \r\n  Upload, \r\n  RotateCcw,\r\n  Moon,\r\n  Sun,\r\n  Monitor,\r\n  Code,\r\n  Brain\r\n} from 'lucide-react';\r\n\r\nexport default function SettingsPage() {\r\n  const { settings, updateSetting, resetSettings, exportSettings, importSettings, loading } = useSettings();\r\n  // const { user } = useAuth(); // Not currently used\r\n  const { showSuccess, showError } = useNotifications();\r\n  const [importFile, setImportFile] = useState<File | null>(null);\r\n\r\n  const handleExportSettings = () => {\r\n    const settingsData = exportSettings();\r\n    const blob = new Blob([settingsData], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'stich-settings.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    showSuccess('Settings Exported', 'Your settings have been downloaded.');\r\n  };\r\n\r\n  const handleImportSettings = async () => {\r\n    if (!importFile) return;\r\n\r\n    try {\r\n      const text = await importFile.text();\r\n      await importSettings(text);\r\n      setImportFile(null);\r\n    } catch (error) {\r\n      showError('Import Failed', 'Failed to read the settings file.');\r\n    }\r\n  };\r\n\r\n  const handleResetSettings = async () => {\r\n    const confirmed = window.confirm(\r\n      'Are you sure you want to reset all settings to defaults? This action cannot be undone.'\r\n    );\r\n    if (confirmed) {\r\n      await resetSettings();\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container mx-auto p-6\">\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 max-w-4xl\">\r\n      <div className=\"mb-6\">\r\n        <h1 className=\"text-3xl font-bold\">Settings & Preferences</h1>\r\n        <p className=\"text-muted-foreground\">\r\n          Customize your Stich experience and manage your account preferences.\r\n        </p>\r\n      </div>\r\n\r\n      <Tabs defaultValue=\"appearance\" className=\"space-y-6\">\r\n        <TabsList className=\"grid w-full grid-cols-6\">\r\n          <TabsTrigger value=\"appearance\" className=\"flex items-center gap-2\">\r\n            <Palette className=\"h-4 w-4\" />\r\n            Appearance\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"editor\" className=\"flex items-center gap-2\">\r\n            <Code className=\"h-4 w-4\" />\r\n            Editor\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"ai\" className=\"flex items-center gap-2\">\r\n            <Brain className=\"h-4 w-4\" />\r\n            AI\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"privacy\" className=\"flex items-center gap-2\">\r\n            <Shield className=\"h-4 w-4\" />\r\n            Privacy\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"development\" className=\"flex items-center gap-2\">\r\n            <Zap className=\"h-4 w-4\" />\r\n            Development\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"account\" className=\"flex items-center gap-2\">\r\n            <User className=\"h-4 w-4\" />\r\n            Account\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Appearance Settings */}\r\n        <TabsContent value=\"appearance\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Palette className=\"h-5 w-5\" />\r\n                Appearance\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Customize the look and feel of your interface.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"theme\">Theme</Label>\r\n                <Select value={settings.theme} onValueChange={(value: string) => updateSetting('theme', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"light\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Sun className=\"h-4 w-4\" />\r\n                        Light\r\n                      </div>\r\n                    </SelectItem>\r\n                    <SelectItem value=\"dark\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Moon className=\"h-4 w-4\" />\r\n                        Dark\r\n                      </div>\r\n                    </SelectItem>\r\n                    <SelectItem value=\"system\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        <Monitor className=\"h-4 w-4\" />\r\n                        System\r\n                      </div>\r\n                    </SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"language\">Language</Label>\r\n                <Select value={settings.language} onValueChange={(value: string) => updateSetting('language', value)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"en\">English</SelectItem>\r\n                    <SelectItem value=\"es\">Español</SelectItem>\r\n                    <SelectItem value=\"fr\">Français</SelectItem>\r\n                    <SelectItem value=\"de\">Deutsch</SelectItem>\r\n                    <SelectItem value=\"ja\">日本語</SelectItem>\r\n                    <SelectItem value=\"ko\">한국어</SelectItem>\r\n                    <SelectItem value=\"zh\">中文</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"fontSize\">Font Size</Label>\r\n                <Select value={settings.fontSize} onValueChange={(value: string) => updateSetting('fontSize', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"small\">Small</SelectItem>\r\n                    <SelectItem value=\"medium\">Medium</SelectItem>\r\n                    <SelectItem value=\"large\">Large</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"reducedMotion\">Reduced Motion</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Minimize animations and transitions for better accessibility.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"reducedMotion\"\r\n                  checked={settings.reducedMotion}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('reducedMotion', checked)}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Editor Settings */}\r\n        <TabsContent value=\"editor\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Code className=\"h-5 w-5\" />\r\n                Code Editor\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Configure your code editing experience.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"editorTheme\">Editor Theme</Label>\r\n                <Select value={settings.editorTheme} onValueChange={(value: string) => updateSetting('editorTheme', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"vs-light\">Light</SelectItem>\r\n                    <SelectItem value=\"vs-dark\">Dark</SelectItem>\r\n                    <SelectItem value=\"hc-black\">High Contrast</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"editorFontSize\">Font Size: {settings.editorFontSize}px</Label>\r\n                <Slider\r\n                  value={[settings.editorFontSize]}\r\n                  onValueChange={([value]: number[]) => updateSetting('editorFontSize', value)}\r\n                  min={10}\r\n                  max={24}\r\n                  step={1}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"editorTabSize\">Tab Size: {settings.editorTabSize} spaces</Label>\r\n                <Slider\r\n                  value={[settings.editorTabSize]}\r\n                  onValueChange={([value]: number[]) => updateSetting('editorTabSize', value)}\r\n                  min={2}\r\n                  max={8}\r\n                  step={1}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"editorWordWrap\">Word Wrap</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Wrap long lines in the editor.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"editorWordWrap\"\r\n                  checked={settings.editorWordWrap}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('editorWordWrap', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"editorMinimap\">Minimap</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Show minimap overview of the file.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"editorMinimap\"\r\n                  checked={settings.editorMinimap}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('editorMinimap', checked)}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* AI Settings */}\r\n        <TabsContent value=\"ai\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Brain className=\"h-5 w-5\" />\r\n                AI Preferences\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Configure AI behavior and code generation preferences.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"aiProvider\">Preferred AI Provider</Label>\r\n                <Select value={settings.preferredAIProvider} onValueChange={(value: string) => updateSetting('preferredAIProvider', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"openai\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        OpenAI <Badge variant=\"secondary\">GPT-4</Badge>\r\n                      </div>\r\n                    </SelectItem>\r\n                    <SelectItem value=\"anthropic\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        Anthropic <Badge variant=\"secondary\">Claude</Badge>\r\n                      </div>\r\n                    </SelectItem>\r\n                    <SelectItem value=\"google\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        Google <Badge variant=\"secondary\">Gemini</Badge>\r\n                      </div>\r\n                    </SelectItem>\r\n                    <SelectItem value=\"cerebras\">\r\n                      <div className=\"flex items-center gap-2\">\r\n                        Cerebras <Badge variant=\"secondary\">Fast</Badge>\r\n                      </div>\r\n                    </SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"creativityLevel\">Creativity Level: {Math.round(settings.creativityLevel * 100)}%</Label>\r\n                <Slider\r\n                  value={[settings.creativityLevel]}\r\n                  onValueChange={([value]: number[]) => updateSetting('creativityLevel', value)}\r\n                  min={0}\r\n                  max={1}\r\n                  step={0.1}\r\n                />\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Higher values produce more creative but potentially less predictable results.\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"codeStyle\">Code Style</Label>\r\n                <Select value={settings.codeStyle} onValueChange={(value: string) => updateSetting('codeStyle', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"clean\">Clean - Minimal comments, focus on clarity</SelectItem>\r\n                    <SelectItem value=\"documented\">Documented - Comprehensive comments and docs</SelectItem>\r\n                    <SelectItem value=\"minimal\">Minimal - Concise code, fewer abstractions</SelectItem>\r\n                    <SelectItem value=\"comprehensive\">Comprehensive - Full error handling and validation</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Privacy Settings */}\r\n        <TabsContent value=\"privacy\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Shield className=\"h-5 w-5\" />\r\n                Privacy & Data\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Control how your data is collected and used.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"analytics\">Analytics</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Help improve the product by sharing anonymous usage analytics.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"analytics\"\r\n                  checked={settings.analytics}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('analytics', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"crashReporting\">Crash Reporting</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Automatically send crash reports to help fix bugs.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"crashReporting\"\r\n                  checked={settings.crashReporting}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('crashReporting', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"usageData\">Usage Data</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Share feature usage data to improve user experience.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"usageData\"\r\n                  checked={settings.usageData}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('usageData', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"marketingEmails\">Marketing Emails</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Receive updates about new features and product news.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"marketingEmails\"\r\n                  checked={settings.marketingEmails}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('marketingEmails', checked)}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Development Settings */}\r\n        <TabsContent value=\"development\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <Zap className=\"h-5 w-5\" />\r\n                Development\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Configure development workflow and productivity features.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"autoSave\">Auto Save</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Automatically save changes as you type.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"autoSave\"\r\n                  checked={settings.autoSave}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('autoSave', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"autoPreview\">Auto Preview</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Automatically update preview when code changes.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"autoPreview\"\r\n                  checked={settings.autoPreview}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('autoPreview', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"showLineNumbers\">Line Numbers</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Show line numbers in code editor.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"showLineNumbers\"\r\n                  checked={settings.showLineNumbers}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('showLineNumbers', checked)}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"space-y-0.5\">\r\n                  <Label htmlFor=\"enableLinting\">Code Linting</Label>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Enable real-time code quality checks and suggestions.\r\n                  </p>\r\n                </div>\r\n                <Switch\r\n                  id=\"enableLinting\"\r\n                  checked={settings.enableLinting}\r\n                  onCheckedChange={(checked: boolean) => updateSetting('enableLinting', checked)}\r\n                />\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Account Settings */}\r\n        <TabsContent value=\"account\" className=\"space-y-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center gap-2\">\r\n                <User className=\"h-5 w-5\" />\r\n                Account Preferences\r\n              </CardTitle>\r\n              <CardDescription>\r\n                Manage your account settings and regional preferences.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-6\">\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"timezone\">Timezone</Label>\r\n                <Select value={settings.timezone} onValueChange={(value: string) => updateSetting('timezone', value)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"America/New_York\">Eastern Time (UTC-5)</SelectItem>\r\n                    <SelectItem value=\"America/Chicago\">Central Time (UTC-6)</SelectItem>\r\n                    <SelectItem value=\"America/Denver\">Mountain Time (UTC-7)</SelectItem>\r\n                    <SelectItem value=\"America/Los_Angeles\">Pacific Time (UTC-8)</SelectItem>\r\n                    <SelectItem value=\"Europe/London\">London (UTC+0)</SelectItem>\r\n                    <SelectItem value=\"Europe/Paris\">Paris (UTC+1)</SelectItem>\r\n                    <SelectItem value=\"Asia/Tokyo\">Tokyo (UTC+9)</SelectItem>\r\n                    <SelectItem value=\"Asia/Shanghai\">Shanghai (UTC+8)</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"dateFormat\">Date Format</Label>\r\n                <Select value={settings.dateFormat} onValueChange={(value: string) => updateSetting('dateFormat', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"MM/DD/YYYY\">MM/DD/YYYY (US)</SelectItem>\r\n                    <SelectItem value=\"DD/MM/YYYY\">DD/MM/YYYY (EU)</SelectItem>\r\n                    <SelectItem value=\"YYYY-MM-DD\">YYYY-MM-DD (ISO)</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"timeFormat\">Time Format</Label>\r\n                <Select value={settings.timeFormat} onValueChange={(value: string) => updateSetting('timeFormat', value as any)}>\r\n                  <SelectTrigger>\r\n                    <SelectValue />\r\n                  </SelectTrigger>\r\n                  <SelectContent>\r\n                    <SelectItem value=\"12h\">12-hour (AM/PM)</SelectItem>\r\n                    <SelectItem value=\"24h\">24-hour</SelectItem>\r\n                  </SelectContent>\r\n                </Select>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n\r\n          {/* Settings Management */}\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Settings Management</CardTitle>\r\n              <CardDescription>\r\n                Export, import, or reset your settings.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                <Button onClick={handleExportSettings} variant=\"outline\">\r\n                  <Download className=\"h-4 w-4 mr-2\" />\r\n                  Export Settings\r\n                </Button>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  <Input\r\n                    type=\"file\"\r\n                    accept=\".json\"\r\n                    onChange={(e) => setImportFile(e.target.files?.[0] || null)}\r\n                    className=\"hidden\"\r\n                    id=\"import-settings\"\r\n                  />\r\n                  <Button\r\n                    onClick={() => document.getElementById('import-settings')?.click()}\r\n                    variant=\"outline\"\r\n                  >\r\n                    <Upload className=\"h-4 w-4 mr-2\" />\r\n                    Select File\r\n                  </Button>\r\n                  \r\n                  {importFile && (\r\n                    <Button onClick={handleImportSettings}>\r\n                      Import Settings\r\n                    </Button>\r\n                  )}\r\n                </div>\r\n                \r\n                <Button onClick={handleResetSettings} variant=\"destructive\">\r\n                  <RotateCcw className=\"h-4 w-4 mr-2\" />\r\n                  Reset to Defaults\r\n                </Button>\r\n              </div>\r\n              \r\n              {importFile && (\r\n                <p className=\"text-sm text-muted-foreground\">\r\n                  Selected: {importFile.name}\r\n                </p>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}"],"names":["Switch","checked","defaultChecked","onCheckedChange","disabled","className","id","internalChecked","setInternalChecked","useState","isControlled","currentChecked","jsx","type","role","onClick","newChecked","cn","children","Slider","value","onValueChange","min","max","step","percentage","onChange","e","newValue","parseFloat","target","style","background","dangerouslySetInnerHTML","__html","SettingsPage","settings","updateSetting","resetSettings","exportSettings","importSettings","loading","useSettings","showSuccess","showError","useNotifications","importFile","setImportFile","jsxs","Tabs","defaultValue","TabsList","TabsTrigger","Palette","Code","Brain","Shield","Zap","User","TabsContent","Card","CardHeader","CardTitle","CardDescription","CardContent","Label","htmlFor","Select","theme","SelectTrigger","SelectValue","SelectContent","SelectItem","Sun","Moon","Monitor","language","fontSize","reducedMotion","editorTheme","editorFontSize","editorTabSize","editorWordWrap","editorMinimap","preferredAIProvider","Badge","variant","Math","round","creativityLevel","codeStyle","analytics","crashReporting","usageData","marketingEmails","autoSave","autoPreview","showLineNumbers","enableLinting","timezone","dateFormat","timeFormat","Button","settingsData","blob","Blob","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","Download","Input","accept","files","getElementById","Upload","async","text","error","window","confirm","RotateCcw","name"],"mappings":"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"}