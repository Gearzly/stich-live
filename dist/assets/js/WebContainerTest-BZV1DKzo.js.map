{"version":3,"file":"WebContainerTest-BZV1DKzo.js","sources":["../../../src/services/WebContainerService.ts","../../../src/components/CodePreview.tsx","../../../src/hooks/useWebContainer.ts","../../../src/components/WebContainerTest.tsx"],"sourcesContent":["/**\r\n * WebContainer Service\r\n * Handles in-browser code execution and preview using WebContainers\r\n */\r\n\r\nimport { WebContainer, FileSystemTree } from '@webcontainer/api';\r\n\r\nexport interface ExecutionResult {\r\n  success: boolean;\r\n  output?: string;\r\n  error?: string;\r\n  url?: string;\r\n}\r\n\r\nexport class WebContainerService {\r\n  private static instance: WebContainerService;\r\n  private webContainer: WebContainer | null = null;\r\n  private isBooting = false;\r\n\r\n  private constructor() {}\r\n\r\n  static getInstance(): WebContainerService {\r\n    if (!WebContainerService.instance) {\r\n      WebContainerService.instance = new WebContainerService();\r\n    }\r\n    return WebContainerService.instance;\r\n  }\r\n\r\n  /**\r\n   * Initialize WebContainer instance\r\n   */\r\n  async initialize(): Promise<void> {\r\n    if (this.webContainer || this.isBooting) {\r\n      return;\r\n    }\r\n\r\n    this.isBooting = true;\r\n\r\n    try {\r\n      // Boot WebContainer\r\n      this.webContainer = await WebContainer.boot();\r\n      console.log('WebContainer booted successfully');\r\n    } catch (error) {\r\n      console.error('Failed to boot WebContainer:', error);\r\n      throw error;\r\n    } finally {\r\n      this.isBooting = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if WebContainer is ready\r\n   */\r\n  isReady(): boolean {\r\n    return this.webContainer !== null;\r\n  }\r\n\r\n  /**\r\n   * Mount files to WebContainer\r\n   */\r\n  async mountFiles(files: FileSystemTree): Promise<void> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    await this.webContainer.mount(files);\r\n  }\r\n\r\n  /**\r\n   * Install dependencies\r\n   */\r\n  async installDependencies(): Promise<ExecutionResult> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    try {\r\n      const installProcess = await this.webContainer.spawn('npm', ['install']);\r\n      const output = await this.streamOutput(installProcess);\r\n      \r\n      const exitCode = await installProcess.exit;\r\n      \r\n      return {\r\n        success: exitCode === 0,\r\n        output,\r\n        ...(exitCode !== 0 && { error: `Install failed with exit code ${exitCode}` }),\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Install failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start development server\r\n   */\r\n  async startDevServer(): Promise<ExecutionResult> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    try {\r\n      // Start the dev server\r\n      const serverProcess = await this.webContainer.spawn('npm', ['run', 'dev']);\r\n      \r\n      // Listen for server ready\r\n      return new Promise((resolve) => {\r\n        let output = '';\r\n        \r\n        serverProcess.output.pipeTo(\r\n          new WritableStream({\r\n            write: (data) => {\r\n              output += data;\r\n              console.log(data);\r\n              \r\n              // Check if server is ready\r\n              if (data.includes('Local:') || data.includes('localhost')) {\r\n                resolve({\r\n                  success: true,\r\n                  output,\r\n                  url: 'http://localhost:3000',\r\n                });\r\n              }\r\n            },\r\n          })\r\n        );\r\n\r\n        // Fallback timeout\r\n        setTimeout(() => {\r\n          resolve({\r\n            success: true,\r\n            output,\r\n            url: 'http://localhost:3000', // Default assumption\r\n          });\r\n        }, 10000);\r\n      });\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Server start failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Execute a command\r\n   */\r\n  async executeCommand(command: string, args: string[] = []): Promise<ExecutionResult> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    try {\r\n      const process = await this.webContainer.spawn(command, args);\r\n      const output = await this.streamOutput(process);\r\n      \r\n      const exitCode = await process.exit;\r\n      \r\n      return {\r\n        success: exitCode === 0,\r\n        output,\r\n        ...(exitCode !== 0 && { error: `Command failed with exit code ${exitCode}` }),\r\n      };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error instanceof Error ? error.message : 'Command execution failed',\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a new file\r\n   */\r\n  async writeFile(path: string, contents: string): Promise<void> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    await this.webContainer.fs.writeFile(path, contents);\r\n  }\r\n\r\n  /**\r\n   * Read a file\r\n   */\r\n  async readFile(path: string): Promise<string> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    return this.webContainer.fs.readFile(path, 'utf-8');\r\n  }\r\n\r\n  /**\r\n   * List directory contents\r\n   */\r\n  async listDirectory(path: string): Promise<string[]> {\r\n    if (!this.webContainer) {\r\n      throw new Error('WebContainer not initialized');\r\n    }\r\n\r\n    return this.webContainer.fs.readdir(path);\r\n  }\r\n\r\n  /**\r\n   * Stream process output\r\n   */\r\n  private async streamOutput(process: any): Promise<string> {\r\n    let output = '';\r\n    \r\n    const reader = process.output.getReader();\r\n    \r\n    while (true) {\r\n      const { done, value } = await reader.read();\r\n      \r\n      if (done) {\r\n        break;\r\n      }\r\n      \r\n      output += value;\r\n    }\r\n    \r\n    return output;\r\n  }\r\n\r\n  /**\r\n   * Cleanup WebContainer\r\n   */\r\n  async cleanup(): Promise<void> {\r\n    if (this.webContainer) {\r\n      // WebContainer doesn't have explicit cleanup, but we can reset our reference\r\n      this.webContainer = null;\r\n    }\r\n  }\r\n}","/**\r\n * Code Preview Component\r\n * Provides live code execution and preview using WebContainers\r\n */\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\r\nimport { ScrollArea } from '@/components/ui/scroll-area';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { useWebContainer } from '@/hooks/useWebContainer';\r\nimport { FileSystemTree } from '@webcontainer/api';\r\nimport { Play, Terminal, Globe, Code, Loader2, RefreshCw } from 'lucide-react';\r\n\r\ninterface CodePreviewProps {\r\n  files: FileSystemTree;\r\n  className?: string;\r\n}\r\n\r\nexport function CodePreview({ files, className }: CodePreviewProps) {\r\n  const {\r\n    isReady,\r\n    isLoading,\r\n    error,\r\n    output,\r\n    previewUrl,\r\n    mountProject,\r\n    installDependencies,\r\n    startDevServer,\r\n    executeCommand,\r\n    clearOutput,\r\n  } = useWebContainer();\r\n\r\n  const [isProjectLoaded, setIsProjectLoaded] = useState(false);\r\n  const [isServerRunning, setIsServerRunning] = useState(false);\r\n\r\n  /**\r\n   * Load the project into WebContainer\r\n   */\r\n  const loadProject = async () => {\r\n    if (!isReady) return;\r\n\r\n    try {\r\n      const mounted = await mountProject(files);\r\n      if (mounted) {\r\n        setIsProjectLoaded(true);\r\n        \r\n        // Auto-install dependencies\r\n        const installed = await installDependencies();\r\n        if (installed) {\r\n          // Auto-start dev server\r\n          const started = await startDevServer();\r\n          if (started) {\r\n            setIsServerRunning(true);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load project:', error);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Restart the development server\r\n   */\r\n  const restartServer = async () => {\r\n    setIsServerRunning(false);\r\n    const started = await startDevServer();\r\n    if (started) {\r\n      setIsServerRunning(true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Run custom command\r\n   */\r\n  const runCommand = async (command: string) => {\r\n    const [cmd, ...args] = command.split(' ');\r\n    await executeCommand(cmd, args);\r\n  };\r\n\r\n  // Load project when WebContainer is ready and we have files\r\n  useEffect(() => {\r\n    if (isReady && files && !isProjectLoaded) {\r\n      loadProject();\r\n    }\r\n  }, [isReady, files, isProjectLoaded]);\r\n\r\n  return (\r\n    <div className={`space-y-4 ${className}`}>\r\n      {/* Status Bar */}\r\n      <div className=\"flex items-center justify-between p-3 bg-muted/50 rounded-lg\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Badge variant={isReady ? 'default' : 'secondary'}>\r\n            {isReady ? 'Ready' : 'Initializing'}\r\n          </Badge>\r\n          {isProjectLoaded && (\r\n            <Badge variant=\"outline\">Project Loaded</Badge>\r\n          )}\r\n          {isServerRunning && (\r\n            <Badge variant=\"default\">Server Running</Badge>\r\n          )}\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"outline\"\r\n            onClick={loadProject}\r\n            disabled={!isReady || isLoading}\r\n          >\r\n            {isLoading ? (\r\n              <Loader2 className=\"h-4 w-4 animate-spin\" />\r\n            ) : (\r\n              <Play className=\"h-4 w-4\" />\r\n            )}\r\n            Load Project\r\n          </Button>\r\n          \r\n          {isProjectLoaded && (\r\n            <Button\r\n              size=\"sm\"\r\n              variant=\"outline\"\r\n              onClick={restartServer}\r\n              disabled={isLoading}\r\n            >\r\n              <RefreshCw className=\"h-4 w-4\" />\r\n              Restart Server\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <Card className=\"border-destructive\">\r\n          <CardHeader className=\"pb-2\">\r\n            <CardTitle className=\"text-destructive text-sm\">Error</CardTitle>\r\n          </CardHeader>\r\n          <CardContent>\r\n            <pre className=\"text-sm text-destructive whitespace-pre-wrap\">\r\n              {error}\r\n            </pre>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Main Content */}\r\n      <Tabs defaultValue=\"preview\" className=\"w-full\">\r\n        <TabsList className=\"grid w-full grid-cols-3\">\r\n          <TabsTrigger value=\"preview\" className=\"flex items-center space-x-2\">\r\n            <Globe className=\"h-4 w-4\" />\r\n            <span>Preview</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"terminal\" className=\"flex items-center space-x-2\">\r\n            <Terminal className=\"h-4 w-4\" />\r\n            <span>Terminal</span>\r\n          </TabsTrigger>\r\n          <TabsTrigger value=\"files\" className=\"flex items-center space-x-2\">\r\n            <Code className=\"h-4 w-4\" />\r\n            <span>Files</span>\r\n          </TabsTrigger>\r\n        </TabsList>\r\n\r\n        {/* Preview Tab */}\r\n        <TabsContent value=\"preview\" className=\"mt-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center justify-between\">\r\n                <span>Live Preview</span>\r\n                {previewUrl && (\r\n                  <Button\r\n                    size=\"sm\"\r\n                    variant=\"outline\"\r\n                    onClick={() => window.open(previewUrl, '_blank')}\r\n                  >\r\n                    Open in New Tab\r\n                  </Button>\r\n                )}\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"p-0\">\r\n              {previewUrl ? (\r\n                <iframe\r\n                  src={previewUrl}\r\n                  className=\"w-full h-96 border-0 rounded-b-lg\"\r\n                  title=\"Live Preview\"\r\n                />\r\n              ) : (\r\n                <div className=\"h-96 flex items-center justify-center text-muted-foreground\">\r\n                  {isServerRunning ? 'Loading preview...' : 'Start the development server to see preview'}\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Terminal Tab */}\r\n        <TabsContent value=\"terminal\" className=\"mt-4\">\r\n          <Card>\r\n            <CardHeader className=\"flex flex-row items-center justify-between\">\r\n              <CardTitle>Terminal Output</CardTitle>\r\n              <Button size=\"sm\" variant=\"outline\" onClick={clearOutput}>\r\n                Clear\r\n              </Button>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96 w-full\">\r\n                <pre className=\"text-sm font-mono whitespace-pre-wrap\">\r\n                  {output || 'No output yet...'}\r\n                </pre>\r\n              </ScrollArea>\r\n              \r\n              {/* Command Input */}\r\n              <div className=\"mt-4 flex space-x-2\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter command (e.g., npm run build)\"\r\n                  className=\"flex-1 px-3 py-2 border rounded-md text-sm\"\r\n                  onKeyDown={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      const command = (e.target as HTMLInputElement).value;\r\n                      if (command.trim()) {\r\n                        runCommand(command);\r\n                        (e.target as HTMLInputElement).value = '';\r\n                      }\r\n                    }\r\n                  }}\r\n                  disabled={!isReady || isLoading}\r\n                />\r\n                <Button\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    const input = document.querySelector('input[placeholder*=\"Enter command\"]') as HTMLInputElement;\r\n                    if (input?.value.trim()) {\r\n                      runCommand(input.value);\r\n                      input.value = '';\r\n                    }\r\n                  }}\r\n                  disabled={!isReady || isLoading}\r\n                >\r\n                  Run\r\n                </Button>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n\r\n        {/* Files Tab */}\r\n        <TabsContent value=\"files\" className=\"mt-4\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle>Project Files</CardTitle>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <ScrollArea className=\"h-96 w-full\">\r\n                <div className=\"space-y-2\">\r\n                  {Object.entries(files).map(([name, content]) => (\r\n                    <div key={name} className=\"border rounded p-2\">\r\n                      <div className=\"font-mono text-sm font-medium\">{name}</div>\r\n                      {'file' in content && content.file && 'contents' in content.file && (\r\n                        <pre className=\"text-xs text-muted-foreground mt-1 whitespace-pre-wrap overflow-hidden\">\r\n                          {typeof content.file.contents === 'string' ? (\r\n                            <>\r\n                              {content.file.contents.substring(0, 200)}\r\n                              {content.file.contents.length > 200 && '...'}\r\n                            </>\r\n                          ) : (\r\n                            '[Binary file]'\r\n                          )}\r\n                        </pre>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </ScrollArea>\r\n            </CardContent>\r\n          </Card>\r\n        </TabsContent>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n}","/**\r\n * WebContainer Hook\r\n * React hook for managing WebContainer instances and operations\r\n */\r\n\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { WebContainerService, ExecutionResult } from '@/services/WebContainerService';\r\nimport { FileSystemTree } from '@webcontainer/api';\r\n\r\ninterface WebContainerState {\r\n  isReady: boolean;\r\n  isLoading: boolean;\r\n  error: string | null;\r\n  output: string;\r\n  previewUrl: string | null;\r\n}\r\n\r\nexport const useWebContainer = () => {\r\n  const [state, setState] = useState<WebContainerState>({\r\n    isReady: false,\r\n    isLoading: false,\r\n    error: null,\r\n    output: '',\r\n    previewUrl: null,\r\n  });\r\n\r\n  const webContainerService = WebContainerService.getInstance();\r\n\r\n  /**\r\n   * Initialize WebContainer\r\n   */\r\n  const initialize = useCallback(async () => {\r\n    if (state.isReady) return;\r\n\r\n    setState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      await webContainerService.initialize();\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isReady: true, \r\n        isLoading: false,\r\n        output: prev.output + 'WebContainer initialized successfully\\n'\r\n      }));\r\n    } catch (error) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false, \r\n        error: error instanceof Error ? error.message : 'Failed to initialize WebContainer'\r\n      }));\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Mount project files\r\n   */\r\n  const mountProject = useCallback(async (files: FileSystemTree): Promise<boolean> => {\r\n    if (!state.isReady) {\r\n      setState(prev => ({ ...prev, error: 'WebContainer not ready' }));\r\n      return false;\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      await webContainerService.mountFiles(files);\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false,\r\n        output: prev.output + 'Project files mounted successfully\\n'\r\n      }));\r\n      return true;\r\n    } catch (error) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false, \r\n        error: error instanceof Error ? error.message : 'Failed to mount files'\r\n      }));\r\n      return false;\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Install dependencies\r\n   */\r\n  const installDependencies = useCallback(async (): Promise<boolean> => {\r\n    if (!state.isReady) {\r\n      setState(prev => ({ ...prev, error: 'WebContainer not ready' }));\r\n      return false;\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const result = await webContainerService.installDependencies();\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false,\r\n        output: prev.output + (result.output || '') + '\\n',\r\n        error: result.error || null\r\n      }));\r\n      return result.success;\r\n    } catch (error) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false, \r\n        error: error instanceof Error ? error.message : 'Failed to install dependencies'\r\n      }));\r\n      return false;\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Start development server\r\n   */\r\n  const startDevServer = useCallback(async (): Promise<boolean> => {\r\n    if (!state.isReady) {\r\n      setState(prev => ({ ...prev, error: 'WebContainer not ready' }));\r\n      return false;\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const result = await webContainerService.startDevServer();\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false,\r\n        output: prev.output + (result.output || '') + '\\n',\r\n        previewUrl: result.url || null,\r\n        error: result.error || null\r\n      }));\r\n      return result.success;\r\n    } catch (error) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false, \r\n        error: error instanceof Error ? error.message : 'Failed to start dev server'\r\n      }));\r\n      return false;\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Execute a command\r\n   */\r\n  const executeCommand = useCallback(async (command: string, args: string[] = []): Promise<ExecutionResult> => {\r\n    if (!state.isReady) {\r\n      const error = 'WebContainer not ready';\r\n      setState(prev => ({ ...prev, error }));\r\n      return { success: false, error };\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isLoading: true, error: null }));\r\n\r\n    try {\r\n      const result = await webContainerService.executeCommand(command, args);\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false,\r\n        output: prev.output + `$ ${command} ${args.join(' ')}\\n` + (result.output || '') + '\\n',\r\n        error: result.error || null\r\n      }));\r\n      return result;\r\n    } catch (error) {\r\n      const errorMsg = error instanceof Error ? error.message : 'Command execution failed';\r\n      setState(prev => ({ \r\n        ...prev, \r\n        isLoading: false, \r\n        error: errorMsg\r\n      }));\r\n      return { success: false, error: errorMsg };\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Write file\r\n   */\r\n  const writeFile = useCallback(async (path: string, contents: string): Promise<boolean> => {\r\n    if (!state.isReady) {\r\n      setState(prev => ({ ...prev, error: 'WebContainer not ready' }));\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      await webContainerService.writeFile(path, contents);\r\n      setState(prev => ({ \r\n        ...prev,\r\n        output: prev.output + `File written: ${path}\\n`\r\n      }));\r\n      return true;\r\n    } catch (error) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        error: error instanceof Error ? error.message : 'Failed to write file'\r\n      }));\r\n      return false;\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Read file\r\n   */\r\n  const readFile = useCallback(async (path: string): Promise<string | null> => {\r\n    if (!state.isReady) {\r\n      setState(prev => ({ ...prev, error: 'WebContainer not ready' }));\r\n      return null;\r\n    }\r\n\r\n    try {\r\n      const contents = await webContainerService.readFile(path);\r\n      setState(prev => ({ \r\n        ...prev,\r\n        output: prev.output + `File read: ${path}\\n`\r\n      }));\r\n      return contents;\r\n    } catch (error) {\r\n      setState(prev => ({ \r\n        ...prev, \r\n        error: error instanceof Error ? error.message : 'Failed to read file'\r\n      }));\r\n      return null;\r\n    }\r\n  }, [state.isReady, webContainerService]);\r\n\r\n  /**\r\n   * Clear output\r\n   */\r\n  const clearOutput = useCallback(() => {\r\n    setState(prev => ({ ...prev, output: '', error: null }));\r\n  }, []);\r\n\r\n  /**\r\n   * Cleanup\r\n   */\r\n  const cleanup = useCallback(async () => {\r\n    await webContainerService.cleanup();\r\n    setState({\r\n      isReady: false,\r\n      isLoading: false,\r\n      error: null,\r\n      output: '',\r\n      previewUrl: null,\r\n    });\r\n  }, [webContainerService]);\r\n\r\n  // Initialize on mount\r\n  useEffect(() => {\r\n    initialize();\r\n    \r\n    // Cleanup on unmount\r\n    return () => {\r\n      cleanup();\r\n    };\r\n  }, []);\r\n\r\n  return {\r\n    ...state,\r\n    initialize,\r\n    mountProject,\r\n    installDependencies,\r\n    startDevServer,\r\n    executeCommand,\r\n    writeFile,\r\n    readFile,\r\n    clearOutput,\r\n    cleanup,\r\n  };\r\n};","/**\r\n * WebContainer Test Page\r\n * Test page for demonstrating WebContainer functionality\r\n */\r\n\r\nimport { useState } from 'react';\r\nimport { CodePreview } from '@/components/CodePreview';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\r\nimport { FileSystemTree } from '@webcontainer/api';\r\n\r\n// Sample React project files\r\nconst sampleReactProject: FileSystemTree = {\r\n  'package.json': {\r\n    file: {\r\n      contents: JSON.stringify({\r\n        name: 'sample-react-app',\r\n        version: '1.0.0',\r\n        type: 'module',\r\n        scripts: {\r\n          dev: 'vite',\r\n          build: 'vite build',\r\n          preview: 'vite preview'\r\n        },\r\n        dependencies: {\r\n          react: '^18.2.0',\r\n          'react-dom': '^18.2.0'\r\n        },\r\n        devDependencies: {\r\n          '@types/react': '^18.2.43',\r\n          '@types/react-dom': '^18.2.17',\r\n          '@vitejs/plugin-react': '^4.2.1',\r\n          vite: '^5.0.8'\r\n        }\r\n      }, null, 2)\r\n    }\r\n  },\r\n  'index.html': {\r\n    file: {\r\n      contents: `<!DOCTYPE html>\r\n<html lang=\"en\">\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n    <title>Sample React App</title>\r\n  </head>\r\n  <body>\r\n    <div id=\"root\"></div>\r\n    <script type=\"module\" src=\"/src/main.jsx\"></script>\r\n  </body>\r\n</html>`\r\n    }\r\n  },\r\n  'vite.config.js': {\r\n    file: {\r\n      contents: `import { defineConfig } from 'vite'\r\nimport react from '@vitejs/plugin-react'\r\n\r\nexport default defineConfig({\r\n  plugins: [react()],\r\n  server: {\r\n    port: 3000\r\n  }\r\n})`\r\n    }\r\n  },\r\n  src: {\r\n    directory: {\r\n      'main.jsx': {\r\n        file: {\r\n          contents: `import React from 'react'\r\nimport ReactDOM from 'react-dom/client'\r\nimport App from './App.jsx'\r\n\r\nReactDOM.createRoot(document.getElementById('root')).render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n)`\r\n        }\r\n      },\r\n      'App.jsx': {\r\n        file: {\r\n          contents: `import { useState } from 'react'\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(0)\r\n\r\n  return (\r\n    <div style={{ padding: '2rem', textAlign: 'center', fontFamily: 'Arial, sans-serif' }}>\r\n      <h1>Sample React App</h1>\r\n      <p>This is running in a WebContainer!</p>\r\n      \r\n      <div style={{ margin: '2rem 0' }}>\r\n        <button \r\n          onClick={() => setCount(count + 1)}\r\n          style={{\r\n            padding: '0.5rem 1rem',\r\n            fontSize: '1rem',\r\n            backgroundColor: '#007acc',\r\n            color: 'white',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          Count: {count}\r\n        </button>\r\n      </div>\r\n      \r\n      <p style={{ color: '#666' }}>\r\n        Click the button to test React state management!\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App`\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n// Sample Node.js project\r\nconst sampleNodeProject: FileSystemTree = {\r\n  'package.json': {\r\n    file: {\r\n      contents: JSON.stringify({\r\n        name: 'sample-node-app',\r\n        version: '1.0.0',\r\n        type: 'module',\r\n        main: 'server.js',\r\n        scripts: {\r\n          dev: 'node server.js',\r\n          start: 'node server.js'\r\n        },\r\n        dependencies: {}\r\n      }, null, 2)\r\n    }\r\n  },\r\n  'server.js': {\r\n    file: {\r\n      contents: `import http from 'http';\r\nimport url from 'url';\r\n\r\nconst server = http.createServer((req, res) => {\r\n  const pathname = url.parse(req.url).pathname;\r\n  \r\n  res.writeHead(200, { 'Content-Type': 'text/html' });\r\n  \r\n  const html = \\`\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <title>Sample Node.js Server</title>\r\n      <style>\r\n        body { font-family: Arial, sans-serif; padding: 2rem; text-align: center; }\r\n        .container { max-width: 600px; margin: 0 auto; }\r\n        .button { padding: 0.5rem 1rem; margin: 0.5rem; background: #007acc; color: white; border: none; border-radius: 4px; cursor: pointer; }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"container\">\r\n        <h1>Sample Node.js Server</h1>\r\n        <p>This server is running in a WebContainer!</p>\r\n        <p>Current time: \\${new Date().toLocaleString()}</p>\r\n        <p>Path: \\${pathname}</p>\r\n        <button class=\"button\" onclick=\"location.reload()\">Refresh</button>\r\n        <button class=\"button\" onclick=\"window.location='/about'\">About</button>\r\n      </div>\r\n    </body>\r\n    </html>\r\n  \\`;\r\n  \r\n  res.end(html);\r\n});\r\n\r\nconst PORT = 3000;\r\nserver.listen(PORT, () => {\r\n  console.log(\\`Server running on http://localhost:\\${PORT}\\`);\r\n});`\r\n    }\r\n  }\r\n};\r\n\r\nexport function WebContainerTest() {\r\n  const [selectedProject, setSelectedProject] = useState<'react' | 'node'>('react');\r\n  const [currentFiles, setCurrentFiles] = useState<FileSystemTree>(sampleReactProject);\r\n\r\n  const switchProject = (projectType: 'react' | 'node') => {\r\n    setSelectedProject(projectType);\r\n    setCurrentFiles(projectType === 'react' ? sampleReactProject : sampleNodeProject);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6 space-y-6\">\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>WebContainer Test Environment</CardTitle>\r\n        </CardHeader>\r\n        <CardContent className=\"space-y-4\">\r\n          <p className=\"text-muted-foreground\">\r\n            This page demonstrates the WebContainer integration for running code in the browser.\r\n            Select a project type below to test live code execution.\r\n          </p>\r\n          \r\n          <div className=\"flex space-x-2\">\r\n            <Button\r\n              variant={selectedProject === 'react' ? 'default' : 'outline'}\r\n              onClick={() => switchProject('react')}\r\n            >\r\n              React Project\r\n            </Button>\r\n            <Button\r\n              variant={selectedProject === 'node' ? 'default' : 'outline'}\r\n              onClick={() => switchProject('node')}\r\n            >\r\n              Node.js Server\r\n            </Button>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <CodePreview files={currentFiles} />\r\n    </div>\r\n  );\r\n}"],"names":["_WebContainerService","constructor","__publicField","this","getInstance","instance","initialize","webContainer","isBooting","WebContainer","boot","error","isReady","mountFiles","files","Error","mount","installDependencies","installProcess","spawn","output","streamOutput","exitCode","exit","success","message","startDevServer","serverProcess","Promise","resolve","pipeTo","WritableStream","write","data","includes","url","setTimeout","executeCommand","command","args","process","writeFile","path","contents","fs","readFile","listDirectory","readdir","reader","getReader","done","value","read","cleanup","WebContainerService","CodePreview","className","isLoading","previewUrl","mountProject","clearOutput","state","setState","useState","webContainerService","useCallback","async","prev","result","join","errorMsg","useEffect","useWebContainer","isProjectLoaded","setIsProjectLoaded","isServerRunning","setIsServerRunning","loadProject","runCommand","cmd","split","jsxs","children","jsx","Badge","variant","Button","size","onClick","disabled","Loader2","Play","RefreshCw","Card","CardHeader","CardTitle","CardContent","Tabs","defaultValue","TabsList","TabsTrigger","Globe","Terminal","Code","TabsContent","window","open","src","title","ScrollArea","type","placeholder","onKeyDown","e","key","target","trim","input","document","querySelector","Object","entries","map","name","content","file","Fragment","substring","length","sampleReactProject","JSON","stringify","version","scripts","dev","build","preview","dependencies","react","devDependencies","vite","directory","sampleNodeProject","main","start","WebContainerTest","selectedProject","setSelectedProject","currentFiles","setCurrentFiles","switchProject","projectType"],"mappings":"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"}