{"version":3,"file":"webcontainer-B_DT545e.js","sources":["../../../node_modules/@webcontainer/api/dist/internal/tokens.js","../../../node_modules/@webcontainer/api/dist/internal/iframe-url.js","../../../node_modules/@webcontainer/api/dist/internal/constants.js","../../../node_modules/@webcontainer/api/dist/preview-message-types.js","../../../node_modules/@webcontainer/api/dist/internal/reset-promise.js","../../../node_modules/@webcontainer/api/dist/internal/auth-state.js","../../../node_modules/@webcontainer/api/dist/vendor/index.js","../../../node_modules/@webcontainer/api/dist/utils/is-preview-message.js","../../../node_modules/@webcontainer/api/dist/utils/null-prototype.js","../../../node_modules/@webcontainer/api/dist/utils/file-system.js","../../../node_modules/@webcontainer/api/dist/index.js"],"sourcesContent":["import { STORAGE_TOKENS_NAME } from './constants.js';\nimport { TypedEventTarget } from './TypedEventTarget.js';\nconst IGNORED_ERROR = new Error();\nIGNORED_ERROR.stack = '';\nconst accessTokenChangedListeners = new TypedEventTarget();\n/**\n * @internal\n */\nexport class Tokens {\n    origin;\n    refresh;\n    access;\n    expires;\n    _revoked = new AbortController();\n    constructor(\n    // editor origin that those tokens are bound to, mostly used for development\n    origin, \n    // token to use to get a new access token\n    refresh, \n    // token to provide to webcontainer\n    access, \n    // time in UTC when the token expires\n    expires) {\n        this.origin = origin;\n        this.refresh = refresh;\n        this.access = access;\n        this.expires = expires;\n    }\n    async activate(onFailedRefresh) {\n        if (this._revoked.signal.aborted) {\n            throw new Error('Token revoked');\n        }\n        // if the access token expired we fetch a new one\n        if (this.expires < Date.now()) {\n            if (!(await this._fetchNewAccessToken())) {\n                return false;\n            }\n        }\n        this._sync();\n        this._startRefreshTokensLoop(onFailedRefresh);\n        return true;\n    }\n    async revoke(clientId, ignoreRevokeError) {\n        this._revoked.abort();\n        try {\n            const response = await fetch(`${this.origin}/oauth/revoke`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({ token: this.refresh, token_type_hint: 'refresh_token', client_id: clientId }),\n                mode: 'cors',\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to logout`);\n            }\n        }\n        catch (error) {\n            if (!ignoreRevokeError) {\n                throw error;\n            }\n        }\n        clearTokensInStorage();\n    }\n    static fromStorage() {\n        const savedTokens = readTokensFromStorage();\n        if (!savedTokens) {\n            return null;\n        }\n        return new Tokens(savedTokens.origin, savedTokens.refresh, savedTokens.access, savedTokens.expires);\n    }\n    static async fromAuthCode({ editorOrigin, clientId, codeVerifier, authCode, redirectUri, }) {\n        const response = await fetch(`${editorOrigin}/oauth/token`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: new URLSearchParams({\n                client_id: clientId,\n                code: authCode,\n                code_verifier: codeVerifier,\n                grant_type: 'authorization_code',\n                redirect_uri: redirectUri,\n            }),\n            mode: 'cors',\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch token: ${response.status}`);\n        }\n        const tokenResponse = await response.json();\n        assertTokenResponse(tokenResponse);\n        const { access_token: access, refresh_token: refresh } = tokenResponse;\n        const expires = getExpiresFromTokenResponse(tokenResponse);\n        return new Tokens(editorOrigin, refresh, access, expires);\n    }\n    async _fetchNewAccessToken() {\n        try {\n            const response = await fetch(`${this.origin}/oauth/token`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({\n                    grant_type: 'refresh_token',\n                    refresh_token: this.refresh,\n                }),\n                mode: 'cors',\n                signal: this._revoked.signal,\n            });\n            if (!response.ok) {\n                throw IGNORED_ERROR;\n            }\n            const tokenResponse = await response.json();\n            assertTokenResponse(tokenResponse);\n            const { access_token: access, refresh_token: refresh } = tokenResponse;\n            const expires = getExpiresFromTokenResponse(tokenResponse);\n            this.access = access;\n            this.expires = expires;\n            this.refresh = refresh;\n            return true;\n        }\n        catch {\n            clearTokensInStorage();\n            return false;\n        }\n    }\n    _sync() {\n        persistTokensInStorage(this);\n        fireAccessTokenChanged(this.access);\n    }\n    async _startRefreshTokensLoop(onFailedRefresh) {\n        while (true) {\n            const expiresIn = this.expires - Date.now() - 1000;\n            await wait(Math.max(expiresIn, 1000));\n            if (this._revoked.signal.aborted) {\n                return;\n            }\n            if (!this._fetchNewAccessToken()) {\n                onFailedRefresh();\n                return;\n            }\n            this._sync();\n        }\n    }\n}\n/**\n * @internal\n */\nexport function clearTokensInStorage() {\n    localStorage.removeItem(STORAGE_TOKENS_NAME);\n}\n/**\n * @internal\n */\nexport function addAccessTokenChangedListener(listener) {\n    return accessTokenChangedListeners.listen(listener);\n}\nfunction readTokensFromStorage() {\n    const serializedTokens = localStorage.getItem(STORAGE_TOKENS_NAME);\n    if (!serializedTokens) {\n        return null;\n    }\n    try {\n        return JSON.parse(serializedTokens);\n    }\n    catch {\n        return null;\n    }\n}\nfunction persistTokensInStorage(tokens) {\n    localStorage.setItem(STORAGE_TOKENS_NAME, JSON.stringify(tokens));\n}\nfunction getExpiresFromTokenResponse({ created_at, expires_in }) {\n    return (created_at + expires_in) * 1000;\n}\nfunction assertTokenResponse(token) {\n    if (typeof token !== 'object' || !token) {\n        throw new Error('Invalid Token Response');\n    }\n    if (typeof token.access_token !== 'string' ||\n        typeof token.refresh_token !== 'string' ||\n        typeof token.created_at !== 'number' ||\n        typeof token.expires_in !== 'number') {\n        throw new Error('Invalid Token Response');\n    }\n}\nfunction wait(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction fireAccessTokenChanged(accessToken) {\n    accessTokenChangedListeners.fireEvent(accessToken);\n}\n","import { DEFAULT_EDITOR_ORIGIN } from './constants.js';\nconst params = {};\nlet editorOrigin = null;\nexport const iframeSettings = {\n    get editorOrigin() {\n        if (editorOrigin == null) {\n            editorOrigin = new URL(globalThis.WEBCONTAINER_API_IFRAME_URL ?? DEFAULT_EDITOR_ORIGIN).origin;\n        }\n        return editorOrigin;\n    },\n    set editorOrigin(newOrigin) {\n        editorOrigin = new URL(newOrigin).origin;\n    },\n    setQueryParam(key, value) {\n        params[key] = value;\n    },\n    get url() {\n        const url = new URL(this.editorOrigin);\n        url.pathname = '/headless';\n        for (const param in params) {\n            url.searchParams.set(param, params[param]);\n        }\n        url.searchParams.set('version', \"1.6.1\");\n        return url;\n    },\n};\n","export const DEFAULT_EDITOR_ORIGIN = 'https://stackblitz.com';\nexport const SEARCH_PARAM_AUTH_CODE = 'code';\nexport const SEARCH_PARAM_ERROR = 'error';\nexport const SEARCH_PARAM_ERROR_DESCRIPTION = 'error_description';\nexport const BROADCAST_CHANNEL_NAME = '__wc_api_bc__';\nexport const STORAGE_TOKENS_NAME = '__wc_api_tokens__';\nexport const STORAGE_CODE_VERIFIER_NAME = '__wc_api_verifier__';\nexport const STORAGE_POPUP_NAME = '__wc_api_popup__';\n","/**\n * This type is in a separate module so that localservice can import it\n * without bundling all the other webcontainer specific stuff.\n */\nexport var PreviewMessageType;\n(function (PreviewMessageType) {\n    PreviewMessageType[\"UncaughtException\"] = \"PREVIEW_UNCAUGHT_EXCEPTION\";\n    PreviewMessageType[\"UnhandledRejection\"] = \"PREVIEW_UNHANDLED_REJECTION\";\n    PreviewMessageType[\"ConsoleError\"] = \"PREVIEW_CONSOLE_ERROR\";\n})(PreviewMessageType || (PreviewMessageType = {}));\n","/**\n * @internal\n */\nexport function resettablePromise() {\n    let resolve;\n    let promise;\n    function reset() {\n        promise = new Promise((_resolve) => (resolve = _resolve));\n    }\n    reset();\n    return {\n        get promise() {\n            return promise;\n        },\n        resolve(value) {\n            return resolve(value);\n        },\n        reset,\n    };\n}\n","import { Tokens, clearTokensInStorage } from './tokens.js';\nimport { SEARCH_PARAM_AUTH_CODE, SEARCH_PARAM_ERROR, STORAGE_CODE_VERIFIER_NAME, BROADCAST_CHANNEL_NAME, STORAGE_POPUP_NAME, SEARCH_PARAM_ERROR_DESCRIPTION, } from './constants.js';\nimport { iframeSettings } from './iframe-url.js';\nimport { S256, newCodeVerifier } from './code.js';\nimport { resettablePromise } from './reset-promise.js';\nimport { TypedEventTarget } from './TypedEventTarget.js';\n/**\n * @internal\n */\nexport const authState = {\n    initialized: false,\n    bootCalled: false,\n    authComplete: resettablePromise(),\n    clientId: '',\n    oauthScope: '',\n    broadcastChannel: null,\n    get editorOrigin() {\n        return iframeSettings.editorOrigin;\n    },\n    tokens: null,\n};\nconst authFailedListeners = new TypedEventTarget();\nconst loggedOutListeners = new TypedEventTarget();\nfunction broadcastMessage(message) {\n    if (!authState.broadcastChannel) {\n        return;\n    }\n    authState.broadcastChannel.postMessage(message);\n    // check if we are in a popup mode\n    if (localStorage.getItem(STORAGE_POPUP_NAME) === 'true' && message.type !== 'auth-logout') {\n        localStorage.removeItem(STORAGE_POPUP_NAME);\n        // wait a tick to make sure the posted message has been sent\n        setTimeout(() => {\n            window.close();\n        });\n    }\n}\nexport const auth = {\n    init({ editorOrigin, clientId, scope }) {\n        if (authState.initialized) {\n            throw new Error('Init should only be called once');\n        }\n        let enterprise = true;\n        if (enterprise && authState.bootCalled) {\n            throw new Error('`auth.init` should always be called before `WebContainer.boot`');\n        }\n        authState.initialized = true;\n        authState.tokens = Tokens.fromStorage();\n        authState.clientId = clientId;\n        authState.oauthScope = scope;\n        authState.broadcastChannel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\n        // configure iframe url\n        iframeSettings.setQueryParam('client_id', clientId);\n        if (editorOrigin) {\n            iframeSettings.editorOrigin = new URL(editorOrigin).origin;\n        }\n        loggedOutListeners.listen(() => authState.authComplete.reset());\n        // if authentication or logout are done in another page, we want to reflect the state on this page as well\n        authState.broadcastChannel.addEventListener('message', onChannelMessage);\n        async function onChannelMessage(event) {\n            const typedEvent = event.data;\n            if (typedEvent.type === 'auth-complete') {\n                authState.tokens = Tokens.fromStorage();\n                // we ignore the possible error here because they can't have expired just yet\n                await authState.tokens.activate(onFailedTokenRefresh);\n                authState.authComplete.resolve();\n                return;\n            }\n            if (typedEvent.type === 'auth-failed') {\n                authFailedListeners.fireEvent(typedEvent);\n                return;\n            }\n            if (typedEvent.type === 'auth-logout') {\n                loggedOutListeners.fireEvent();\n                return;\n            }\n        }\n        if (authState.tokens) {\n            const tokens = authState.tokens;\n            if (tokens.origin === authState.editorOrigin) {\n                /**\n                 * Here we assume that the refresh token never expires which\n                 * might not be correct. If that is the case though, we will\n                 * emit a 'logged-out' event to signal that the user has been\n                 * logged out, which could also happen at a later time anyway.\n                 *\n                 * Because this flow is done entirely locally, we do not broadcast\n                 * anything to the other tabs. They should be performing a similar\n                 * check.\n                 */\n                (async () => {\n                    const success = await tokens.activate(onFailedTokenRefresh);\n                    if (!success) {\n                        // if we got new token in the meantime we discard this error\n                        if (authState.tokens !== tokens) {\n                            return;\n                        }\n                        loggedOutListeners.fireEvent();\n                        return;\n                    }\n                    authState.authComplete.resolve();\n                })();\n                return { status: 'authorized' };\n            }\n            clearTokensInStorage();\n            authState.tokens = null;\n        }\n        const locationURL = new URL(window.location.href);\n        const { searchParams } = locationURL;\n        const updateURL = () => window.history.replaceState({}, document.title, locationURL);\n        // check for errors first, aka the user declined the authorisation or stackblitz did\n        if (searchParams.has(SEARCH_PARAM_ERROR)) {\n            const error = searchParams.get(SEARCH_PARAM_ERROR);\n            const description = searchParams.get(SEARCH_PARAM_ERROR_DESCRIPTION);\n            searchParams.delete(SEARCH_PARAM_ERROR);\n            searchParams.delete(SEARCH_PARAM_ERROR_DESCRIPTION);\n            updateURL();\n            broadcastMessage({ type: 'auth-failed', error, description });\n            return { status: 'auth-failed', error, description };\n        }\n        // if there's an auth code\n        if (searchParams.has(SEARCH_PARAM_AUTH_CODE)) {\n            const authCode = searchParams.get(SEARCH_PARAM_AUTH_CODE);\n            const editorOrigin = authState.editorOrigin;\n            searchParams.delete(SEARCH_PARAM_AUTH_CODE);\n            updateURL();\n            const codeVerifier = localStorage.getItem(STORAGE_CODE_VERIFIER_NAME);\n            if (!codeVerifier) {\n                return { status: 'need-auth' };\n            }\n            localStorage.removeItem(STORAGE_CODE_VERIFIER_NAME);\n            Tokens.fromAuthCode({\n                editorOrigin,\n                clientId: authState.clientId,\n                authCode,\n                codeVerifier,\n                redirectUri: defaultRedirectUri(),\n            })\n                .then(async (tokens) => {\n                authState.tokens = tokens;\n                assertAuthTokens(authState.tokens);\n                const success = await authState.tokens.activate(onFailedTokenRefresh);\n                // if authentication failed we throw, and we'll mark auth as failed\n                if (!success) {\n                    throw new Error();\n                }\n                authState.authComplete.resolve();\n                broadcastMessage({ type: 'auth-complete' });\n            })\n                .catch((error) => {\n                // this should never happen unless the rails app is now down for some reason?\n                console.error(error);\n                // treat it as a logged out event so that the user can retry to login\n                loggedOutListeners.fireEvent();\n                broadcastMessage({ type: 'auth-logout' });\n            });\n            return { status: 'authorized' };\n        }\n        return { status: 'need-auth' };\n    },\n    async startAuthFlow({ popup } = {}) {\n        if (!authState.initialized) {\n            throw new Error('auth.init must be called first');\n        }\n        if (popup) {\n            localStorage.setItem(STORAGE_POPUP_NAME, 'true');\n            const height = 500;\n            const width = 620;\n            const left = window.screenLeft + (window.outerWidth - width) / 2;\n            const top = window.screenTop + (window.outerHeight - height) / 2;\n            window.open(await generateOAuthRequest(), '_blank', `popup,width=${width},height=${height},left=${left},top=${top}`);\n        }\n        else {\n            window.location.href = await generateOAuthRequest();\n        }\n    },\n    async logout({ ignoreRevokeError } = {}) {\n        await authState.tokens?.revoke(authState.clientId, ignoreRevokeError ?? false);\n        loggedOutListeners.fireEvent();\n        broadcastMessage({ type: 'auth-logout' });\n    },\n    loggedIn() {\n        return authState.authComplete.promise;\n    },\n    on(event, listener) {\n        switch (event) {\n            case 'auth-failed': {\n                return authFailedListeners.listen(listener);\n            }\n            case 'logged-out': {\n                return loggedOutListeners.listen(listener);\n            }\n            default: {\n                throw new Error(`Unsupported event type '${event}'.`);\n            }\n        }\n    },\n};\nfunction onFailedTokenRefresh() {\n    loggedOutListeners.fireEvent();\n    broadcastMessage({ type: 'auth-logout' });\n}\nfunction defaultRedirectUri() {\n    return window.location.href;\n}\nasync function generateOAuthRequest() {\n    const codeVerifier = newCodeVerifier();\n    localStorage.setItem(STORAGE_CODE_VERIFIER_NAME, codeVerifier);\n    const codeChallenge = await S256(codeVerifier);\n    const url = new URL('/oauth/authorize', authState.editorOrigin);\n    const { searchParams } = url;\n    searchParams.append('response_type', 'code');\n    searchParams.append('client_id', authState.clientId);\n    searchParams.append('redirect_uri', defaultRedirectUri());\n    searchParams.append('scope', authState.oauthScope);\n    searchParams.append('code_challenge', codeChallenge);\n    searchParams.append('code_challenge_method', 'S256');\n    return url.toString();\n}\n/**\n * @internal\n */\nexport function assertAuthTokens(tokens) {\n    if (!tokens) {\n        throw new Error('Oops! Tokens is not defined when it always should be.');\n    }\n}\n","var __defProp = Object.defineProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\n\n// dist/vendor/comlink.js\nvar comlink_exports = {};\n__export(comlink_exports, {\n  createEndpoint: () => createEndpoint,\n  expose: () => expose,\n  proxy: () => proxy,\n  proxyMarker: () => proxyMarker,\n  releaseProxy: () => releaseProxy,\n  transfer: () => transfer,\n  transferHandlers: () => transferHandlers,\n  windowEndpoint: () => windowEndpoint,\n  wrap: () => wrap\n});\n\n// ../../node_modules/comlink/dist/esm/comlink.mjs\nvar proxyMarker = Symbol(\"Comlink.proxy\");\nvar createEndpoint = Symbol(\"Comlink.endpoint\");\nvar releaseProxy = Symbol(\"Comlink.releaseProxy\");\nvar throwMarker = Symbol(\"Comlink.thrown\");\nvar isObject = (val) => typeof val === \"object\" && val !== null || typeof val === \"function\";\nvar proxyTransferHandler = {\n  canHandle: (val) => isObject(val) && val[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  }\n};\nvar throwTransferHandler = {\n  canHandle: (value) => isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack\n        }\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(new Error(serialized.value.message), serialized.value);\n    }\n    throw serialized.value;\n  }\n};\nvar transferHandlers = /* @__PURE__ */ new Map([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler]\n]);\nfunction expose(obj, ep = self) {\n  ep.addEventListener(\"message\", function callback(ev) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = Object.assign({ path: [] }, ev.data);\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj2, prop) => obj2[prop], obj);\n      const rawValue = path.reduce((obj2, prop) => obj2[prop], obj);\n      switch (type) {\n        case 0:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case 1:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case 2:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case 3:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case 4:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case 5:\n          {\n            returnValue = void 0;\n          }\n          break;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue).catch((value) => {\n      return { value, [throwMarker]: 0 };\n    }).then((returnValue2) => {\n      const [wireValue, transferables] = toWireValue(returnValue2);\n      ep.postMessage(Object.assign(Object.assign({}, wireValue), { id }), transferables);\n      if (type === 5) {\n        ep.removeEventListener(\"message\", callback);\n        closeEndPoint(ep);\n      }\n    });\n  });\n  if (ep.start) {\n    ep.start();\n  }\n}\nfunction isMessagePort(endpoint) {\n  return endpoint.constructor.name === \"MessagePort\";\n}\nfunction closeEndPoint(endpoint) {\n  if (isMessagePort(endpoint))\n    endpoint.close();\n}\nfunction wrap(ep, target) {\n  return createProxy(ep, [], target);\n}\nfunction throwIfProxyReleased(isReleased) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\nfunction createProxy(ep, path = [], target = function() {\n}) {\n  let isProxyReleased = false;\n  const proxy2 = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: 5,\n            path: path.map((p) => p.toString())\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy2 };\n        }\n        const r = requestResponseMessage(ep, {\n          type: 0,\n          path: path.map((p) => p.toString())\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(ep, {\n        type: 1,\n        path: [...path, prop].map((p) => p.toString()),\n        value\n      }, transferables).then(fromWireValue);\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if (last === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: 4\n        }).then(fromWireValue);\n      }\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 2,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(ep, {\n        type: 3,\n        path: path.map((p) => p.toString()),\n        argumentList\n      }, transferables).then(fromWireValue);\n    }\n  });\n  return proxy2;\n}\nfunction myFlat(arr) {\n  return Array.prototype.concat.apply([], arr);\n}\nfunction processArguments(argumentList) {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\nvar transferCache = /* @__PURE__ */ new WeakMap();\nfunction transfer(obj, transfers) {\n  transferCache.set(obj, transfers);\n  return obj;\n}\nfunction proxy(obj) {\n  return Object.assign(obj, { [proxyMarker]: true });\n}\nfunction windowEndpoint(w, context = self, targetOrigin = \"*\") {\n  return {\n    postMessage: (msg, transferables) => w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context)\n  };\n}\nfunction toWireValue(value) {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: 3,\n          name,\n          value: serializedValue\n        },\n        transferables\n      ];\n    }\n  }\n  return [\n    {\n      type: 0,\n      value\n    },\n    transferCache.get(value) || []\n  ];\n}\nfunction fromWireValue(value) {\n  switch (value.type) {\n    case 3:\n      return transferHandlers.get(value.name).deserialize(value.value);\n    case 0:\n      return value.value;\n  }\n}\nfunction requestResponseMessage(ep, msg, transfers) {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l);\n      resolve(ev.data);\n    });\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage(Object.assign({ id }, msg), transfers);\n  });\n}\nfunction generateUUID() {\n  return new Array(4).fill(0).map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16)).join(\"-\");\n}\nexport {\n  comlink_exports as Comlink\n};\n","import { PreviewMessageType } from '../preview-message-types.js';\nconst PREVIEW_MESSAGE_TYPES = [\n    PreviewMessageType.ConsoleError,\n    PreviewMessageType.UncaughtException,\n    PreviewMessageType.UnhandledRejection,\n];\nexport function isPreviewMessage(data) {\n    if (data == null || typeof data !== 'object') {\n        return false;\n    }\n    if (!('type' in data) || !PREVIEW_MESSAGE_TYPES.includes(data.type)) {\n        return false;\n    }\n    return true;\n}\n","/**\n * @internal\n */\nexport function nullPrototype(source) {\n    const prototype = Object.create(null);\n    if (!source) {\n        return prototype;\n    }\n    return Object.assign(prototype, source);\n}\n","import { nullPrototype } from './null-prototype.js';\nconst binaryDecoder = new TextDecoder('latin1');\n/**\n * @internal\n */\nexport function toInternalFileSystemTree(tree) {\n    const newTree = { d: {} };\n    for (const name of Object.keys(tree)) {\n        const entry = tree[name];\n        if ('file' in entry) {\n            if ('symlink' in entry.file) {\n                newTree.d[name] = { f: { l: entry.file.symlink } };\n                continue;\n            }\n            const contents = entry.file.contents;\n            const stringContents = typeof contents === 'string' ? contents : binaryDecoder.decode(contents);\n            const binary = typeof contents === 'string' ? {} : { b: true };\n            newTree.d[name] = { f: { c: stringContents, ...binary } };\n            continue;\n        }\n        const newEntry = toInternalFileSystemTree(entry.directory);\n        newTree.d[name] = newEntry;\n    }\n    return newTree;\n}\n/**\n * @internal\n */\nexport function toExternalFileSystemTree(tree) {\n    const newTree = nullPrototype();\n    if ('f' in tree) {\n        throw new Error('It is not possible to export a single file in the JSON format.');\n    }\n    if ('d' in tree) {\n        for (const name of Object.keys(tree.d)) {\n            const entry = tree.d[name];\n            if ('d' in entry) {\n                newTree[name] = nullPrototype({\n                    directory: toExternalFileSystemTree(entry),\n                });\n            }\n            else if ('f' in entry) {\n                if ('c' in entry.f) {\n                    newTree[name] = nullPrototype({\n                        file: nullPrototype({\n                            contents: entry.f.b ? fromBinaryString(entry.f.c) : entry.f.c,\n                        }),\n                    });\n                }\n                else if ('l' in entry.f) {\n                    newTree[name] = nullPrototype({\n                        file: nullPrototype({\n                            symlink: entry.f.l,\n                        }),\n                    });\n                }\n            }\n        }\n    }\n    return newTree;\n}\nfunction fromBinaryString(s) {\n    const encoded = new Uint8Array(s.length);\n    for (let i = 0; i < s.length; i++) {\n        encoded[i] = s[i].charCodeAt(0);\n    }\n    return encoded;\n}\n","/**\n * The WebContainer Public API allows you build custom applications on top of an in-browser Node.js runtime.\n *\n * Its main entrypoint is the {@link WebContainer} class.\n *\n * @packageDocumentation\n */\nimport { authState, assertAuthTokens } from './internal/auth-state.js';\nimport { PreviewMessageType } from './preview-message-types.js';\nimport { Comlink } from './vendor/index.js';\nimport { auth as authImpl } from './internal/auth-state.js';\nimport { addAccessTokenChangedListener } from './internal/tokens.js';\nimport { iframeSettings } from './internal/iframe-url.js';\nimport { isPreviewMessage } from './utils.js';\nimport { toExternalFileSystemTree, toInternalFileSystemTree } from './utils/file-system.js';\nexport const auth = authImpl;\nexport { PreviewMessageType };\nexport * from './utils.js';\nlet bootPromise = null;\nlet cachedServerPromise = null;\nlet cachedBootOptions = {};\nconst decoder = new TextDecoder();\nconst encoder = new TextEncoder();\n/**\n * The main export of this library. An instance of `WebContainer` represents a runtime\n * ready to be used.\n */\nexport class WebContainer {\n    _instance;\n    _runtimeInfo;\n    /**\n     * Gives access to the underlying file system.\n     */\n    fs;\n    /** @internal */\n    static _instance = null;\n    /** @internal */\n    static _teardownPromise = null;\n    _tornDown = false;\n    _unsubscribeFromTokenChangedListener = () => { };\n    /** @internal */\n    constructor(\n    /** @internal */\n    _instance, fs, previewScript, \n    /** @internal */\n    _runtimeInfo) {\n        this._instance = _instance;\n        this._runtimeInfo = _runtimeInfo;\n        this.fs = new FileSystemAPIClient(fs);\n        // forward the credentials to webcontainer if needed\n        if (authState.initialized) {\n            this._unsubscribeFromTokenChangedListener = addAccessTokenChangedListener((accessToken) => {\n                this._instance.setCredentials({ accessToken, editorOrigin: authState.editorOrigin });\n            });\n            (async () => {\n                await authState.authComplete.promise;\n                if (this._tornDown) {\n                    return;\n                }\n                assertAuthTokens(authState.tokens);\n                await this._instance.setCredentials({\n                    accessToken: authState.tokens.access,\n                    editorOrigin: authState.editorOrigin,\n                });\n            })().catch((error) => {\n                // print the error as this is likely a bug in webcontainer\n                console.error(error);\n            });\n        }\n    }\n    async spawn(command, optionsOrArgs, options) {\n        let args = [];\n        if (Array.isArray(optionsOrArgs)) {\n            args = optionsOrArgs;\n        }\n        else {\n            options = optionsOrArgs;\n        }\n        let output = undefined;\n        let outputStream = new ReadableStream();\n        if (options?.output !== false) {\n            const result = streamWithPush();\n            output = result.push;\n            outputStream = result.stream;\n        }\n        let stdout = undefined;\n        let stdoutStream;\n        let stderr = undefined;\n        let stderrStream;\n        const wrappedOutput = proxyListener(binaryListener(output));\n        const wrappedStdout = proxyListener(binaryListener(stdout));\n        const wrappedStderr = proxyListener(binaryListener(stderr));\n        const process = await this._instance.run({\n            command,\n            args,\n            cwd: options?.cwd,\n            env: options?.env,\n            terminal: options?.terminal,\n        }, wrappedStdout, wrappedStderr, wrappedOutput);\n        return new WebContainerProcessImpl(process, outputStream, stdoutStream, stderrStream);\n    }\n    async export(path, options) {\n        const serializeOptions = {\n            format: options?.format ?? 'json',\n            includes: options?.includes,\n            excludes: options?.excludes,\n            external: true,\n        };\n        const result = await this._instance.serialize(path, serializeOptions);\n        if (serializeOptions.format === 'json') {\n            const data = JSON.parse(decoder.decode(result));\n            return toExternalFileSystemTree(data);\n        }\n        return result;\n    }\n    on(event, listener) {\n        if (event === 'preview-message') {\n            const originalListener = listener;\n            listener = ((message) => {\n                if (isPreviewMessage(message)) {\n                    originalListener(message);\n                }\n            });\n        }\n        const { listener: wrapped, subscribe } = syncSubscription(listener);\n        return subscribe(this._instance.on(event, Comlink.proxy(wrapped)));\n    }\n    /**\n     * Mounts a tree of files into the filesystem. This can be specified as a tree object ({@link FileSystemTree})\n     * or as a binary snapshot generated by [`@webcontainer/snapshot`](https://www.npmjs.com/package/@webcontainer/snapshot).\n     *\n     * @param snapshotOrTree - A tree of files, or a binary snapshot. Note that binary payloads will be transferred.\n     * @param options.mountPoint - Specifies a nested path where the tree should be mounted.\n     */\n    mount(snapshotOrTree, options) {\n        const payload = snapshotOrTree instanceof Uint8Array\n            ? snapshotOrTree\n            : snapshotOrTree instanceof ArrayBuffer\n                ? new Uint8Array(snapshotOrTree)\n                : encoder.encode(JSON.stringify(toInternalFileSystemTree(snapshotOrTree)));\n        return this._instance.loadFiles(Comlink.transfer(payload, [payload.buffer]), {\n            mountPoints: options?.mountPoint,\n        });\n    }\n    /**\n     * Set a custom script to be injected into all previews. When this function is called, every\n     * future page reload will contain the provided script tag on all HTML responses.\n     *\n     * Note:\n     *\n     * When this function resolves, every preview reloaded _after_ will have the new script.\n     * Existing preview have to be explicitely reloaded.\n     *\n     * To reload a preview you can use `reloadPreview`.\n     *\n     * @param scriptSrc Source for the script tag.\n     * @param options Options to define which type of script this is.\n     */\n    setPreviewScript(scriptSrc, options) {\n        return this._instance.setPreviewScript(scriptSrc, options);\n    }\n    /**\n     * The default value of the `PATH` environment variable for processes started through {@link spawn}.\n     */\n    get path() {\n        return this._runtimeInfo.path;\n    }\n    /**\n     * The full path to the working directory (see {@link FileSystemAPI}).\n     */\n    get workdir() {\n        return this._runtimeInfo.cwd;\n    }\n    /**\n     * Destroys the WebContainer instance, turning it unusable, and releases its resources. After this,\n     * a new WebContainer instance can be obtained by calling {@link WebContainer.boot | `boot`}.\n     *\n     * All entities derived from this instance (e.g. processes, the file system, etc.) also become unusable\n     * after calling this method.\n     */\n    teardown() {\n        if (this._tornDown) {\n            throw new Error('WebContainer already torn down');\n        }\n        this._tornDown = true;\n        this._unsubscribeFromTokenChangedListener();\n        const teardownFn = async () => {\n            try {\n                await this.fs._teardown();\n                await this._instance.teardown();\n            }\n            finally {\n                this._instance[Comlink.releaseProxy]();\n                if (WebContainer._instance === this) {\n                    WebContainer._instance = null;\n                }\n            }\n        };\n        WebContainer._teardownPromise = teardownFn();\n    }\n    /**\n     * Boots a WebContainer. Only a single instance of WebContainer can be booted concurrently\n     * (see {@link WebContainer.teardown | `teardown`}).\n     *\n     * Booting WebContainer is an expensive operation.\n     */\n    static async boot(options = {}) {\n        await this._teardownPromise;\n        WebContainer._teardownPromise = null;\n        const { workdirName } = options;\n        if (window.crossOriginIsolated && options.coep === 'none') {\n            console.warn(`A Cross-Origin-Embedder-Policy header is required in cross origin isolated environments.\\nSet the 'coep' option to 'require-corp'.`);\n        }\n        if (workdirName?.includes('/') || workdirName === '..' || workdirName === '.') {\n            throw new Error('workdirName should be a valid folder name');\n        }\n        // signal that boot was called to auth module as calling auth.init after boot is likely incorrect\n        authState.bootCalled = true;\n        // try to \"acquire the lock\", i.e. wait for any ongoing boot request to finish\n        while (bootPromise) {\n            await bootPromise;\n        }\n        if (WebContainer._instance) {\n            throw new Error('Only a single WebContainer instance can be booted');\n        }\n        const instancePromise = unsynchronizedBoot(options);\n        // the \"lock\" is a promise for the ongoing boot that never fails\n        bootPromise = instancePromise.catch(() => { });\n        try {\n            const instance = await instancePromise;\n            WebContainer._instance = instance;\n            return instance;\n        }\n        finally {\n            // release the \"lock\"\n            bootPromise = null;\n        }\n    }\n}\n/**\n * Configure an API key to be used for this instance of WebContainer.\n *\n * @param key WebContainer API key.\n */\nexport function configureAPIKey(key) {\n    if (authState.bootCalled) {\n        throw new Error('`configureAPIKey` should always be called before `WebContainer.boot`');\n    }\n    iframeSettings.setQueryParam('client_id', key);\n}\nconst DIR_ENTRY_TYPE_FILE = 1;\nconst DIR_ENTRY_TYPE_DIR = 2;\n/**\n * @internal\n */\nclass DirEntImpl {\n    name;\n    _type;\n    constructor(name, _type) {\n        this.name = name;\n        this._type = _type;\n    }\n    isFile() {\n        return this._type === DIR_ENTRY_TYPE_FILE;\n    }\n    isDirectory() {\n        return this._type === DIR_ENTRY_TYPE_DIR;\n    }\n}\nclass FSWatcher {\n    _apiClient;\n    _path;\n    _options;\n    _listener;\n    _wrappedListener;\n    _watcher;\n    _closed = false;\n    constructor(_apiClient, _path, _options, _listener) {\n        this._apiClient = _apiClient;\n        this._path = _path;\n        this._options = _options;\n        this._listener = _listener;\n        this._apiClient._watchers.add(this);\n        this._wrappedListener = (event, filename) => {\n            if (this._listener && !this._closed) {\n                this._listener(event, filename);\n            }\n        };\n        this._apiClient._fs\n            .watch(this._path, this._options, proxyListener(this._wrappedListener))\n            .then((_watcher) => {\n            this._watcher = _watcher;\n            if (this._closed) {\n                return this._teardown();\n            }\n            return undefined;\n        })\n            .catch(console.error);\n    }\n    async close() {\n        if (!this._closed) {\n            this._closed = true;\n            this._apiClient._watchers.delete(this);\n            await this._teardown();\n        }\n    }\n    /**\n     * @internal\n     */\n    async _teardown() {\n        await this._watcher?.close().finally(() => {\n            this._watcher?.[Comlink.releaseProxy]();\n        });\n    }\n}\n/**\n * @internal\n */\nclass WebContainerProcessImpl {\n    output;\n    input;\n    exit;\n    _process;\n    stdout;\n    stderr;\n    constructor(process, output, stdout, stderr) {\n        this.output = output;\n        this._process = process;\n        this.input = new WritableStream({\n            write: (data) => {\n                // this promise is not supposed to fail anyway\n                this._getProcess()\n                    ?.write(data)\n                    .catch(() => { });\n            },\n        });\n        this.exit = this._onExit();\n        this.stdout = stdout;\n        this.stderr = stderr;\n    }\n    kill() {\n        this._process?.kill();\n    }\n    resize(dimensions) {\n        this._getProcess()?.resize(dimensions);\n    }\n    async _onExit() {\n        try {\n            return await this._process.onExit;\n        }\n        finally {\n            this._process?.[Comlink.releaseProxy]();\n            this._process = null;\n        }\n    }\n    _getProcess() {\n        if (this._process == null) {\n            console.warn('This process already exited');\n        }\n        return this._process;\n    }\n}\n/**\n * @internal\n */\nclass FileSystemAPIClient {\n    _fs;\n    _watchers = new Set([]);\n    constructor(fs) {\n        this._fs = fs;\n    }\n    rm(...args) {\n        return this._fs.rm(...args);\n    }\n    async readFile(path, encoding) {\n        return await this._fs.readFile(path, encoding);\n    }\n    async rename(oldPath, newPath) {\n        return await this._fs.rename(oldPath, newPath);\n    }\n    async writeFile(path, data, options) {\n        if (data instanceof Uint8Array) {\n            const buffer = data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            data = Comlink.transfer(new Uint8Array(buffer), [buffer]);\n        }\n        await this._fs.writeFile(path, data, options);\n    }\n    async readdir(path, options) {\n        const result = await this._fs.readdir(path, options);\n        if (isStringArray(result)) {\n            return result;\n        }\n        if (isTypedArrayCollection(result)) {\n            return result;\n        }\n        const entries = result.map((entry) => new DirEntImpl(entry.name, entry['Symbol(type)']));\n        return entries;\n    }\n    async mkdir(path, options) {\n        return await this._fs.mkdir(path, options);\n    }\n    watch(path, options, listener) {\n        if (typeof options === 'function') {\n            listener = options;\n            options = null;\n        }\n        return new FSWatcher(this, path, options, listener);\n    }\n    /**\n     * @internal\n     */\n    async _teardown() {\n        this._fs[Comlink.releaseProxy]();\n        await Promise.all([...this._watchers].map((watcher) => watcher.close()));\n    }\n}\nasync function unsynchronizedBoot(options) {\n    const { serverPromise } = serverFactory(options);\n    const server = await serverPromise;\n    const instance = await server.build({\n        host: window.location.host,\n        version: \"1.6.1\",\n        workdirName: options.workdirName,\n        forwardPreviewErrors: options.forwardPreviewErrors,\n    });\n    const [fs, previewScript, runtimeInfo] = await Promise.all([\n        instance.fs(),\n        instance.previewScript(),\n        instance.runtimeInfo(),\n    ]);\n    return new WebContainer(instance, fs, previewScript, runtimeInfo);\n}\nfunction binaryListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return (data) => {\n        if (data instanceof Uint8Array) {\n            listener(decoder.decode(data));\n        }\n        else if (data == null) {\n            listener(null);\n        }\n    };\n}\nfunction proxyListener(listener) {\n    if (listener == null) {\n        return undefined;\n    }\n    return Comlink.proxy(listener);\n}\nfunction serverFactory(options) {\n    if (cachedServerPromise != null) {\n        if (options.coep !== cachedBootOptions.coep) {\n            console.warn(`Attempting to boot WebContainer with 'coep: ${options.coep}'`);\n            console.warn(`First boot had 'coep: ${cachedBootOptions.coep}', new settings will not take effect!`);\n        }\n        return { serverPromise: cachedServerPromise };\n    }\n    if (options.coep) {\n        iframeSettings.setQueryParam('coep', options.coep);\n    }\n    if (options.experimentalNode) {\n        iframeSettings.setQueryParam('experimental_node', '1');\n    }\n    const iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n    iframe.setAttribute('allow', 'cross-origin-isolated');\n    const url = iframeSettings.url;\n    iframe.src = url.toString();\n    const { origin } = url;\n    cachedBootOptions = { ...options };\n    cachedServerPromise = new Promise((resolve) => {\n        const onMessage = (event) => {\n            if (event.origin !== origin) {\n                return;\n            }\n            const { data } = event;\n            if (data.type === 'init') {\n                resolve(Comlink.wrap(event.ports[0]));\n                return;\n            }\n            if (data.type === 'warning') {\n                console[data.level].call(console, data.message);\n                return;\n            }\n        };\n        window.addEventListener('message', onMessage);\n    });\n    document.body.insertBefore(iframe, null);\n    return { serverPromise: cachedServerPromise };\n}\nfunction isStringArray(list) {\n    return typeof list[0] === 'string';\n}\nfunction isTypedArrayCollection(list) {\n    return list[0] instanceof Uint8Array;\n}\nfunction streamWithPush() {\n    let controller = null;\n    const stream = new ReadableStream({\n        start(controller_) {\n            controller = controller_;\n        },\n    });\n    const push = (item) => {\n        if (item != null) {\n            controller?.enqueue(item);\n        }\n        else {\n            controller?.close();\n            controller = null;\n        }\n    };\n    return { stream, push };\n}\nfunction syncSubscription(listener) {\n    let stopped = false;\n    let unsubscribe = () => { };\n    const wrapped = ((...args) => {\n        if (stopped) {\n            return;\n        }\n        listener(...args);\n    });\n    return {\n        subscribe(promise) {\n            promise.then((unsubscribe_) => {\n                unsubscribe = unsubscribe_;\n                if (stopped) {\n                    unsubscribe();\n                }\n            });\n            return () => {\n                stopped = true;\n                unsubscribe();\n            };\n        },\n        listener: wrapped,\n    };\n}\n"],"names":["Error","stack","params","editorOrigin","iframeSettings","URL","globalThis","WEBCONTAINER_API_IFRAME_URL","origin","newOrigin","setQueryParam","key","value","url","this","pathname","param","searchParams","set","PreviewMessageType","resolve","promise","reset","Promise","_resolve","resettablePromise","__defProp","Object","defineProperty","comlink_exports","target","all","name","get","enumerable","__export","createEndpoint","expose","proxy","proxyMarker","releaseProxy","transfer","transferHandlers","windowEndpoint","wrap","Symbol","throwMarker","isObject","val","Map","canHandle","serialize","obj","port1","port2","MessageChannel","deserialize","port","start","serialized","isError","message","assign","ep","self","addEventListener","callback","ev","data","id","type","path","argumentList","map","fromWireValue","returnValue","parent","slice","reduce","obj2","prop","rawValue","apply","catch","then","returnValue2","wireValue","transferables","toWireValue","postMessage","removeEventListener","closeEndPoint","endpoint","constructor","isMessagePort","close","createProxy","throwIfProxyReleased","isReleased","isProxyReleased","proxy2","Proxy","_target","requestResponseMessage","p","toString","length","r","bind","_thisArg","rawArgumentList","last","processArguments","construct","processed","v","arr","Array","prototype","concat","transferCache","WeakMap","transfers","w","context","targetOrigin","msg","handler","serializedValue","fill","Math","floor","random","Number","MAX_SAFE_INTEGER","join","l","PREVIEW_MESSAGE_TYPES","ConsoleError","UncaughtException","UnhandledRejection","nullPrototype","source","create","binaryDecoder","TextDecoder","toInternalFileSystemTree","tree","newTree","d","keys","entry","file","f","symlink","contents","stringContents","decode","binary","b","c","newEntry","directory","toExternalFileSystemTree","fromBinaryString","s","encoded","Uint8Array","i","charCodeAt","bootPromise","cachedServerPromise","cachedBootOptions","decoder","encoder","TextEncoder","_WebContainer","_instance","fs","previewScript","_runtimeInfo","__publicField","FileSystemAPIClient","spawn","command","optionsOrArgs","options","output","args","isArray","stdout","stderr","outputStream","ReadableStream","result","controller","stream","controller_","push","item","enqueue","streamWithPush","wrappedOutput","proxyListener","binaryListener","wrappedStdout","wrappedStderr","process","run","cwd","env","terminal","WebContainerProcessImpl","stdoutStream","stderrStream","serializeOptions","format","includes","excludes","external","JSON","parse","on","event","listener","originalListener","wrapped","subscribe","stopped","unsubscribe","unsubscribe_","syncSubscription","Comlink","mount","snapshotOrTree","payload","ArrayBuffer","encode","stringify","loadFiles","buffer","mountPoints","mountPoint","setPreviewScript","scriptSrc","workdir","teardown","_tornDown","_unsubscribeFromTokenChangedListener","_teardownPromise","async","_teardown","teardownFn","boot","workdirName","window","crossOriginIsolated","coep","instancePromise","serverPromise","experimentalNode","iframe","document","createElement","style","display","setAttribute","src","onMessage","ports","body","insertBefore","serverFactory","server","instance","build","host","location","version","forwardPreviewErrors","runtimeInfo","WebContainer","unsynchronizedBoot","DirEntImpl","_type","isFile","isDirectory","FSWatcher","_apiClient","_path","_options","_listener","_watchers","add","_wrappedListener","filename","_closed","_fs","watch","_watcher","console","error","delete","finally","_process","input","WritableStream","write","_getProcess","exit","_onExit","kill","resize","dimensions","onExit","Set","rm","readFile","encoding","rename","oldPath","newPath","writeFile","byteOffset","byteLength","readdir","list","isTypedArrayCollection","mkdir","watcher"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10]}