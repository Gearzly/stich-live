{"version":3,"file":"animation-C79p8Q3a.js","sources":["../../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../../node_modules/motion-utils/dist/es/noop.mjs","../../../node_modules/motion-utils/dist/es/errors.mjs","../../../node_modules/motion-utils/dist/es/memo.mjs","../../../node_modules/motion-utils/dist/es/progress.mjs","../../../node_modules/motion-utils/dist/es/time-conversion.mjs","../../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","../../../node_modules/motion-dom/dist/es/animation/controls/Group.mjs","../../../node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","../../../node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","../../../node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/flags.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/memo.mjs","../../../node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","../../../node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../../../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../../../node_modules/motion-dom/dist/es/gestures/hover.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../../../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../../../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","../../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../../node_modules/framer-motion/dist/es/utils/array.mjs","../../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../../node_modules/framer-motion/dist/es/value/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../../node_modules/framer-motion/dist/es/easing/back.mjs","../../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../../node_modules/framer-motion/dist/es/utils/distance.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../../../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../../../node_modules/framer-motion/dist/es/projection/node/state.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../../../node_modules/framer-motion/dist/es/utils/delay.mjs","../../../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../../../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../../node_modules/framer-motion/dist/es/render/store.mjs","../../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../../../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.2\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.2\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.2 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["LayoutGroupContext","createContext","PresenceContext","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","isBrowser","window","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","noop","any","invariant","memo","callback","result","progress","from","to","value","toFromDifference","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","state","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","key","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","has","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","forEach","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","frame","cancelFrame","frameSteps","requestAnimationFrame","LazyContext","strict","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","props","some","name","validMotionProps","isValidMotionProp","startsWith","shouldForward","isValidProp","require","default","_a","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","set","MotionContext","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","motionComponentSymbol","Symbol","for","isRefObject","ref","Object","prototype","hasOwnProperty","call","useMotionRef","visualState","visualElement","externalRef","useCallback","instance","onMount","mount","unmount","current","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","microtask","queueMicrotask","SwitchLayoutGroupContext","useVisualElement","Component","createVisualElement","ProjectionNodeConstructor","_b","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","blockInitialAnimation","initialLayoutGroupConfig","projection","type","initialPromotionConfig","layoutId","dragConstraints","layoutScroll","layoutRoot","latestValues","getClosestProjectingNode","setOptions","alwaysMeasureLayout","animationType","createProjectionNode","isMounted","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionHasOptimisedAnimation","MotionIsMounted","updateFeatures","animationState","animateChanges","MotionHandoffMarkAsComplete","options","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","layoutProjection","combined","ProjectionNode","getProjectionFunctionality","jsxs","Provider","children","jsx","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","id","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","getValueState","values","getVelocity","resolveVariantFromProps","definition","custom","velocity","isKeyframesTarget","resolveFinalValueInKeyframes","isMotionValue","resolveMotionValue","unwrappedValue","mix","toValue","makeUseVisualState","config","make","scrapeMotionValuesFromProps","createRenderState","onUpdate","makeLatestValues","renderState","makeState","init","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","resolved","transitionEnd","transition","target","valueTarget","transformPropOrder","transformProps","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","getValueAsType","transform","clamp","number","parse","parseFloat","alpha","scale","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","x","y","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","round","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","offset","array","camelKeys","calcOrigin","origin","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","element","styleProp","assign","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","scaleCorrectors","isForcedMotionValue","prevProps","newValues","getValue","liveStyle","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","layoutProps","svgMotionConfig","needsMeasure","getBBox","getBoundingClientRect","e","updateSVGDimensions","tagName","htmlMotionConfig","copyRawValuesOnly","source","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createElement","createMotionComponentFactory","shallowCompare","next","prev","prevLength","resolveVariant","getProps","supportsScrollTimeline","ScrollTimeline","BaseGroupPlaybackControls","constructor","animations","this","stop","runAll","filter","finished","Promise","all","map","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","time","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","getValueTransition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","generateLinearEasing","resolution","points","numPoints","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","Element","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","positionalKeys","clearTime","newTime","addUniqueItem","arr","item","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","MotionValue","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","addValue","addValueToWillChange","willChange","getOptimisedAppearId","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","isNone","sanitize","floatRegex","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","getState","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileDrag","whileFocus","Feature","node","updateAnimationControlsSubscription","unmountControls","subscribe","prevAnimate","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","useId","usePresence","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionCancelOptimisedAnimation","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","prevLayout","layoutCorrected","phase","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","xLength","yLength","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","globalTapTarget","onFocus","isFocusVisible","matches","onBlur","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion"],"mappings":"8EAGA,MAAMA,EAAqBC,EAAAA,cAAc,ICGzC,MAAMC,EAAkBD,EAAAA,cAAc,MCAhCE,EAAsBF,EAAAA,cAAc,CACtCG,mBAAqBC,GAAMA,EAC3BC,UAAU,EACVC,cAAe,UCTnB,MAAMC,EAA8B,oBAAXC,OCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCF1DC,EAAQC,GAAQA,ECEtB,IAAIC,EAAYF,ECFhB,SAASG,EAAKC,GACV,IAAIC,EACJ,MAAO,UACY,IAAXA,IACAA,EAASD,KACNC,EAEf,CCKA,MAAMC,EAAW,CAACC,EAAMC,EAAIC,KACxB,MAAMC,EAAmBF,EAAKD,EAC9B,OAA4B,IAArBG,EAAyB,GAAKD,EAAQF,GAAQG,GCRnDC,EAAyBC,GAAsB,IAAVA,EAErCC,EAAyBC,GAAiBA,EAAe,ICTzDC,GAEe,ECCrB,MAAMC,EAAa,CACf,OACA,mBACA,SACA,YACA,SACA,cAGJ,SAASC,EAAoBC,EAAmBC,GAC5C,IAAIC,GAAe,EACfC,GAAoB,EACxB,MAAMC,EAAQ,CACVC,MAAO,EACPC,UAAW,EACXC,cAAc,GAEZC,EAAmB,IAAON,GAAe,EACzCO,EAAQX,EAAWY,OAAO,CAACC,EAAKC,KAClCD,EAAIC,GCtBZ,SAA0BV,GAKtB,IAAIW,MAAgBC,IAChBC,MAAgBD,IAKhBP,GAAe,EACfS,GAAiB,EAIrB,MAAMC,MAAkBC,QACxB,IAAIC,EAAkB,CAClBd,MAAO,EACPC,UAAW,EACXC,cAAc,GAElB,SAASa,EAAgBlC,GACjB+B,EAAYI,IAAInC,KAChBoC,EAAKC,SAASrC,GACdgB,KAEJhB,EAASiC,EACb,CACA,MAAMG,EAAO,CAITC,SAAU,CAACrC,EAAUsC,GAAY,EAAOC,GAAY,KAChD,MACMC,EADoBD,GAAalB,EACLM,EAAYE,EAK9C,OAJIS,GACAP,EAAYU,IAAIzC,GACfwC,EAAML,IAAInC,IACXwC,EAAMC,IAAIzC,GACPA,GAKX0C,OAAS1C,IACL6B,EAAUc,OAAO3C,GACjB+B,EAAYY,OAAO3C,IAKvB4C,QAAUC,IACNZ,EAAkBY,EAMdxB,EACAS,GAAiB,GAGrBT,GAAe,GACdM,EAAWE,GAAa,CAACA,EAAWF,GAErCA,EAAUmB,QAAQZ,GAGlBP,EAAUoB,QACV1B,GAAe,EACXS,IACAA,GAAiB,EACjBM,EAAKQ,QAAQC,OAIzB,OAAOT,CACX,CDxDmBY,CAAiB1B,GACrBG,GACR,CAAA,IACGwB,KAAEA,EAAAC,iBAAMA,EAAAC,OAAkBA,YAAQC,EAAAC,OAAWA,EAAAC,WAAQA,GAAe/B,EACpEgC,EAAe,KACjB,MAAMnC,EAEAoC,YAAYC,MAClBzC,GAAe,EACfE,EAAMC,MAAQF,EACR,IAAO,GACPyC,KAAKC,IAAID,KAAKE,IAAIxC,EAAYF,EAAME,UAtB/B,IAsBuD,GAClEF,EAAME,UAAYA,EAClBF,EAAMG,cAAe,EAErB4B,EAAKL,QAAQ1B,GACbgC,EAAiBN,QAAQ1B,GACzBiC,EAAOP,QAAQ1B,GACfkC,EAAUR,QAAQ1B,GAClBmC,EAAOT,QAAQ1B,GACfoC,EAAWV,QAAQ1B,GACnBA,EAAMG,cAAe,EACjBL,GAAgBD,IAChBE,GAAoB,EACpBH,EAAkByC,KAwB1B,MAAO,CAAElB,SAdQzB,EAAWY,OAAO,CAACC,EAAKC,KACrC,MAAMU,EAAOb,EAAMG,GAMnB,OALAD,EAAIC,GAAO,CAACkB,EAASN,GAAY,EAAOC,GAAY,KAC3CvB,IATTA,GAAe,EACfC,GAAoB,EACfC,EAAMG,cACPP,EAAkByC,IAQXnB,EAAKC,SAASO,EAASN,EAAWC,IAEtCd,GACR,CAAA,GAMgBiB,OALHE,IACZ,IAAA,IAASiB,EAAI,EAAGA,EAAIjD,EAAWkD,OAAQD,IACnCtC,EAAMX,EAAWiD,IAAInB,OAAOE,IAGT1B,QAAOK,QACtC,CEpEA,MAAQc,SAAU0B,EAAOrB,OAAQsB,EAAa9C,MAAO2B,EAAWtB,MAAO0C,GAAgBpD,EAAqD,oBAA1BqD,sBAAwCA,sBAAwBtE,GAAM,GCAlLuE,EAAcnF,EAAAA,cAAc,CAAEoF,QAAQ,ICHtCC,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAA,EAC3B,IAAA,MAAWrD,MAAO2C,EACdU,EAAmBrD,IAAO,CACtBsD,UAAYC,GAAUZ,EAAa3C,IAAKwD,KAAMC,KAAWF,EAAME,KCjBvE,MAAMC,MAAuBxD,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,SACA,UACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,kBACA,eACA,aAUJ,SAASyD,EAAkB3D,GACvB,OAAQA,EAAI4D,WAAW,UAClB5D,EAAI4D,WAAW,SAAmB,cAAR5D,GAC3BA,EAAI4D,WAAW,WACf5D,EAAI4D,WAAW,UACf5D,EAAI4D,WAAW,UACf5D,EAAI4D,WAAW,aACfF,EAAiBjD,IAAIT,EAC7B,CCpDA,IAAI6D,EAAiB7D,IAAS2D,EAAkB3D,GAoBhD,KAnBiC8D,EAyBLC,QAAQ,0BAA0BC,WArB1DH,EAAiB7D,GAAQA,EAAI4D,WAAW,OAASD,EAAkB3D,GAAO8D,EAAY9D,GAsB1F,CAAA,MACOiE,IAEP,CA7BA,IAAiCH,ECDjC,SAASI,EAA8BC,GACnC,GAAqB,oBAAVC,MACP,OAAOD,EAMX,MAAME,MAAqBC,IAO3B,OAAO,IAAIF,MANuB,IAAIG,IAI3BJ,KAAoBI,GAEa,CAMxCC,IAAK,CAACC,EAASzE,IACC,WAARA,EACOmE,GAINE,EAAe5D,IAAIT,IACpBqE,EAAeK,IAAI1E,EAAKmE,EAAiBnE,IAEtCqE,EAAeG,IAAIxE,KAGtC,CChCA,MAAM2E,EAAgBrH,EAAAA,cAAc,ICApC,SAASsH,EAAeC,GACpB,MAAoB,iBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,OAAc,OAANA,GACS,iBAANA,GACY,mBAAZA,EAAEI,KACjB,CCJA,MAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,aAAcD,GCLpC,SAASE,EAAsB7B,GAC3B,OAAQyB,EAAoBzB,EAAM8B,UAC9BF,EAAa3B,KAAMC,GAASmB,EAAerB,EAAME,IACzD,CACA,SAAS6B,EAAc/B,GACnB,OAAOgC,QAAQH,EAAsB7B,IAAUA,EAAMiC,SACzD,CCNA,SAASC,EAAuBlC,GAC5B,MAAMmC,QAAEA,UAASL,GCFrB,SAAgC9B,EAAOoC,GACnC,GAAIP,EAAsB7B,GAAQ,CAC9B,MAAMmC,QAAEA,EAAAL,QAASA,GAAY9B,EAC7B,MAAO,CACHmC,SAAqB,IAAZA,GAAqBd,EAAec,GACvCA,OACA,EACNL,QAAST,EAAeS,GAAWA,OAAU,EAErD,CACA,OAAyB,IAAlB9B,EAAMqC,QAAoBD,EAAU,CAAA,CAC/C,CDTiCE,CAAuBtC,EAAOuC,EAAAA,WAAWnB,IACtE,OAAOoB,UAAQ,KAAA,CAASL,UAASL,YAAY,CAACW,EAA0BN,GAAUM,EAA0BX,IAChH,CACA,SAASW,EAA0BC,GAC/B,OAAOnB,MAAMC,QAAQkB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,MAAME,EAAwBC,OAAOC,IAAI,yBCAzC,SAASC,EAAYC,GACjB,OAAQA,GACW,iBAARA,GACPC,OAAOC,UAAUC,eAAeC,KAAKJ,EAAK,UAClD,CCGA,SAASK,EAAaC,EAAaC,EAAeC,GAC9C,OAAOC,EAAAA,YAAaC,IACZA,GACAJ,EAAYK,SAAWL,EAAYK,QAAQD,GAE3CH,IACIG,EACAH,EAAcK,MAAMF,GAGpBH,EAAcM,WAGlBL,IAC2B,mBAAhBA,EACPA,EAAYE,GAEPX,EAAYS,KACjBA,EAAYM,QAAUJ,KASlC,CAACH,GACL,CChCA,MAAMQ,EAAeC,GAAQA,EAAIC,QAAQ,mBAAoB,SAASC,cCAhEC,EAA+B,QAAUJ,EADjB,mBCAtB3G,SAAUgH,GAAuCxI,EAAoByI,gBAAgB,GCIvFC,EAA2BvK,EAAAA,cAAc,ICK/C,SAASwK,EAAiBC,EAAWlB,EAAatD,EAAOyE,EAAqBC,GAC1E,IAAIhE,EAAIiE,EACR,MAAQpB,cAAeqB,GAAWrC,EAAAA,WAAWnB,GACvCyD,EAActC,EAAAA,WAAWrD,GACzB4F,EAAkBvC,EAAAA,WAAWvI,GAC7B+K,EAAsBxC,EAAAA,WAAWtI,GAAqBI,cACtD2K,EAAmBC,EAAAA,OAAO,MAIhCR,EAAsBA,GAAuBI,EAAYK,UACpDF,EAAiBlB,SAAWW,IAC7BO,EAAiBlB,QAAUW,EAAoBD,EAAW,CACtDlB,cACAsB,SACA5E,QACA8E,kBACAK,wBAAuBL,IACW,IAA5BA,EAAgB3C,QAEtB4C,yBAGR,MAAMxB,EAAgByB,EAAiBlB,QAKjCsB,EAA2B7C,EAAAA,WAAW+B,IACxCf,GACCA,EAAc8B,aACfX,GACwB,SAAvBnB,EAAc+B,MAA0C,QAAvB/B,EAAc+B,MA2DxD,SAA8B/B,EAAevD,EAAO0E,EAA2Ba,GAC3E,MAAMC,SAAEA,EAAU3F,OAAAA,EAAQN,KAAAA,EAAAA,gBAAMkG,EAAAC,aAAiBA,EAAAC,WAAcA,GAAgB3F,EAC/EuD,EAAc8B,WAAa,IAAIX,EAA0BnB,EAAcqC,aAAc5F,EAAM,8BACrF,EACA6F,EAAyBtC,EAAcqB,SAC7CrB,EAAc8B,WAAWS,WAAW,CAChCN,WACA3F,OAAAA,EACAkG,oBAAqB/D,QAAQzC,IAAUkG,GAAmB1C,EAAY0C,GACtElC,gBAQAyC,cAAiC,iBAAXnG,EAAsBA,EAAS,OACrD0F,yBACAG,eACAC,cAER,CAhFQM,CAAqBjB,EAAiBlB,QAAS9D,EAAO0E,EAA2BU,GAErF,MAAMc,EAAYjB,EAAAA,QAAO,GACzBkB,EAAAA,mBAAmB,KAKX5C,GAAiB2C,EAAUpC,SAC3BP,EAAcrF,OAAO8B,EAAO8E,KAOpC,MAAMsB,EAAoBpG,EAAMmE,GAC1BkC,EAAepB,EAAAA,OAAOjD,QAAQoE,MACY,QAAzC1F,EAAKnG,OAAO+L,+BAA4C,IAAP5F,OAAgB,EAASA,EAAG0C,KAAK7I,OAAQ6L,MAC9C,QAA7CzB,EAAKpK,OAAOgM,mCAAgD,IAAP5B,OAAgB,EAASA,EAAGvB,KAAK7I,OAAQ6L,KAqCpG,OApCA5L,EAA0B,KACjB+I,IAEL2C,EAAUpC,SAAU,EACpBvJ,OAAOiM,iBAAkB,EACzBjD,EAAckD,iBACdrC,EAAUhG,OAAOmF,EAAcnF,QAW3BiI,EAAavC,SAAWP,EAAcmD,gBACtCnD,EAAcmD,eAAeC,oBAGrCjM,EAAAA,UAAU,KACD6I,KAEA8C,EAAavC,SAAWP,EAAcmD,gBACvCnD,EAAcmD,eAAeC,iBAE7BN,EAAavC,UAEbO,eAAe,KACX,IAAI3D,EAC0C,QAA7CA,EAAKnG,OAAOqM,mCAAgD,IAAPlG,GAAyBA,EAAG0C,KAAK7I,OAAQ6L,KAEnGC,EAAavC,SAAU,MAGxBP,CACX,CAwBA,SAASsC,EAAyBtC,GAC9B,GAAKA,EAEL,OAAiD,IAA1CA,EAAcsD,QAAQC,gBACvBvD,EAAc8B,WACdQ,EAAyBtC,EAAcqB,OACjD,CC1GA,SAASmC,GAA8BC,kBAAEA,EAAAvC,oBAAmBA,YAAqBwC,EAAAC,eAAWA,EAAA1C,UAAgBA,IACxG,IAAI9D,EAAIiE,EAER,SAASwC,EAAgBnH,EAAOwD,GAK5B,IAAI4D,EACJ,MAAMC,EAAiB,IAChB9E,EAAAA,WAAWtI,MACX+F,EACHwF,SAAU8B,EAAYtH,KAEpB5F,SAAEA,GAAaiN,EACfjF,EAAUF,EAAuBlC,GACjCsD,EAAc4D,EAAelH,EAAO5F,GAC1C,IAAKA,GAAYE,EAAW,CAgCfiI,EAAAA,WAAWrD,GAAaC,OA9BjC,MAAMoI,EA4ClB,SAAoCvH,GAChC,MAAQT,KAAAA,EAAMM,OAAAA,GAAWC,EACzB,IAAKP,IAASM,EACV,MAAO,CAAA,EACX,MAAM2H,EAAW,IAAKjI,KAASM,GAC/B,MAAO,CACHuH,eAAgB7H,aAAmC,EAASA,EAAKQ,UAAUC,MAAYH,aAAuC,EAASA,EAAOE,UAAUC,IAClJwH,EAASJ,mBACT,EACNK,eAAgBD,EAASC,eAEjC,CAvDqCC,CAA2BL,GACpDD,EAAgBG,EAAiBH,cAOjChF,EAAQmB,cAAgBgB,EAAiBC,EAAWlB,EAAa+D,EAAgB5C,EAAqB8C,EAAiBE,eAC3H,CAKA,OAAQE,EAAAA,KAAKvG,EAAcwG,SAAU,CAAExM,MAAOgH,EAASyF,SAAU,CAACT,GAAiBhF,EAAQmB,cAAiBuE,MAAIV,EAAe,CAAE7D,cAAenB,EAAQmB,iBAAkB8D,IAAqB,KAAMJ,EAAUzC,EAAWxE,EAAOqD,EAAaC,EAAalB,EAAQmB,cAAeC,GAAcF,EAAalJ,EAAUgI,EAAQmB,iBACnU,CAhCAyD,GCzBJ,SAAsBe,GAClB,IAAA,MAAWtL,KAAOsL,EACdjI,EAAmBrD,GAAO,IACnBqD,EAAmBrD,MACnBsL,EAAStL,GAGxB,CDkByBuL,CAAahB,GAiClCG,EAAgBc,YAAc,UAA+B,iBAAdzD,EACzCA,EACA,UAAkG,QAAvFG,EAAsC,QAAhCjE,EAAK8D,EAAUyD,mBAAgC,IAAPvH,EAAgBA,EAAK8D,EAAUtE,YAAyB,IAAPyE,EAAgBA,EAAK,QACrI,MAAMuD,EAA4BC,EAAAA,WAAWhB,GAE7C,OADAe,EAA0BtF,GAAyB4B,EAC5C0D,CACX,CACA,SAASZ,GAAY9B,SAAEA,IACnB,MAAM4C,EAAgB7F,EAAAA,WAAWzI,GAAoBuO,GACrD,OAAOD,QAA8B,IAAb5C,EAClB4C,EAAgB,IAAM5C,EACtBA,CACV,CEpEA,MAAM8C,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAe/D,GACpB,MAKqB,iBAAdA,IAIHA,EAAUgE,SAAS,SAOvBF,EAAqBG,QAAQjE,IAAa,GAItC,SAASkE,KAAKlE,GAItB,CC3BA,SAASmE,EAAcpF,GACnB,MAAMtH,EAAQ,CAAC,CAAA,EAAI,IAKnB,OAJAsH,SAA8DA,EAAcqF,OAAO/K,QAAQ,CAACzC,EAAOqB,KAC/FR,EAAM,GAAGQ,GAAOrB,EAAM6F,MACtBhF,EAAM,GAAGQ,GAAOrB,EAAMyN,gBAEnB5M,CACX,CACA,SAAS6M,EAAwB9I,EAAO+I,EAAYC,EAAQzF,GAIxD,GAA0B,mBAAfwF,EAA2B,CAClC,MAAOjF,EAASmF,GAAYN,EAAcpF,GAC1CwF,EAAaA,OAAsB,IAAXC,EAAuBA,EAAShJ,EAAMgJ,OAAQlF,EAASmF,EACnF,CAaA,GAR0B,iBAAfF,IACPA,EAAa/I,EAAMiC,UAAYjC,EAAMiC,SAAS8G,IAOxB,mBAAfA,EAA2B,CAClC,MAAOjF,EAASmF,GAAYN,EAAcpF,GAC1CwF,EAAaA,OAAsB,IAAXC,EAAuBA,EAAShJ,EAAMgJ,OAAQlF,EAASmF,EACnF,CACA,OAAOF,CACX,CCjCA,MAAMG,EAAqB5H,GAChBC,MAAMC,QAAQF,GCInB6H,EAAgC7H,GAE3B4H,EAAkB5H,GAAKA,EAAEA,EAAEzC,OAAS,IAAM,EAAIyC,ECPnD8H,GAAiBhO,GAAU4G,QAAQ5G,GAASA,EAAMyN,aCQxD,SAASQ,GAAmBjO,GACxB,MAAMkO,EAAiBF,GAAchO,GAASA,EAAM6F,MAAQ7F,EAC5D,OFRmBkG,EEQEgI,EFPdtH,QAAQV,GAAkB,iBAANA,GAAkBA,EAAEiI,KAAOjI,EAAEkI,SEQlDF,EAAeE,UACfF,EFVY,IAAChI,CEWvB,CCYA,MAAMmI,GAAsBC,GAAW,CAAC1J,EAAO5F,KAC3C,MAAMgI,EAAUG,EAAAA,WAAWnB,GACrB0D,EAAkBvC,EAAAA,WAAWvI,GAC7B2P,EAAO,IAnBjB,UAAqBC,4BAAAA,EAAAA,kBAA6BC,WAAmBC,GAAa9J,EAAOoC,EAAS0C,GAC9F,MAAM7I,EAAQ,CACV2J,aAAcmE,GAAiB/J,EAAOoC,EAAS0C,EAAiB8E,GAChEI,YAAaH,KAWjB,OATIC,IAMA7N,EAAM0H,QAAWD,GAAaoG,EAAS,CAAE9J,QAAO8D,QAASJ,KAAazH,IACtEA,EAAM6N,SAAYvG,GAAkBuG,EAASvG,IAE1CtH,CACX,CAIuBgO,CAAUP,EAAQ1J,EAAOoC,EAAS0C,GACrD,OAAO1K,EAAWuP,ICpBtB,SAAqBO,GACjB,MAAMlH,EAAMiC,EAAAA,OAAO,MAInB,OAHoB,OAAhBjC,EAAIc,UACJd,EAAIc,QAAUoG,KAEXlH,EAAIc,OACf,CDc+BqG,CAAYR,IAE3C,SAASI,GAAiB/J,EAAOoC,EAAS0C,EAAiBsF,GACvD,MAAMxB,EAAS,CAAA,EACTyB,EAAeD,EAAmBpK,EAAO,IAC/C,IAAA,MAAWvD,KAAO4N,EACdzB,EAAOnM,GAAO4M,GAAmBgB,EAAa5N,IAElD,IAAI0F,QAAEA,EAAAL,QAASA,GAAY9B,EAC3B,MAAMsK,EAA0BzI,EAAsB7B,GAChDuK,EAAkBxI,EAAc/B,GAClCoC,GACAmI,IACCD,IACiB,IAAlBtK,EAAMqC,eACU,IAAZF,IACAA,EAAUC,EAAQD,cACN,IAAZL,IACAA,EAAUM,EAAQN,UAE1B,IAAI0I,IAA4B1F,IACE,IAA5BA,EAAgB3C,QAEtBqI,EAA4BA,IAAyC,IAAZrI,EACzD,MAAMsI,EAAeD,EAA4B1I,EAAUK,EAC3D,GAAIsI,GACwB,kBAAjBA,IACNhJ,EAAoBgJ,GAAe,CACpC,MAAMC,EAAOnJ,MAAMC,QAAQiJ,GAAgBA,EAAe,CAACA,GAC3D,IAAA,IAAS7L,EAAI,EAAGA,EAAI8L,EAAK7L,OAAQD,IAAK,CAClC,MAAM+L,EAAW7B,EAAwB9I,EAAO0K,EAAK9L,IACrD,GAAI+L,EAAU,CACV,MAAMC,cAAEA,EAAAC,WAAeA,KAAeC,GAAWH,EACjD,IAAA,MAAWlO,KAAOqO,EAAQ,CACtB,IAAIC,EAAcD,EAAOrO,GACzB,GAAI8E,MAAMC,QAAQuJ,GAAc,CAQ5BA,EAAcA,EAHAP,EACRO,EAAYlM,OAAS,EACrB,EAEV,CACoB,OAAhBkM,IACAnC,EAAOnM,GAAOsO,EAEtB,CACA,IAAA,MAAWtO,KAAOmO,EACdhC,EAAOnM,GAAOmO,EAAcnO,EAEpC,CACJ,CACJ,CACA,OAAOmM,CACX,CElFA,MAAMoC,GAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,GAAiB,IAAItO,IAAIqO,ICzBzBE,GAAyBC,GAAW1O,GAAuB,iBAARA,GAAoBA,EAAI4D,WAAW8K,GACtFC,MAC8B,MAC9BC,MAC8B,UAC9BC,GAAsBlQ,KACAiQ,GAAsBjQ,IAIvCmQ,GAAuB7C,KAAKtN,EAAMoQ,MAAM,MAAM,GAAGC,QAEtDF,GAAyB,sFCTzBG,GAAiB,CAACtQ,EAAOkK,IACpBA,GAAyB,iBAAVlK,EAChBkK,EAAKqG,UAAUvQ,GACfA,ECNJwQ,GAAQ,CAACjN,EAAKD,EAAK4C,IACjBA,EAAI5C,EACGA,EACP4C,EAAI3C,EACGA,EACJ2C,ECHLuK,GAAS,CACXnD,KAAOpH,GAAmB,iBAANA,EACpBwK,MAAOC,WACPJ,UAAYrK,GAAMA,GAEhB0K,GAAQ,IACPH,GACHF,UAAYrK,GAAMsK,GAAM,EAAG,EAAGtK,IAE5B2K,GAAQ,IACPJ,GACHpL,QAAS,GCbPyL,GAAkBC,IAAA,CACpBzD,KAAOpH,GAAmB,iBAANA,GAAkBA,EAAE8K,SAASD,IAAiC,IAAxB7K,EAAEkK,MAAM,KAAK3M,OACvEiN,MAAOC,WACPJ,UAAYrK,GAAM,GAAGA,IAAI6K,MAEvBE,MAAuC,OACvCC,MAAuC,KACvCC,MAAkC,MAClCC,MAAkC,MAClCC,MAAkC,MAClCC,GAAqB,IACpBJ,GACHR,MAAQxK,GAAMgL,GAAQR,MAAMxK,GAAK,IACjCqK,UAAYrK,GAAMgL,GAAQX,UAAc,IAAJrK,ICXlCqL,GAA0B,CAE5BC,YAAaL,GACbM,eAAgBN,GAChBO,iBAAkBP,GAClBQ,kBAAmBR,GACnBS,gBAAiBT,GACjBU,aAAcV,GACdW,OAAQX,GACRY,oBAAqBZ,GACrBa,qBAAsBb,GACtBc,wBAAyBd,GACzBe,uBAAwBf,GAExBgB,MAAOhB,GACPiB,SAAUjB,GACVkB,OAAQlB,GACRmB,UAAWnB,GACXoB,IAAKpB,GACLqB,MAAOrB,GACPsB,OAAQtB,GACRuB,KAAMvB,GAENwB,QAASxB,GACTyB,WAAYzB,GACZ0B,aAAc1B,GACd2B,cAAe3B,GACf4B,YAAa5B,GACb6B,OAAQ7B,GACR8B,UAAW9B,GACX+B,YAAa/B,GACbgC,aAAchC,GACdiC,WAAYjC,GAEZkC,oBAAqBlC,GACrBmC,oBAAqBnC,IClCnBoC,GAAsB,CACxBC,OAAQvC,GACRwC,QAASxC,GACTyC,QAASzC,GACT0C,QAAS1C,GACTJ,SACA+C,OAAQ/C,GACRgD,OAAQhD,GACRiD,OAAQjD,GACRkD,KAAM9C,GACN+C,MAAO/C,GACPgD,MAAOhD,GACPiD,SAAU/C,GACVgD,WAAYhD,GACZiD,WAAYjD,GACZkD,WAAYlD,GACZmD,EAAGnD,GACHoD,EAAGpD,GACHqD,EAAGrD,GACHsD,YAAatD,GACbuD,qBAAsBvD,GACtBwD,QAAS/D,GACTgE,QAAStD,GACTuD,QAASvD,GACTwD,QAAS3D,ICzBP4D,GAAM,IACLtE,GACHF,UAAWlN,KAAK2R,OCEdC,GAAmB,IAClB1D,MACAgC,GACH2B,OAAQH,GACRI,KAAMhE,GAENiE,YAAaxE,GACbyE,cAAezE,GACf0E,WAAYP,ICVVQ,GAAiB,CACnBjB,EAAG,aACHC,EAAG,aACHC,EAAG,aACHE,qBAAsB,eAEpBc,GAAgB5F,GAAmBnM,OCJzC,SAASgS,GAAgB5U,EAAO2J,EAAckL,GAC1C,MAAMC,MAAEA,EAAAC,KAAOA,EAAAC,gBAAMA,GAAoBhV,EAEzC,IAAIiV,GAAe,EACfC,GAAqB,EAOzB,IAAA,MAAW1U,KAAOmJ,EAAc,CAC5B,MAAMxK,EAAQwK,EAAanJ,GAC3B,GAAIwO,GAAe/N,IAAIT,GAEnByU,GAAe,OAEnB,GACS9F,GAAkB3O,GACvBuU,EAAKvU,GAAOrB,MAGX,CAED,MAAMgW,EAAc1F,GAAetQ,EAAOiV,GAAiB5T,IACvDA,EAAI4D,WAAW,WAEf8Q,GAAqB,EACrBF,EAAgBxU,GACZ2U,GAGJL,EAAMtU,GAAO2U,CAErB,CACJ,CAiBA,GAhBKxL,EAAa+F,YACVuF,GAAgBJ,EAChBC,EAAMpF,UD3BlB,SAAwB/F,EAAc+F,EAAWmF,GAE7C,IAAIO,EAAkB,GAClBC,GAAqB,EAKzB,IAAA,IAAS1S,EAAI,EAAGA,EAAIgS,GAAehS,IAAK,CACpC,MAAMnC,EAAMuO,GAAmBpM,GACzBxD,EAAQwK,EAAanJ,GAC3B,QAAc,IAAVrB,EACA,SACJ,IAAImW,GAAiB,EAOrB,GALIA,EADiB,iBAAVnW,EACUA,KAAWqB,EAAI4D,WAAW,SAAW,EAAI,GAGnB,IAAtB0L,WAAW3Q,IAE3BmW,GAAkBT,EAAmB,CACtC,MAAMM,EAAc1F,GAAetQ,EAAOiV,GAAiB5T,IACtD8U,IACDD,GAAqB,EAErBD,GAAmB,GADGV,GAAelU,IAAQA,KACN2U,OAEvCN,IACAnF,EAAUlP,GAAO2U,EAEzB,CACJ,CAUA,OATAC,EAAkBA,EAAgB5F,OAG9BqF,EACAO,EAAkBP,EAAkBnF,EAAW2F,EAAqB,GAAKD,GAEpEC,IACLD,EAAkB,QAEfA,CACX,CCf8BG,CAAe5L,EAAc3J,EAAM0P,UAAWmF,GAE3DC,EAAMpF,YAKXoF,EAAMpF,UAAY,SAOtBwF,EAAoB,CACpB,MAAMnB,QAAEA,EAAU,MAAAC,QAAOA,EAAU,MAAAC,QAAOA,EAAU,GAAOe,EAC3DF,EAAME,gBAAkB,GAAGjB,KAAWC,KAAWC,GACrD,CACJ,CC5DA,MAAMuB,GAAW,CACbC,OAAQ,oBACRC,MAAO,oBAELC,GAAY,CACdF,OAAQ,mBACRC,MAAO,mBCNX,SAASE,GAAWC,EAAQJ,EAAQnB,GAChC,MAAyB,iBAAXuB,EACRA,EACAvF,GAAGZ,UAAU+F,EAASnB,EAAOuB,EACvC,CCCA,SAASC,GAAc9V,GAAO+V,MAAEA,EAAAC,MAAOA,EAAAC,UAAOA,EAAAlC,QAAWA,EAAAC,QAASA,EAAAkC,WAASA,EAAAC,YAAYA,EAAc,EAAAC,WAAGA,EAAa,KAElHC,GAAUC,EAAUzB,GAMnB,GALAD,GAAgB5U,EAAOqW,EAAQxB,GAK3ByB,EAIA,YAHItW,EAAM8U,MAAMyB,UACZvW,EAAMwW,MAAMD,QAAUvW,EAAM8U,MAAMyB,UAI1CvW,EAAMwW,MAAQxW,EAAM8U,MACpB9U,EAAM8U,MAAQ,CAAA,EACd,MAAM0B,MAAEA,EAAA1B,MAAOA,EAAA2B,WAAOA,GAAezW,EAKjCwW,EAAM9G,YACF+G,IACA3B,EAAMpF,UAAY8G,EAAM9G,kBACrB8G,EAAM9G,WAGb+G,SACa,IAAZ1C,QAAqC,IAAZC,GAAyBc,EAAMpF,aACzDoF,EAAME,gBDzBd,SAAgCyB,EAAY1C,EAASC,GAGjD,MAAO,GAFW4B,GAAW7B,EAAS0C,EAAWhD,EAAGgD,EAAWnF,UAC7CsE,GAAW5B,EAASyC,EAAW/C,EAAG+C,EAAWjF,SAEnE,CCqBgCkF,CAAuBD,OAAwB,IAAZ1C,EAAwBA,EAAU,QAAiB,IAAZC,EAAwBA,EAAU,UAG1H,IAAV+B,IACAS,EAAM/C,EAAIsC,QACA,IAAVC,IACAQ,EAAM9C,EAAIsC,QACI,IAAdC,IACAO,EAAMxG,MAAQiG,QAEC,IAAfC,GF7BR,SAAsBM,EAAO5T,EAAQ+T,EAAU,EAAGlB,EAAS,EAAGmB,GAAc,GAExEJ,EAAMN,WAAa,EAGnB,MAAMW,EAAOD,EAAcpB,GAAWG,GAEtCa,EAAMK,EAAKpB,QAAUnF,GAAGZ,WAAW+F,GAEnC,MAAMS,EAAa5F,GAAGZ,UAAU9M,GAC1BuT,EAAc7F,GAAGZ,UAAUiH,GACjCH,EAAMK,EAAKnB,OAAS,GAAGQ,KAAcC,GACzC,CEkBQW,CAAaN,EAAON,EAAYC,EAAaC,GAAY,EAEjE,CCjDA,MAAMW,GAAwB,KAAA,CAC1BjC,MAAO,CAAA,EACPpF,UAAW,CAAA,EACXsF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,ICFJiC,GAAuB,KAAA,CDDzBlC,MAAO,CAAA,EACPpF,UAAW,CAAA,EACXsF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,ECANyB,MAAO,CAAA,ICJLF,GAAYW,GAAuB,iBAARA,GAA0C,QAAtBA,EAAIhP,cCAzD,SAASiP,GAAWC,GAASrC,MAAEA,OAAOC,GAAQqC,EAAWhO,GACrDpC,OAAOqQ,OAAOF,EAAQrC,MAAOA,EAAO1L,GAAcA,EAAWkO,oBAAoBF,IAEjF,IAAA,MAAW5W,KAAOuU,EACdoC,EAAQrC,MAAMyC,YAAY/W,EAAKuU,EAAKvU,GAE5C,CCHA,MAAMgX,OAA0B9W,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS+W,GAAUN,EAASpJ,EAAa2J,EAAYtO,GACjD8N,GAAWC,EAASpJ,OAAa,EAAW3E,GAC5C,IAAA,MAAW5I,KAAOuN,EAAYyI,MAC1BW,EAAQQ,aAAcH,GAAoBvW,IAAIT,GAA0BA,EAAnBsH,EAAYtH,GAAYuN,EAAYyI,MAAMhW,GAEvG,CCTA,MAAMoX,GAAkB,CAAA,ECGxB,SAASC,GAAoBrX,GAAOoD,OAAAA,EAAAA,SAAQ2F,IACxC,OAAQyF,GAAe/N,IAAIT,IACvBA,EAAI4D,WAAW,YACbR,QAAuB,IAAb2F,OACLqO,GAAgBpX,IAAgB,YAARA,EACvC,CCLA,SAASmN,GAA4B5J,EAAO+T,EAAWxQ,GACnD,IAAI7C,EACJ,MAAMqQ,MAAEA,GAAU/Q,EACZgU,EAAY,CAAA,EAClB,IAAA,MAAWvX,KAAOsU,GACV3H,GAAc2H,EAAMtU,KACnBsX,EAAUhD,OACP3H,GAAc2K,EAAUhD,MAAMtU,KAClCqX,GAAoBrX,EAAKuD,SACgI,KAAnD,QAApGU,EAAK6C,aAAqD,EAASA,EAAc0Q,SAASxX,UAAyB,IAAPiE,OAAgB,EAASA,EAAGwT,cAC1IF,EAAUvX,GAAOsU,EAAMtU,IAG/B,OAAOuX,CACX,CCbA,SAASpK,GAA4B5J,EAAO+T,EAAWxQ,GACnD,MAAMyQ,EAAYG,GAA8BnU,EAAO+T,EAAWxQ,GAClE,IAAA,MAAW9G,KAAOuD,EACd,GAAIoJ,GAAcpJ,EAAMvD,KACpB2M,GAAc2K,EAAUtX,IAAO,CAI/BuX,OAHkBhJ,GAAmBvC,QAAQhM,GACvC,OAASA,EAAI2X,OAAO,GAAGC,cAAgB5X,EAAI6X,UAAU,GACrD7X,GACiBuD,EAAMvD,EACjC,CAEJ,OAAOuX,CACX,CCUA,MAAMO,GAAc,CAAC,IAAK,IAAK,QAAS,SAAU,KAAM,KAAM,KACxDC,GAAkB,CACpBtN,eAAgBuC,GAAmB,CAC/BG,+BACAC,kBAAmBoJ,GACnBnJ,SAAU,EAAG9J,QAAO+T,YAAWjQ,UAASkG,cAAapE,mBACjD,IAAK9B,EACD,OACJ,IAAIoN,IAAiBlR,EAAMT,KAC3B,IAAK2R,EACD,IAAA,MAAWzU,KAAOmJ,EACd,GAAIqF,GAAe/N,IAAIT,GAAM,CACzByU,GAAe,EACf,KACJ,CAGR,IAAKA,EACD,OACJ,IAAIuD,GAAgBV,EACpB,GAAIA,EAKA,IAAA,IAASnV,EAAI,EAAGA,EAAI2V,GAAY1V,OAAQD,IAAK,CACzC,MAAMnC,EAAM8X,GAAY3V,GACpBoB,EAAMvD,KACNsX,EAAUtX,KACVgY,GAAe,EAEvB,CAECA,GAEL3V,EAAMd,KAAK,MApDvB,SAA6B0F,EAAUsG,GACnC,IACIA,EAAY0I,WACoB,mBAArBhP,EAASgR,QACVhR,EAASgR,UACThR,EAASiR,uBACvB,OACOC,GAEH5K,EAAY0I,WAAa,CACrBhD,EAAG,EACHC,EAAG,EACHpC,MAAO,EACPE,OAAQ,EAEhB,CACJ,CAqCgBoH,CAAoB/Q,EAASkG,GAC7BlL,EAAMV,OAAO,KACT2T,GAAc/H,EAAapE,EAAc2M,GAASzO,EAAQgR,SAAU9U,EAAM8Q,mBAC1E4C,GAAU5P,EAASkG,WC7DjC+K,GAAmB,CACrB7N,eAAgBuC,GAAmB,CACvCG,4BAAQA,GACAC,kBAAmBmJ,MCD3B,SAASgC,GAAkBlK,EAAQmK,EAAQjV,GACvC,IAAA,MAAWvD,KAAOwY,EACT7L,GAAc6L,EAAOxY,KAAUqX,GAAoBrX,EAAKuD,KACzD8K,EAAOrO,GAAOwY,EAAOxY,GAGjC,CAQA,SAASyY,GAASlV,EAAOsD,GACrB,MACMyN,EAAQ,CAAA,EAMd,OAFAiE,GAAkBjE,EALA/Q,EAAM+Q,OAAS,CAAA,EAKG/Q,GACpCiD,OAAOqQ,OAAOvC,EAdlB,UAAgCD,kBAAEA,GAAqBxN,GACnD,OAAOd,EAAAA,QAAQ,KACX,MAAMvG,EZfgB,CAC1B8U,MAAO,CAAA,EACPpF,UAAW,CAAA,EACXsF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,GYaF,OADAH,GAAgB5U,EAAOqH,EAAawN,GAC7B7N,OAAOqQ,OAAO,CAAA,EAAIrX,EAAM+U,KAAM/U,EAAM8U,QAC5C,CAACzN,GACR,CAQyB6R,CAAuBnV,EAAOsD,IAC5CyN,CACX,CACA,SAASqE,GAAapV,EAAOsD,GAEzB,MAAM+R,EAAY,CAAA,EACZtE,EAAQmE,GAASlV,EAAOsD,GAoB9B,OAnBItD,EAAMT,OAA+B,IAAvBS,EAAMsV,eAEpBD,EAAUE,WAAY,EAEtBxE,EAAMyE,WACFzE,EAAM0E,iBACF1E,EAAM2E,mBACF,OAEZ3E,EAAM4E,aACa,IAAf3V,EAAMT,KACA,OACA,QAAsB,MAAfS,EAAMT,KAAe,IAAM,WAEzB,IAAnBS,EAAM4V,WACL5V,EAAM6V,OAAS7V,EAAM8V,YAAc9V,EAAM+V,YAC1CV,EAAUO,SAAW,GAEzBP,EAAUtE,MAAQA,EACXsE,CACX,CChDA,SAASW,GAAYhW,EAAOsD,EAAa2S,EAAWzR,GAChD,MAAM0R,EAAc1T,EAAAA,QAAQ,KACxB,MAAMvG,EZNe,CDDzB8U,MAAO,CAAA,EACPpF,UAAW,CAAA,EACXsF,gBAAiB,CAAA,EACjBD,KAAM,CAAA,ECANyB,MAAO,CAAA,GYMH,OADAV,GAAc9V,EAAOqH,EAAaiP,GAAS/N,GAAYxE,EAAM8Q,mBACtD,IACA7U,EAAMwW,MACT1B,MAAO,IAAK9U,EAAM8U,SAEvB,CAACzN,IACJ,GAAItD,EAAM+Q,MAAO,CACb,MAAMoF,EAAY,CAAA,EAClBnB,GAAkBmB,EAAWnW,EAAM+Q,MAAO/Q,GAC1CkW,EAAYnF,MAAQ,IAAKoF,KAAcD,EAAYnF,MACvD,CACA,OAAOmF,CACX,CCdA,SAASE,GAAgBC,GAAqB,GAsB1C,MArBkB,CAAC7R,EAAWxE,EAAOgD,GAAO4C,gBAAgBxL,KACxD,MAGM8b,GAHiB3N,EAAe/D,GAChCwR,GACAZ,IAC6BpV,EAAO4F,EAAcxL,EAAUoK,GAC5D8R,EzDoBd,SAAqBtW,EAAOuW,EAAOF,GAC/B,MAAMC,EAAgB,CAAA,EACtB,IAAA,MAAW7Z,KAAOuD,EAQF,WAARvD,GAA4C,iBAAjBuD,EAAM4I,SAEjCtI,EAAc7D,KACU,IAAvB4Z,GAA+BjW,EAAkB3D,KAChD8Z,IAAUnW,EAAkB3D,IAE7BuD,EAAiB,WACdvD,EAAI4D,WAAW,aACnBiW,EAAc7Z,GACVuD,EAAMvD,IAGlB,OAAO6Z,CACX,CyD3C8BE,CAAYxW,EAA4B,iBAAdwE,EAAwB6R,GAClEI,EAAejS,IAAckS,EAAAA,SAC7B,IAAKJ,KAAkBJ,EAAalT,OACpC,CAAA,GAMA6E,SAAEA,GAAa7H,EACf2W,EAAmBnU,EAAAA,QAAQ,IAAO4G,GAAcvB,GAAYA,EAAS5G,MAAQ4G,EAAW,CAACA,IAC/F,OAAO+O,EAAAA,cAAcpS,EAAW,IACzBiS,EACH5O,SAAU8O,IAItB,CCxBA,SAASE,GAA6B7P,EAAmBvC,GACrD,OAAO,SAA+BD,GAAW6R,mBAAEA,GAAuB,CAAEA,oBAAoB,IAW5F,OAAOtP,EAPQ,IAHIwB,EAAe/D,GAC5BgQ,GACAO,GAGF/N,oBACAC,UAAWmP,GAAgBC,GAC3B5R,sBACAD,aAGR,CACJ,CCpBA,SAASsS,GAAeC,EAAMC,GAC1B,IAAKzV,MAAMC,QAAQwV,GACf,OAAO,EACX,MAAMC,EAAaD,EAAKnY,OACxB,GAAIoY,IAAeF,EAAKlY,OACpB,OAAO,EACX,IAAA,IAASD,EAAI,EAAGA,EAAIqY,EAAYrY,IAC5B,GAAIoY,EAAKpY,KAAOmY,EAAKnY,GACjB,OAAO,EAEf,OAAO,CACX,CCTA,SAASsY,GAAe3T,EAAewF,EAAYC,GAC/C,MAAMhJ,EAAQuD,EAAc4T,WAC5B,OAAOrO,EAAwB9I,EAAO+I,OAAuB,IAAXC,EAAuBA,EAAShJ,EAAMgJ,OAAQzF,EACpG,CCHA,MAAM6T,GAAyBtc,EAAK,SAAgC,IAA1BP,OAAO8c,gBCAjD,MAAMC,GACF,WAAAC,CAAYC,GAERC,KAAKC,KAAO,IAAMD,KAAKE,OAAO,QAC9BF,KAAKD,WAAaA,EAAWI,OAAO5V,QACxC,CACA,YAAI6V,GAEA,OAAOC,QAAQC,IAAIN,KAAKD,WAAWQ,IAAK3Y,GAAc,aAAcA,EAAYA,EAAUwY,SAAWxY,GACzG,CAIA,MAAA4Y,CAAOC,GACH,OAAOT,KAAKD,WAAW,GAAGU,EAC9B,CACA,MAAAC,CAAOD,EAAUE,GACb,IAAA,IAASxZ,EAAI,EAAGA,EAAI6Y,KAAKD,WAAW3Y,OAAQD,IACxC6Y,KAAKD,WAAW5Y,GAAGsZ,GAAYE,CAEvC,CACA,cAAAC,CAAeC,EAAUC,GACrB,MAAMC,EAAgBf,KAAKD,WAAWQ,IAAK3Y,GACnC+X,MAA4B/X,EAAUgZ,eAC/BhZ,EAAUgZ,eAAeC,GAEP,mBAAbC,EACLA,EAASlZ,QAFpB,GAKJ,MAAO,KACHmZ,EAAc3a,QAAQ,CAACJ,EAAQmB,KAC3BnB,GAAUA,IACVga,KAAKD,WAAW5Y,GAAG8Y,SAG/B,CACA,QAAIe,GACA,OAAOhB,KAAKQ,OAAO,OACvB,CACA,QAAIQ,CAAKA,GACLhB,KAAKU,OAAO,OAAQM,EACxB,CACA,SAAIC,GACA,OAAOjB,KAAKQ,OAAO,QACvB,CACA,SAAIS,CAAMA,GACNjB,KAAKU,OAAO,QAASO,EACzB,CACA,aAAIC,GACA,OAAOlB,KAAKQ,OAAO,YACvB,CACA,YAAIW,GACA,IAAIla,EAAM,EACV,IAAA,IAASE,EAAI,EAAGA,EAAI6Y,KAAKD,WAAW3Y,OAAQD,IACxCF,EAAMD,KAAKC,IAAIA,EAAK+Y,KAAKD,WAAW5Y,GAAGga,UAE3C,OAAOla,CACX,CACA,MAAAiZ,CAAOkB,GACHpB,KAAKD,WAAW3Z,QAASib,GAAaA,EAASD,KACnD,CACA,OAAAE,GACItB,KAAKE,OAAO,UAChB,CACA,IAAAqB,GACIvB,KAAKE,OAAO,OAChB,CACA,KAAAsB,GACIxB,KAAKE,OAAO,QAChB,CACA,MAAAla,GACIga,KAAKE,OAAO,SAChB,CACA,QAAAuB,GACIzB,KAAKE,OAAO,WAChB,ECxEJ,MAAMwB,WAA8B7B,GAChC,IAAA8B,CAAKC,EAAWC,GACZ,OAAOxB,QAAQC,IAAIN,KAAKD,YAAY4B,KAAKC,GAAWE,MAAMD,EAC9D,ECTJ,SAASE,GAAmB3O,EAAYpO,GACpC,OAAOoO,EACDA,EAAWpO,IACToO,EAAoB,SACpBA,OACF,CACV,CCFA,MAAM4O,GAAuB,IAC7B,SAASC,GAAsBC,GAC3B,IAAIf,EAAW,EAEf,IAAI3c,EAAQ0d,EAAU5C,KAAK6B,GAC3B,MAAQ3c,EAAM2d,MAAQhB,EAAWa,IAC7Bb,GAHa,GAIb3c,EAAQ0d,EAAU5C,KAAK6B,GAE3B,OAAOA,GAAYa,GAAuBI,IAAWjB,CACzD,CCdA,SAASkB,GAAYxU,GACjB,MAAuB,mBAATA,CAClB,CCFA,SAAS+S,GAAehZ,EAAWiZ,GAC/BjZ,EAAUiZ,SAAWA,EACrBjZ,EAAU0a,SAAW,IACzB,CCHA,MAAMC,GAAsBC,GAAW1Y,MAAMC,QAAQyY,IAAgC,iBAAdA,EAAO,GCIxEC,GAAgB,CAClBC,kBAAc,GCFlB,SAASC,GAAarf,EAAUsf,GAC5B,MAAMC,IAAgBvf,GACtB,MAAO,KAAQ,IAAI2F,EAAI,OAA8C,QAAtCA,EAAKwZ,GAAcG,UAAkC,IAAP3Z,EAAgBA,EAAK4Z,IACtG,CCJA,MAAMC,MAAkD,KACpD,IACIC,SACK5D,cAAc,OACd9U,QAAQ,CAAEiO,QAAS,GAAK,CAAEkK,OAAQ,gBAC3C,OACOrF,GACH,OAAO,CACX,CACA,OAAO,GACR,gBCVG6F,GAAuB,CAACR,EAAQrB,EACtC8B,EAAa,MAET,IAAIC,EAAS,GACb,MAAMC,EAAYnc,KAAKC,IAAID,KAAK2R,MAAMwI,EAAW8B,GAAa,GAC9D,IAAA,IAAS9b,EAAI,EAAGA,EAAIgc,EAAWhc,IAC3B+b,GAAUV,EAAOhf,EAAS,EAAG2f,EAAY,EAAGhc,IAAM,KAEtD,MAAO,UAAU+b,EAAOrG,UAAU,EAAGqG,EAAO9b,OAAS,OCNzD,SAASgc,GAAuBZ,GAC5B,OAAOjY,QAA2B,mBAAXiY,GAAyBM,OAC3CN,GACkB,iBAAXA,IACHA,KAAUa,IAAwBP,OACvCP,GAAmBC,IAClB1Y,MAAMC,QAAQyY,IAAWA,EAAOc,MAAMF,IAC/C,CACA,MAAMG,GAAsB,EAAEC,EAAGC,EAAGC,EAAGC,KAAO,gBAAgBH,MAAMC,MAAMC,MAAMC,KAC1EN,GAAuB,CACzBO,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAsBV,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC1DW,QAAuBX,GAAoB,CAAC,IAAM,EAAG,EAAG,MACxDY,OAAsBZ,GAAoB,CAAC,IAAM,IAAM,WACvDa,QAAuBb,GAAoB,CAAC,IAAM,KAAM,IAAM,OAElE,SAASc,GAAwB7B,EAAQrB,GACrC,OAAKqB,EAGsB,mBAAXA,GAAyBM,KAC9BE,GAAqBR,EAAQrB,GAE/BoB,GAAmBC,GACjBe,GAAoBf,GAEtB1Y,MAAMC,QAAQyY,GACZA,EAAOjC,IAAK+D,GAAkBD,GAAwBC,EAAenD,IACxEkC,GAAqBU,SAGlBV,GAAqBb,QAb5B,CAeR,CCzCA,MAAM+B,GAAa,CACftM,GAAG,EACHC,GAAG,GAEP,SAASsM,KACL,OAAOD,GAAWtM,GAAKsM,GAAWrM,CACtC,CCJA,SAASuM,GAAaC,EAAmBtV,GACrC,MAAMuV,ECHV,SAAyBD,GAErB,GAAIA,aAA6BE,QAC7B,MAAO,CAACF,GACZ,GACsC,iBAAtBA,EAAgC,CAU5C,MAAMC,EATK5B,SASkJ8B,iBAAiBH,GAC9K,OAAOC,EAAW7a,MAAMrG,KAAKkhB,GAAY,EAC7C,CACA,OAAO7a,MAAMrG,KAAKihB,EACtB,CDhBqBI,CAAgBJ,GAC3BK,EAAyB,IAAIC,gBAOnC,MAAO,CAACL,EANa,CACjBM,SAAS,KACN7V,EACH8V,OAAQH,EAAuBG,QAEpB,IAAMH,EAAuBI,QAEhD,CELA,SAASC,GAAa9hB,GAClB,OAAQ+hB,IACsB,UAAtBA,EAAMC,aAA2Bd,MAErClhB,EAAS+hB,GAEjB,CCNA,MAAME,GAAgB,CAACpY,EAAQqY,MACtBA,IAGIrY,IAAWqY,GAITD,GAAcpY,EAAQqY,EAAMC,gBCfrCC,GAAoBL,GACI,UAAtBA,EAAMC,YACyB,iBAAjBD,EAAMM,QAAuBN,EAAMM,QAAU,GAWhC,IAApBN,EAAMO,UCbfC,OAAwB3gB,IAAI,CAC9B,SACA,QACA,SACA,WACA,MCLJ,MAAM4gB,OAAiBxgB,QCKvB,SAAS8f,GAAa9hB,GAClB,OAAQ+hB,IACc,UAAdA,EAAMrgB,KAEV1B,EAAS+hB,GAEjB,CACA,SAASU,GAAiB1S,EAAQxF,GAC9BwF,EAAO2S,cAAc,IAAIC,aAAa,UAAYpY,EAAM,CAAE+X,WAAW,EAAMM,SAAS,IACxF,CCFA,SAASC,GAAkBd,GACvB,OAAOK,GAAiBL,KAAWb,IACvC,CAoBA,SAAS4B,GAAM1B,EAAmB2B,EAAcjX,EAAU,CAAA,GACtD,MAAOuV,EAAU2B,EAAcC,GAAgB9B,GAAaC,EAAmBtV,GACzEoX,EAAcC,IAChB,MAAM9K,EAAU8K,EAAWC,cAC3B,IAAKP,GAAkBM,IAAeX,GAAWrgB,IAAIkW,GACjD,OACJmK,GAAW/f,IAAI4V,GACf,MAAMgL,EAAaN,EAAaI,GAC1BG,EAAe,CAACC,EAAUC,KAC5BhkB,OAAOikB,oBAAoB,YAAaC,GACxClkB,OAAOikB,oBAAoB,gBAAiBE,GACvCd,GAAkBU,IAAcf,GAAWrgB,IAAIkW,KAGpDmK,GAAW7f,OAAO0V,GACQ,mBAAfgL,GACPA,EAAWE,EAAU,CAAEC,cAGzBE,EAAeE,IACjBN,EAAaM,EAAS9X,EAAQ+X,iBAC1B5B,GAAc5J,EAASuL,EAAQ7T,UAEjC4T,EAAmBG,IACrBR,EAAaQ,GAAa,IAE9BtkB,OAAOukB,iBAAiB,YAAaL,EAAaV,GAClDxjB,OAAOukB,iBAAiB,gBAAiBJ,EAAiBX,IAW9D,OATA3B,EAASve,QAASuV,KHxDtB,SAAqCA,GACjC,OAAQkK,GAAkBpgB,IAAIkW,EAAQ0B,WACb,IAArB1B,EAAQwC,QAChB,EGsDamJ,CAA4B3L,IACQ,OAArCA,EAAQ4L,aAAa,cACrB5L,EAAQwC,SAAW,IAER/O,EAAQ+X,gBAAkBrkB,OAAS6Y,GAC3C0L,iBAAiB,cAAeb,EAAYF,GACnD3K,EAAQ0L,iBAAiB,QAAUhC,GDvDf,EAACmC,EAAYlB,KACrC,MAAM3K,EAAU6L,EAAWd,cAC3B,IAAK/K,EACD,OACJ,MAAM8L,EAAgBrC,GAAa,KAC/B,GAAIU,GAAWrgB,IAAIkW,GACf,OACJoK,GAAiBpK,EAAS,QAC1B,MAAM+L,EAActC,GAAa,KAC7BW,GAAiBpK,EAAS,QAG9BA,EAAQ0L,iBAAiB,QAASK,EAAapB,GAC/C3K,EAAQ0L,iBAAiB,OAFN,IAAMtB,GAAiBpK,EAAS,UAEN2K,KAEjD3K,EAAQ0L,iBAAiB,UAAWI,EAAenB,GAInD3K,EAAQ0L,iBAAiB,OAAQ,IAAM1L,EAAQoL,oBAAoB,UAAWU,GAAgBnB,ICoC7CqB,CAAoBtC,EAAOiB,GAAeA,KAEpFC,CACX,CCvEA,MAAMqB,OAAqB1iB,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,YACGqO,KCNP,IAAIxM,GACJ,SAAS8gB,KACL9gB,QAAM,CACV,CASA,MAAMia,GAAO,CACTja,IAAK,UACW,IAARA,IACAia,GAAKtX,IAAIvD,EAAUxB,cAAgBV,EAC7BkC,EAAUzB,UACVoC,YAAYC,OAEfA,IAEX2C,IAAMoe,IACF/gB,GAAM+gB,EACNlb,eAAeib,MC1BvB,SAASE,GAAcC,EAAKC,IACE,IAAtBD,EAAIhX,QAAQiX,IACZD,EAAIE,KAAKD,EACjB,CACA,SAASE,GAAWH,EAAKC,GACrB,MAAMG,EAAQJ,EAAIhX,QAAQiX,GACtBG,GAAQ,GACRJ,EAAIK,OAAOD,EAAO,EAC1B,CCNA,MAAME,GACF,WAAAxI,GACIE,KAAKe,cAAgB,EACzB,CACA,GAAAhb,CAAIwiB,GAEA,OADAR,GAAc/H,KAAKe,cAAewH,GAC3B,IAAMJ,GAAWnI,KAAKe,cAAewH,EAChD,CACA,MAAAC,CAAOhF,EAAGC,EAAGC,GACT,MAAM+E,EAAmBzI,KAAKe,cAAc3Z,OAC5C,GAAKqhB,EAEL,GAAyB,IAArBA,EAIAzI,KAAKe,cAAc,GAAGyC,EAAGC,EAAGC,QAG5B,IAAA,IAASvc,EAAI,EAAGA,EAAIshB,EAAkBthB,IAAK,CAKvC,MAAMohB,EAAUvI,KAAKe,cAAc5Z,GACnCohB,GAAWA,EAAQ/E,EAAGC,EAAGC,EAC7B,CAER,CACA,OAAAgF,GACI,OAAO1I,KAAKe,cAAc3Z,MAC9B,CACA,KAAAf,GACI2Z,KAAKe,cAAc3Z,OAAS,CAChC,EC9BJ,SAASuhB,GAAkBnX,EAAUoX,GACjC,OAAOA,EAAgBpX,GAAY,IAAOoX,GAAiB,CAC/D,CCcA,MAAMC,GASF,WAAA/I,CAAYrN,EAAMrD,EAAU,IAKxB4Q,KAAK8I,QAAU,UAQf9I,KAAK+I,iBAAmB,KAIxB/I,KAAKgJ,OAAS,CAAA,EACdhJ,KAAKiJ,gBAAkB,CAACpf,EAAGlD,GAAS,KAChC,MAAMuiB,EAAclI,GAAKja,MAMrBiZ,KAAKmJ,YAAcD,GACnBlJ,KAAKoJ,oBAETpJ,KAAKT,KAAOS,KAAK3T,QACjB2T,KAAKqJ,WAAWxf,GAEZmW,KAAK3T,UAAY2T,KAAKT,MAAQS,KAAKgJ,OAAOM,QAC1CtJ,KAAKgJ,OAAOM,OAAOd,OAAOxI,KAAK3T,SAG/B1F,GAAUqZ,KAAKgJ,OAAOO,eACtBvJ,KAAKgJ,OAAOO,cAAcf,OAAOxI,KAAK3T,UAG9C2T,KAAKwJ,aAAc,EACnBxJ,KAAKqJ,WAAW5W,GAChBuN,KAAKyJ,MAAQra,EAAQqa,KACzB,CACA,UAAAJ,CAAWhd,GA/DC,IAAC1I,EAgETqc,KAAK3T,QAAUA,EACf2T,KAAKmJ,UAAYnI,GAAKja,MACQ,OAA1BiZ,KAAK+I,uBAAyC,IAAZ1c,IAClC2T,KAAK+I,kBAnEAplB,EAmE2Bqc,KAAK3T,SAlErCqd,MAAMpV,WAAW3Q,KAoEzB,CACA,iBAAAylB,CAAkBO,EAAiB3J,KAAK3T,SACpC2T,KAAK2J,eAAiBA,EACtB3J,KAAK4J,cAAgB5J,KAAKmJ,SAC9B,CAyCA,QAAAU,CAASC,GAIL,OAAO9J,KAAK+J,GAAG,SAAUD,EAC7B,CACA,EAAAC,CAAGC,EAAW1mB,GACL0c,KAAKgJ,OAAOgB,KACbhK,KAAKgJ,OAAOgB,GAAa,IAAI1B,IAEjC,MAAM2B,EAAcjK,KAAKgJ,OAAOgB,GAAWjkB,IAAIzC,GAC/C,MAAkB,WAAd0mB,EACO,KACHC,IAKA5iB,EAAMd,KAAK,KACFyZ,KAAKgJ,OAAOM,OAAOZ,WACpB1I,KAAKC,UAKdgK,CACX,CACA,cAAAC,GACI,IAAA,MAAWC,KAAiBnK,KAAKgJ,OAC7BhJ,KAAKgJ,OAAOmB,GAAe9jB,OAEnC,CAMA,MAAA+jB,CAAOC,EAAeC,GAClBtK,KAAKqK,cAAgBA,EACrBrK,KAAKsK,kBAAoBA,CAC7B,CAgBA,GAAA5gB,CAAIG,EAAGlD,GAAS,GACPA,GAAWqZ,KAAKqK,cAIjBrK,KAAKqK,cAAcxgB,EAAGmW,KAAKiJ,iBAH3BjJ,KAAKiJ,gBAAgBpf,EAAGlD,EAKhC,CACA,eAAA4jB,CAAgBhL,EAAMlT,EAAS5H,GAC3Bub,KAAKtW,IAAI2C,GACT2T,KAAKT,UAAO,EACZS,KAAK2J,eAAiBpK,EACtBS,KAAK4J,cAAgB5J,KAAKmJ,UAAY1kB,CAC1C,CAKA,IAAA+lB,CAAK3gB,EAAG4gB,GAAe,GACnBzK,KAAKiJ,gBAAgBpf,GACrBmW,KAAKT,KAAO1V,EACZmW,KAAK4J,cAAgB5J,KAAK2J,oBAAiB,EAC3Cc,GAAgBzK,KAAKC,OACjBD,KAAKsK,mBACLtK,KAAKsK,mBACb,CAQA,GAAA9gB,GAII,OAAOwW,KAAK3T,OAChB,CAIA,WAAAqe,GACI,OAAO1K,KAAKT,IAChB,CAQA,WAAAnO,GACI,MAAM8X,EAAclI,GAAKja,MACzB,IAAKiZ,KAAK+I,uBACkB,IAAxB/I,KAAK2J,gBACLT,EAAclJ,KAAKmJ,UAnOJ,GAoOf,OAAO,EAEX,MAAM1kB,EAAQuC,KAAKE,IAAI8Y,KAAKmJ,UAAYnJ,KAAK4J,cAtO1B,IAwOnB,OAAOjB,GAAkBrU,WAAW0L,KAAK3T,SACrCiI,WAAW0L,KAAK2J,gBAAiBllB,EACzC,CAaA,KAAAwF,CAAM0gB,GAEF,OADA3K,KAAKC,OACE,IAAII,QAASuK,IAChB5K,KAAKwJ,aAAc,EACnBxJ,KAAKpY,UAAY+iB,EAAeC,GAC5B5K,KAAKgJ,OAAO6B,gBACZ7K,KAAKgJ,OAAO6B,eAAerC,WAEhC7G,KAAK,KACA3B,KAAKgJ,OAAO8B,mBACZ9K,KAAKgJ,OAAO8B,kBAAkBtC,SAElCxI,KAAK+K,kBAEb,CAMA,IAAA9K,GACQD,KAAKpY,YACLoY,KAAKpY,UAAUqY,OACXD,KAAKgJ,OAAOgC,iBACZhL,KAAKgJ,OAAOgC,gBAAgBxC,UAGpCxI,KAAK+K,gBACT,CAMA,WAAAE,GACI,QAASjL,KAAKpY,SAClB,CACA,cAAAmjB,UACW/K,KAAKpY,SAChB,CAUA,OAAAsjB,GACIlL,KAAKkK,iBACLlK,KAAKC,OACDD,KAAKsK,mBACLtK,KAAKsK,mBAEb,EAEJ,SAASa,GAAY1Y,EAAMrD,GACvB,OAAO,IAAIyZ,GAAYpW,EAAMrD,EACjC,CCpTA,SAASgc,GAAetf,EAAe9G,EAAKrB,GACpCmI,EAAcuf,SAASrmB,GACvB8G,EAAc0Q,SAASxX,GAAK0E,IAAI/F,GAGhCmI,EAAcwf,SAAStmB,EAAKmmB,GAAYxnB,GAEhD,CCbA,SAAS4nB,GAAqBzf,EAAe9G,GACzC,MAAMwmB,EAAa1f,EAAc0Q,SAAS,cAK1C,GCN6B7Y,EDMD6nB,ECLrBjhB,QAAQoH,GAAchO,IAAUA,EAAMoC,KDMzC,OAAOylB,EAAWzlB,IAAIf,GCP9B,IAAiCrB,CDSjC,CETA,SAAS8nB,GAAqB3f,GAC1B,OAAOA,EAAcvD,MAAMmE,EAC/B,CCgBA,MAAMgf,GAAa,CAACC,EAAGC,EAAIC,OAAU,EAAM,EAAMA,EAAK,EAAMD,GAAMD,GAAK,EAAME,EAAK,EAAMD,IAAOD,EAAI,EAAMC,GACrGD,EAoBJ,SAASG,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAOhpB,EACX,MAAMipB,EAAYC,GArBtB,SAAyBnU,EAAGoU,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACArlB,EAAI,EACR,GACIqlB,EAAWH,GAAcC,EAAaD,GAAc,EACpDE,EAAWb,GAAWc,EAAUT,EAAKE,GAAOhU,EACxCsU,EAAW,EACXD,EAAaE,EAGbH,EAAaG,QAEZxlB,KAAKylB,IAAIF,GAfO,QAgBnBplB,EAfuB,IAgB7B,OAAOqlB,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,GAExD,OAAQN,GAAY,IAANA,GAAiB,IAANA,EAAUA,EAAID,GAAWS,EAASR,GAAIK,EAAKE,EACxE,CC9CA,MAAMS,GAAgBnK,GAAY9f,GAAMA,GAAK,GAAM8f,EAAO,EAAI9f,GAAK,GAAK,EAAI8f,EAAO,GAAK,EAAI9f,KAAO,ECA7FkqB,GAAiBpK,GAAY9f,GAAM,EAAI8f,EAAO,EAAI9f,GCElD0hB,GAAwB0H,GAAY,IAAM,KAAM,IAAM,KACtD3H,MAAqCC,IACrCyI,MAAuC1I,ICJvC2I,GAAcpqB,IAAOA,GAAK,GAAK,EAAI,GAAMyhB,GAAOzhB,GAAK,IAAO,EAAIsE,KAAK+lB,IAAI,GAAG,IAAOrqB,EAAI,KCCvFuhB,GAAUvhB,GAAM,EAAIsE,KAAKgmB,IAAIhmB,KAAKimB,KAAKvqB,IACvCwhB,GAAU0I,GAAc3I,IACxBiJ,GAAYP,GAAa1I,ICFzBkJ,GAAqBtjB,GAAM,cAAcoH,KAAKpH,GCDpD,SAASujB,GAAOzpB,GACZ,MAAqB,iBAAVA,EACU,IAAVA,EAEQ,OAAVA,IACY,SAAVA,GAA8B,MAAVA,GAAiBwpB,GAAkBxpB,GAKtE,CCVA,MAAM0pB,GAAYxjB,GAAM7C,KAAK2R,MAAU,IAAJ9O,GAAc,ICF3CyjB,GAAa,8BCAnB,MAAMC,GAAmB,sHCQnBC,GAAgB,CAAC3f,EAAM4f,IAAc5jB,GAChCU,QAAsB,iBAANV,GACnB0jB,GAAiBtc,KAAKpH,IACtBA,EAAEjB,WAAWiF,IACZ4f,ICZT,SAAmB5jB,GACf,OAAY,MAALA,CACX,CDWa6jB,CAAU7jB,IACX2B,OAAOC,UAAUC,eAAeC,KAAK9B,EAAG4jB,IAE9CE,GAAa,CAACC,EAAOC,EAAOC,IAAWjkB,IACzC,GAAiB,iBAANA,EACP,OAAOA,EACX,MAAO2Z,EAAGC,EAAGC,EAAGnP,GAAS1K,EAAEkkB,MAAMT,IACjC,MAAO,CACHM,CAACA,GAAQtZ,WAAWkP,GACpBqK,CAACA,GAAQvZ,WAAWmP,GACpBqK,CAACA,GAAQxZ,WAAWoP,GACpBnP,WAAiB,IAAVA,EAAsBD,WAAWC,GAAS,IElBnDyZ,GAAU,IACT5Z,GACHF,UAAYrK,GAAM7C,KAAK2R,MAHN,CAAC9O,GAAMsK,GAAM,EAAG,IAAKtK,GAGTokB,CAAapkB,KAExCqkB,GAAO,CACTjd,KAAoBuc,GAAc,MAAO,OACzCnZ,MAAqBsZ,GAAW,MAAO,QAAS,QAChDzZ,UAAW,EAAGia,MAAKC,QAAOC,OAAM9Z,MAAO+Z,EAAU,KAAQ,QACrDN,GAAQ9Z,UAAUia,GAClB,KACAH,GAAQ9Z,UAAUka,GAClB,KACAJ,GAAQ9Z,UAAUma,GAClB,KACAhB,GAAS9Y,GAAML,UAAUoa,IACzB,KCYR,MAAMC,GAAM,CACRtd,QAAkC,KAClCoD,MAhCJ,SAAkBxK,GACd,IAAI2kB,EAAI,GACJC,EAAI,GACJhL,EAAI,GACJD,EAAI,GAmBR,OAjBI3Z,EAAEzC,OAAS,GACXonB,EAAI3kB,EAAEgT,UAAU,EAAG,GACnB4R,EAAI5kB,EAAEgT,UAAU,EAAG,GACnB4G,EAAI5Z,EAAEgT,UAAU,EAAG,GACnB2G,EAAI3Z,EAAEgT,UAAU,EAAG,KAInB2R,EAAI3kB,EAAEgT,UAAU,EAAG,GACnB4R,EAAI5kB,EAAEgT,UAAU,EAAG,GACnB4G,EAAI5Z,EAAEgT,UAAU,EAAG,GACnB2G,EAAI3Z,EAAEgT,UAAU,EAAG,GACnB2R,GAAKA,EACLC,GAAKA,EACLhL,GAAKA,EACLD,GAAKA,GAEF,CACH2K,IAAKO,SAASF,EAAG,IACjBJ,MAAOM,SAASD,EAAG,IACnBJ,KAAMK,SAASjL,EAAG,IAClBlP,MAAOiP,EAAIkL,SAASlL,EAAG,IAAM,IAAM,EAE3C,EAIItP,UAAWga,GAAKha,WC/Bdya,GAAO,CACT1d,KAAoBuc,GAAc,MAAO,OACzCnZ,MAAqBsZ,GAAW,MAAO,aAAc,aACrDzZ,UAAW,EAAG0a,MAAKC,aAAYC,YAAWva,MAAO+Z,EAAU,KAC/C,QACJtnB,KAAK2R,MAAMiW,GACX,KACA/Z,GAAQX,UAAUmZ,GAASwB,IAC3B,KACAha,GAAQX,UAAUmZ,GAASyB,IAC3B,KACAzB,GAAS9Y,GAAML,UAAUoa,IACzB,KCbNS,GAAQ,CACV9d,KAAOpH,GAAMqkB,GAAKjd,KAAKpH,IAAM0kB,GAAItd,KAAKpH,IAAM8kB,GAAK1d,KAAKpH,GACtDwK,MAAQxK,GACAqkB,GAAKjd,KAAKpH,GACHqkB,GAAK7Z,MAAMxK,GAEb8kB,GAAK1d,KAAKpH,GACR8kB,GAAKta,MAAMxK,GAGX0kB,GAAIla,MAAMxK,GAGzBqK,UAAYrK,GACY,iBAANA,EACRA,EACAA,EAAE6B,eAAe,OACbwiB,GAAKha,UAAUrK,GACf8kB,GAAKza,UAAUrK,ICtB3BmlB,GAAa,qHCanB,MAAMC,GAAe,SACfC,GAAc,QAKdC,GAAe,kOACrB,SAASC,GAAoBzrB,GACzB,MAAM0rB,EAAgB1rB,EAAM2rB,WACtBne,EAAS,GACToe,EAAU,CACZR,MAAO,GACP3a,OAAQ,GACRob,IAAK,IAEHC,EAAQ,GACd,IAAItoB,EAAI,EACR,MAmBM4M,EAnBYsb,EAAc7iB,QAAQ2iB,GAAeO,IAC/CX,GAAM9d,KAAKye,IACXH,EAAQR,MAAM7G,KAAK/gB,GACnBsoB,EAAMvH,KAAKgH,IACX/d,EAAO+W,KAAK6G,GAAM1a,MAAMqb,KAEnBA,EAAY9mB,WApBF,SAqBf2mB,EAAQC,IAAItH,KAAK/gB,GACjBsoB,EAAMvH,KAvBA,OAwBN/W,EAAO+W,KAAKwH,KAGZH,EAAQnb,OAAO8T,KAAK/gB,GACpBsoB,EAAMvH,KAAK+G,IACX9d,EAAO+W,KAAK5T,WAAWob,OAEzBvoB,EA7BU,QAgCQ4M,MAhCR,OAiChB,MAAO,CAAE5C,SAAQ4C,QAAOwb,UAASE,QACrC,CACA,SAASE,GAAkB9lB,GACvB,OAAOulB,GAAoBvlB,GAAGsH,MAClC,CACA,SAASye,GAAkBpS,GACvB,MAAMzJ,MAAEA,EAAA0b,MAAOA,GAAUL,GAAoB5R,GACvCqS,EAAc9b,EAAM3M,OAC1B,OAAQyC,IACJ,IAAIimB,EAAS,GACb,IAAA,IAAS3oB,EAAI,EAAGA,EAAI0oB,EAAa1oB,IAE7B,GADA2oB,GAAU/b,EAAM5M,QACH,IAAT0C,EAAE1C,GAAkB,CACpB,MAAM0G,EAAO4hB,EAAMtoB,GAEf2oB,GADAjiB,IAASohB,GACC5B,GAASxjB,EAAE1C,IAEhB0G,IAASqhB,GACJH,GAAM7a,UAAUrK,EAAE1C,IAGlB0C,EAAE1C,EAEpB,CAEJ,OAAO2oB,EAEf,CACA,MAAMC,GAAwBlmB,GAAmB,iBAANA,EAAiB,EAAIA,EAMhE,MAAMmmB,GAAU,CACZ/e,KAhFJ,SAAcpH,GACV,IAAIZ,EAAIiE,EACR,OAAQwc,MAAM7f,IACG,iBAANA,KAC0B,QAA9BZ,EAAKY,EAAEkkB,MAAMT,WAAgC,IAAPrkB,OAAgB,EAASA,EAAG7B,SAAW,KAC3C,QAA9B8F,EAAKrD,EAAEkkB,MAAMiB,WAAgC,IAAP9hB,OAAgB,EAASA,EAAG9F,SAAW,GAChF,CACZ,EA0EIiN,MAAOsb,GACPC,qBACJK,kBATA,SAA2BpmB,GACvB,MAAMqmB,EAASP,GAAkB9lB,GAEjC,OADoB+lB,GAAkB/lB,EAC/BsmB,CAAYD,EAAO3P,IAAIwP,IAClC,GC7EMK,OAAkBlrB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASmrB,GAAmBxmB,GACxB,MAAOpB,EAAM9E,GAASkG,EAAEymB,MAAM,GAAG,GAAIvc,MAAM,KAC3C,GAAa,gBAATtL,EACA,OAAOoB,EACX,MAAOuK,GAAUzQ,EAAMoqB,MAAMT,KAAe,GAC5C,IAAKlZ,EACD,OAAOvK,EACX,MAAM6K,EAAO/Q,EAAM6I,QAAQ4H,EAAQ,IACnC,IAAImc,EAAeH,GAAY3qB,IAAIgD,GAAQ,EAAI,EAG/C,OAFI2L,IAAWzQ,IACX4sB,GAAgB,KACb9nB,EAAO,IAAM8nB,EAAe7b,EAAO,GAC9C,CACA,MAAM8b,GAAgB,uBAChBrQ,GAAS,IACR6P,GACHC,kBAAoBpmB,IAChB,MAAM4mB,EAAY5mB,EAAEkkB,MAAMyC,IAC1B,OAAOC,EAAYA,EAAUlQ,IAAI8P,IAAoBnlB,KAAK,KAAOrB,IClBnE6mB,GAAoB,IACnB9X,GAEHmW,SACA4B,gBAAiB5B,GACjB6B,aAAc7B,GACd8B,KAAM9B,GACN+B,OAAQ/B,GAERgC,YAAahC,GACbiC,eAAgBjC,GAChBkC,iBAAkBlC,GAClBmC,kBAAmBnC,GACnBoC,gBAAiBpC,GACjB5O,UACAiR,aAAcjR,IAKZkR,GAAuBrsB,GAAQ0rB,GAAkB1rB,GCvBvD,SAASirB,GAAkBjrB,EAAKrB,GAC5B,IAAI2tB,EAAmBD,GAAoBrsB,GAI3C,OAHIssB,IAAqBnR,KACrBmR,EAAmBtB,IAEhBsB,EAAiBrB,kBAClBqB,EAAiBrB,kBAAkBtsB,QACnC,CACV,CCHA,MAAM4tB,GAAmB,IAAIrsB,IAAI,CAAC,OAAQ,OAAQ,MCLlD,MAAMssB,GAAiB3nB,GAAMA,IAAMuK,IAAUvK,IAAMiL,GAC7C2c,GAAmB,CAACC,EAAQC,IAAQrd,WAAWod,EAAO3d,MAAM,MAAM4d,IAClEC,GAAyB,CAACC,EAAMC,IAAS,CAACC,GAAS7d,gBACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,MAAM8d,EAAW9d,EAAU6Z,MAAM,uBACjC,GAAIiE,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAEpC,CACD,MAAMJ,EAASxd,EAAU6Z,MAAM,qBAC/B,OAAI2D,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAEf,GAEEI,GAAgB,IAAI/sB,IAAI,CAAC,IAAK,IAAK,MACnCgtB,GAAgC3e,GAAmB4M,OAAQnb,IAASitB,GAAcxsB,IAAIT,IAY5F,MAAMmtB,GAAmB,CAErBrc,MAAO,EAAGmC,MAAOvB,cAAc,IAAKF,eAAe,OAAUyB,EAAEhR,IAAMgR,EAAE/Q,IAAMoN,WAAWoC,GAAepC,WAAWkC,GAClHR,OAAQ,EAAGkC,MAAO3B,aAAa,IAAKE,gBAAgB,OAAUyB,EAAEjR,IAAMiR,EAAEhR,IAAMoN,WAAWiC,GAAcjC,WAAWmC,GAClHP,IAAK,CAAC6b,GAAS7b,SAAU5B,WAAW4B,GACpCG,KAAM,CAAC0b,GAAS1b,UAAW/B,WAAW+B,GACtCD,OAAQ,EAAG8B,MAAOhC,SAAU5B,WAAW4B,IAAQgC,EAAEjR,IAAMiR,EAAEhR,KACzDiP,MAAO,EAAG8B,MAAO5B,UAAW/B,WAAW+B,IAAS4B,EAAEhR,IAAMgR,EAAE/Q,KAE1D+Q,EAAG2Z,GAAuB,EAAG,IAC7B1Z,EAAG0Z,GAAuB,EAAG,KAGjCO,GAAiBra,WAAaqa,GAAiBla,EAC/Cka,GAAiBpa,WAAaoa,GAAiBja,EC/C/C,MAAMka,OAAgBltB,IACtB,IAAImtB,IAAc,EACdC,IAAsB,EAC1B,SAASC,KACL,GAAID,GAAqB,CACrB,MAAME,EAAqB1oB,MAAMrG,KAAK2uB,IAAWjS,OAAQsS,GAAaA,EAASC,kBACzEC,EAAoB,IAAIztB,IAAIstB,EAAmBjS,IAAKkS,GAAaA,EAAS9W,UAC1EiX,MAA0BtpB,IAKhCqpB,EAAkBvsB,QAASuV,IACvB,MAAMkX,EDSlB,SAAyC/mB,GACrC,MAAM+mB,EAAoB,GAQ1B,OAPAX,GAA8B9rB,QAASpB,IACnC,MAAMrB,EAAQmI,EAAc0Q,SAASxX,QACvB,IAAVrB,IACAkvB,EAAkB3K,KAAK,CAACljB,EAAKrB,EAAM6F,QACnC7F,EAAM+F,IAAI1E,EAAI4D,WAAW,SAAW,EAAI,MAGzCiqB,CACX,CCnBsCC,CAAgCnX,GACrDkX,EAAkBzrB,SAEvBwrB,EAAoBlpB,IAAIiS,EAASkX,GACjClX,EAAQhV,YAGZ6rB,EAAmBpsB,QAASqsB,GAAaA,EAASM,uBAElDJ,EAAkBvsB,QAASuV,IACvBA,EAAQhV,SACR,MAAMqsB,EAAUJ,EAAoBppB,IAAImS,GACpCqX,GACAA,EAAQ5sB,QAAQ,EAAEpB,EAAKrB,MACnB,IAAIsF,EAC6B,QAAhCA,EAAK0S,EAAQa,SAASxX,UAAyB,IAAPiE,GAAyBA,EAAGS,IAAI/F,OAKrF6uB,EAAmBpsB,QAASqsB,GAAaA,EAASQ,mBAElDT,EAAmBpsB,QAASqsB,SACU,IAA9BA,EAASS,kBACTpwB,OAAOqwB,SAAS,EAAGV,EAASS,mBAGxC,CACAZ,IAAsB,EACtBD,IAAc,EACdD,GAAUhsB,QAASqsB,GAAaA,EAAShR,YACzC2Q,GAAU/rB,OACd,CACA,SAAS+sB,KACLhB,GAAUhsB,QAASqsB,IACfA,EAASY,gBACLZ,EAASC,mBACTJ,IAAsB,IAGlC,CAKA,MAAMgB,GACF,WAAAxT,CAAYyT,EAAqBC,EAAY/qB,EAAM0iB,EAAaxP,EAAS8X,GAAU,GAK/EzT,KAAK0T,YAAa,EAMlB1T,KAAKyT,SAAU,EAKfzT,KAAK0S,kBAAmB,EAKxB1S,KAAKqS,aAAc,EACnBrS,KAAKuT,oBAAsB,IAAIA,GAC/BvT,KAAKwT,WAAaA,EAClBxT,KAAKvX,KAAOA,EACZuX,KAAKmL,YAAcA,EACnBnL,KAAKrE,QAAUA,EACfqE,KAAKyT,QAAUA,CACnB,CACA,eAAAE,GACI3T,KAAKqS,aAAc,EACfrS,KAAKyT,SACLrB,GAAUrsB,IAAIia,MACTqS,KACDA,IAAc,EACdhrB,EAAMd,KAAK6sB,IACX/rB,EAAMb,iBAAiB+rB,OAI3BvS,KAAKqT,gBACLrT,KAAKyB,WAEb,CACA,aAAA4R,GACI,MAAME,oBAAEA,EAAA9qB,KAAqBA,EAAAkT,QAAMA,EAASwP,YAAAA,GAAgBnL,KAK5D,IAAA,IAAS7Y,EAAI,EAAGA,EAAIosB,EAAoBnsB,OAAQD,IAC5C,GAA+B,OAA3BosB,EAAoBpsB,GAIpB,GAAU,IAANA,EAAS,CACT,MAAMysB,EAAezI,aAAiD,EAASA,EAAY3hB,MACrFqqB,EAAgBN,EAAoBA,EAAoBnsB,OAAS,GACvE,QAAqB,IAAjBwsB,EACAL,EAAoB,GAAKK,OAC7B,GACSjY,GAAWlT,EAAM,CACtB,MAAMqrB,EAAcnY,EAAQoY,UAAUtrB,EAAMorB,GACxCC,UACAP,EAAoB,GAAKO,EAEjC,MAC+B,IAA3BP,EAAoB,KACpBA,EAAoB,GAAKM,GAEzB1I,QAAgC,IAAjByI,GACfzI,EAAYzhB,IAAI6pB,EAAoB,GAE5C,MAEIA,EAAoBpsB,GAAKosB,EAAoBpsB,EAAI,EAIjE,CACA,gBAAA6sB,GAAqB,CACrB,mBAAAjB,GAAwB,CACxB,eAAAkB,GAAoB,CACpB,eAAAhB,GAAoB,CACpB,QAAAxR,GACIzB,KAAK0T,YAAa,EAClB1T,KAAKwT,WAAWxT,KAAKuT,oBAAqBvT,KAAK6T,eAC/CzB,GAAUnsB,OAAO+Z,KACrB,CACA,MAAAha,GACSga,KAAK0T,aACN1T,KAAKqS,aAAc,EACnBD,GAAUnsB,OAAO+Z,MAEzB,CACA,MAAAkU,GACSlU,KAAK0T,YACN1T,KAAK2T,iBACb,EC7JJ,MAAMQ,GAAqBtqB,GAAM,+BAA+BoH,KAAKpH,GCU/DuqB,GAAA,2DAWN,SAASC,GAAiBhoB,EAASsP,EAAS2Y,EAAQ,GAEhD,MAAO5gB,EAAOoN,GAVlB,SAA0BzU,GACtB,MAAM0hB,EAAQqG,GAAsBG,KAAKloB,GACzC,IAAK0hB,EACD,MAAO,CAAA,GACX,OAASyG,EAAQC,EAAQ3T,GAAYiN,EACrC,MAAO,CAAC,KAAKyG,QAAuCA,EAASC,IAAU3T,EAC3E,CAI8B4T,CAAiBroB,GAE3C,IAAKqH,EACD,OAEJ,MAAMR,EAAWpQ,OAAO6xB,iBAAiBhZ,GAASiZ,iBAAiBlhB,GACnE,GAAIR,EAAU,CACV,MAAM2hB,EAAU3hB,EAASc,OACzB,OAAOmgB,GAAkBU,GAAWvgB,WAAWugB,GAAWA,CAC9D,CACA,OAAOhhB,GAAmBiN,GACpBuT,GAAiBvT,EAAUnF,EAAS2Y,EAAQ,GAC5CxT,CACV,CCpCA,MAAMgU,GAAiBjrB,GAAOgE,GAASA,EAAKoD,KAAKpH,GCK3CkrB,GAAsB,CAAC3gB,GAAQU,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT9D,KAAOpH,GAAY,SAANA,EACbwK,MAAQxK,GAAMA,IDOZmrB,GAA0BnrB,GAAMkrB,GAAoBE,KAAKH,GAAcjrB,IEH7E,MAAMqrB,WAA6B5B,GAC/B,WAAAxT,CAAYyT,EAAqBC,EAAY/qB,EAAM0iB,EAAaxP,GAC5DwZ,MAAM5B,EAAqBC,EAAY/qB,EAAM0iB,EAAaxP,GAAS,EACvE,CACA,aAAA0X,GACI,MAAME,oBAAEA,EAAA5X,QAAqBA,EAAAlT,KAASA,GAASuX,KAC/C,IAAKrE,IAAYA,EAAQtP,QACrB,OACJ8oB,MAAM9B,gBAIN,IAAA,IAASlsB,EAAI,EAAGA,EAAIosB,EAAoBnsB,OAAQD,IAAK,CACjD,IAAIiuB,EAAW7B,EAAoBpsB,GACnC,GAAwB,iBAAbiuB,IACPA,EAAWA,EAASphB,OAChBH,GAAmBuhB,IAAW,CAC9B,MAAMliB,EAAWmhB,GAAiBe,EAAUzZ,EAAQtP,cACnC,IAAb6G,IACAqgB,EAAoBpsB,GAAK+L,GAEzB/L,IAAMosB,EAAoBnsB,OAAS,IACnC4Y,KAAK6T,cAAgBuB,EAE7B,CAER,CAaA,GAPApV,KAAKqV,wBAOAzN,GAAeniB,IAAIgD,IAAwC,IAA/B8qB,EAAoBnsB,OACjD,OAEJ,MAAOiT,EAAQhH,GAAUkgB,EACnB+B,EAAaN,GAAuB3a,GACpCkb,EAAaP,GAAuB3hB,GAI1C,GAAIiiB,IAAeC,EAMnB,GAAI/D,GAAc8D,IAAe9D,GAAc+D,GAC3C,IAAA,IAASpuB,EAAI,EAAGA,EAAIosB,EAAoBnsB,OAAQD,IAAK,CACjD,MAAMxD,EAAQ4vB,EAAoBpsB,GACb,iBAAVxD,IACP4vB,EAAoBpsB,GAAKmN,WAAW3Q,GAE5C,MAMAqc,KAAK0S,kBAAmB,CAEhC,CACA,oBAAA2C,GACI,MAAM9B,oBAAEA,EAAA9qB,KAAqBA,GAASuX,KAChCwV,EAAsB,GAC5B,IAAA,IAASruB,EAAI,EAAGA,EAAIosB,EAAoBnsB,OAAQD,IACxCimB,GAAOmG,EAAoBpsB,KAC3BquB,EAAoBtN,KAAK/gB,GAG7BquB,EAAoBpuB,QR5EhC,SAAqCmsB,EAAqBiC,EAAqB/sB,GAC3E,IACIgtB,EADAtuB,EAAI,EAER,KAAOA,EAAIosB,EAAoBnsB,SAAWquB,GAAoB,CAC1D,MAAML,EAAW7B,EAAoBpsB,GACb,iBAAbiuB,IACN7D,GAAiB9rB,IAAI2vB,IACtBhG,GAAoBgG,GAAUjkB,OAAO/J,SACrCquB,EAAqBlC,EAAoBpsB,IAE7CA,GACJ,CACA,GAAIsuB,GAAsBhtB,EACtB,IAAA,MAAWitB,KAAaF,EACpBjC,EAAoBmC,GAAazF,GAAkBxnB,EAAMgtB,EAGrE,CQ4DYE,CAA4BpC,EAAqBiC,EAAqB/sB,EAE9E,CACA,mBAAAsqB,GACI,MAAMpX,QAAEA,EAAA4X,oBAASA,EAAA9qB,KAAqBA,GAASuX,KAC/C,IAAKrE,IAAYA,EAAQtP,QACrB,OACS,WAAT5D,IACAuX,KAAKkT,iBAAmBpwB,OAAO8yB,aAEnC5V,KAAK6V,eAAiB1D,GAAiB1pB,GAAMkT,EAAQma,qBAAsBhzB,OAAO6xB,iBAAiBhZ,EAAQtP,UAC3GknB,EAAoB,GAAKvT,KAAK6V,eAE9B,MAAME,EAAkBxC,EAAoBA,EAAoBnsB,OAAS,QACjD,IAApB2uB,GACApa,EAAQa,SAAS/T,EAAMstB,GAAiBvL,KAAKuL,GAAiB,EAEtE,CACA,eAAA9C,GACI,IAAIhqB,EACJ,MAAM0S,QAAEA,EAAAlT,KAASA,EAAA8qB,oBAAMA,GAAwBvT,KAC/C,IAAKrE,IAAYA,EAAQtP,QACrB,OACJ,MAAM1I,EAAQgY,EAAQa,SAAS/T,GAC/B9E,GAASA,EAAM6mB,KAAKxK,KAAK6V,gBAAgB,GACzC,MAAMG,EAAqBzC,EAAoBnsB,OAAS,EAClDysB,EAAgBN,EAAoByC,GAC1CzC,EAAoByC,GAAsB7D,GAAiB1pB,GAAMkT,EAAQma,qBAAsBhzB,OAAO6xB,iBAAiBhZ,EAAQtP,UACzG,OAAlBwnB,QAAiD,IAAvB7T,KAAK6T,gBAC/B7T,KAAK6T,cAAgBA,IAGa,QAAjC5qB,EAAK+W,KAAK6S,yBAAsC,IAAP5pB,OAAgB,EAASA,EAAG7B,SACtE4Y,KAAK6S,kBAAkBzsB,QAAQ,EAAE6vB,EAAoBC,MACjDva,EACKa,SAASyZ,GACTvsB,IAAIwsB,KAGjBlW,KAAKqV,sBACT,ECpHJ,MAAMc,GAAe,CAACxyB,EAAO8E,IAEZ,WAATA,MAKiB,iBAAV9E,IAAsBmG,MAAMC,QAAQpG,OAE1B,iBAAVA,IACNqsB,GAAQ/e,KAAKtN,IAAoB,MAAVA,GACvBA,EAAMiF,WAAW,UCtB1B,MAAMwtB,GAAazyB,GAAoB,OAAVA,EAC7B,SAAS0yB,GAAiBC,GAAWC,OAAEA,aAAQC,EAAa,QAAU3C,GAClE,MAAM4C,EAAoBH,EAAUnW,OAAOiW,IACrChO,EAAQmO,GAAyB,SAAfC,GAAyBD,EAAS,GAAM,EAC1D,EACAE,EAAkBrvB,OAAS,EACjC,OAAQghB,QAA2B,IAAlByL,EAEXA,EADA4C,EAAkBrO,EAE5B,CCMA,MAAMsO,GACF,WAAA5W,EAAY6W,SAAEA,GAAW,EAAMC,MAAAA,EAAQ,EAAA/oB,KAAGA,EAAO,YAAA0oB,OAAaA,EAAS,cAAGM,EAAc,EAAAL,WAAGA,EAAa,UAAWpnB,IAE/G4Q,KAAK8W,WAAY,EACjB9W,KAAK+W,qBAAsB,EAC3B/W,KAAKgX,UAAYhW,GAAKja,MACtBiZ,KAAK5Q,QAAU,CACXunB,WACAC,MAAAA,EACA/oB,OACA0oB,SACAM,cACAL,gBACGpnB,GAEP4Q,KAAKiX,uBACT,CAWA,aAAAC,GACI,OAAKlX,KAAKmX,YAEHnX,KAAKmX,WAAanX,KAAKgX,UA/BZ,GAgCZhX,KAAKmX,WAFAnX,KAAKgX,SAIpB,CAMA,YAAI9jB,GAIA,OAHK8M,KAAKoX,WAAcpX,KAAK+W,sBTGjC3D,KACAb,MSDWvS,KAAKoX,SAChB,CAMA,mBAAAC,CAAoBf,EAAWzC,GAC3B7T,KAAKmX,WAAanW,GAAKja,MACvBiZ,KAAK+W,qBAAsB,EAC3B,MAAMtuB,KAAEA,EAAAoF,KAAMA,EAAA2D,SAAMA,EAAUolB,MAAAA,EAAAA,WAAOpD,EAAAnhB,SAAYA,EAAUgQ,YAAAA,GAAiBrC,KAAK5Q,QAKjF,IAAKiT,IC5Db,SAAoBiU,EAAW7tB,EAAMoF,EAAM2D,GAMvC,MAAM8lB,EAAiBhB,EAAU,GACjC,GAAuB,OAAnBgB,EACA,OAAO,EAMX,GAAa,YAAT7uB,GAA+B,eAATA,EACtB,OAAO,EACX,MAAM8uB,EAAiBjB,EAAUA,EAAUlvB,OAAS,GAC9CowB,EAAqBrB,GAAamB,EAAgB7uB,GAClDgvB,EAAqBtB,GAAaoB,EAAgB9uB,GAGxD,SAAK+uB,IAAuBC,KA9BhC,SAA6BnB,GACzB,MAAMjqB,EAAUiqB,EAAU,GAC1B,GAAyB,IAArBA,EAAUlvB,OACV,OAAO,EACX,IAAA,IAASD,EAAI,EAAGA,EAAImvB,EAAUlvB,OAAQD,IAClC,GAAImvB,EAAUnvB,KAAOkF,EACjB,OAAO,CAEnB,CAyBYqrB,CAAoBpB,KACb,WAATzoB,GAAqBwU,GAAYxU,KAAU2D,EACrD,CDkC6BmmB,CAAWrB,EAAW7tB,EAAMoF,EAAM2D,GAAW,CAE9D,IAAsColB,EAKlC,OAJAvkB,GACIA,EAASgkB,GAAiBC,EAAWtW,KAAK5Q,QAASykB,IACvDL,GAAcA,SACdxT,KAAK4X,yBAKL5X,KAAK5Q,QAAQ+R,SAAW,CAEhC,CACA,MAAM0W,EAAoB7X,KAAK8X,aAAaxB,EAAWzC,IAC7B,IAAtBgE,IAEJ7X,KAAKoX,UAAY,CACbd,UAAAA,EACAzC,mBACGgE,GAEP7X,KAAK+X,iBACT,CACA,cAAAA,GAAmB,CAMnB,IAAApW,CAAKiJ,EAASoN,GACV,OAAOhY,KAAKiY,uBAAuBtW,KAAKiJ,EAASoN,EACrD,CACA,OAAA1W,GACItB,KAAK5Q,QAAQvB,KAAO,YACpBmS,KAAK5Q,QAAQyU,KAAO,QACxB,CACA,qBAAAoT,GACIjX,KAAKiY,uBAAyB,IAAI5X,QAASuK,IACvC5K,KAAK4X,uBAAyBhN,GAEtC,EE7FJ,MAAMsN,GAAY,CAACz0B,EAAMC,EAAIF,IAClBC,GAAQC,EAAKD,GAAQD,ECrBhC,SAAS20B,GAASz1B,EAAG01B,EAAGzM,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACDjpB,EAAc,GAAT01B,EAAI11B,GAASipB,EACzBA,EAAI,GACGyM,EACPzM,EAAI,EAAI,EACDjpB,GAAK01B,EAAI11B,IAAM,EAAI,EAAIipB,GAAK,EAChCjpB,CACX,CCbA,SAAS21B,GAAa7U,EAAGC,GACrB,OAAQ/gB,GAAOA,EAAI,EAAI+gB,EAAID,CAC/B,CCSA,MAAM8U,GAAiB,CAAC70B,EAAMC,EAAImG,KAC9B,MAAM0uB,EAAW90B,EAAOA,EAClB+0B,EAAO3uB,GAAKnG,EAAKA,EAAK60B,GAAYA,EACxC,OAAOC,EAAO,EAAI,EAAIxxB,KAAKyxB,KAAKD,IAE9BE,GAAa,CAACnK,GAAKL,GAAMS,IAE/B,SAASgK,GAAO5J,GACZ,MAAMlhB,GAFYhE,EAEQklB,EAFF2J,GAAWzD,KAAMpnB,GAASA,EAAKoD,KAAKpH,KAA3C,IAACA,EAIlB,IAAKU,QAAQsD,GACT,OAAO,EACX,IAAI+qB,EAAQ/qB,EAAKwG,MAAM0a,GAKvB,OAJIlhB,IAAS8gB,KAETiK,EFZR,UAAoBhK,IAAEA,EAAAC,WAAKA,YAAYC,EAAWva,MAAAA,IAC9Cqa,GAAO,IAEPE,GAAa,IACb,IAAIX,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAQ,GAAc,IAQT,CACD,MAAMuJ,EAAItJ,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCnsB,EAAI,EAAIosB,EAAYsJ,EAC1BjK,EAAMgK,GAASz1B,EAAG01B,EAAGxJ,EAAM,EAAI,GAC/BR,EAAQ+J,GAASz1B,EAAG01B,EAAGxJ,GACvBP,EAAO8J,GAASz1B,EAAG01B,EAAGxJ,EAAM,EAAI,EACpC,MAVIT,EAAMC,EAAQC,EAAOS,EAWzB,MAAO,CACHX,IAAKnnB,KAAK2R,MAAY,IAANwV,GAChBC,MAAOpnB,KAAK2R,MAAc,IAARyV,GAClBC,KAAMrnB,KAAK2R,MAAa,IAAP0V,GACjB9Z,MAAAA,EAER,CEbgBskB,CAAWD,IAEhBA,CACX,CACA,MAAME,GAAW,CAACr1B,EAAMC,KACpB,MAAMq1B,EAAWJ,GAAOl1B,GAClBu1B,EAASL,GAAOj1B,GACtB,IAAKq1B,IAAaC,EACd,OAAOX,GAAa50B,EAAMC,GAE9B,MAAMu1B,EAAU,IAAKF,GACrB,OAAQlvB,IACJovB,EAAQ9K,IAAMmK,GAAeS,EAAS5K,IAAK6K,EAAO7K,IAAKtkB,GACvDovB,EAAQ7K,MAAQkK,GAAeS,EAAS3K,MAAO4K,EAAO5K,MAAOvkB,GAC7DovB,EAAQ5K,KAAOiK,GAAeS,EAAS1K,KAAM2K,EAAO3K,KAAMxkB,GAC1DovB,EAAQ1kB,MAAQ2jB,GAAUa,EAASxkB,MAAOykB,EAAOzkB,MAAO1K,GACjDqkB,GAAKha,UAAU+kB,KCnCxBC,GAAmB,CAAC1V,EAAGC,IAAO5Z,GAAM4Z,EAAED,EAAE3Z,IACxCsvB,GAAO,IAAIC,IAAiBA,EAAat0B,OAAOo0B,ICRhDG,GAAkB,IAAIn0B,IAAI,CAAC,OAAQ,WCUzC,SAASgzB,GAAU1U,EAAGC,GAClB,OAAQ/gB,GAAM42B,GAAY9V,EAAGC,EAAG/gB,EACpC,CACA,SAAS62B,GAAS/V,GACd,MAAiB,iBAANA,EACA0U,GAEW,iBAAN1U,EACL3P,GAAmB2P,GACpB6U,GACAtJ,GAAM9d,KAAKuS,GACPsV,GACAU,GAEL1vB,MAAMC,QAAQyZ,GACZiW,GAEW,iBAANjW,EACLuL,GAAM9d,KAAKuS,GAAKsV,GAAWY,GAE/BrB,EACX,CACA,SAASoB,GAASjW,EAAGC,GACjB,MAAMqM,EAAS,IAAItM,GACbmW,EAAY7J,EAAO1oB,OACnBwyB,EAAapW,EAAEjD,IAAI,CAAC1W,EAAG1C,IAAMoyB,GAAS1vB,EAAT0vB,CAAY1vB,EAAG4Z,EAAEtc,KACpD,OAAQzE,IACJ,IAAA,IAASyE,EAAI,EAAGA,EAAIwyB,EAAWxyB,IAC3B2oB,EAAO3oB,GAAKyyB,EAAWzyB,GAAGzE,GAE9B,OAAOotB,EAEf,CACA,SAAS4J,GAAUlW,EAAGC,GAClB,MAAMqM,EAAS,IAAKtM,KAAMC,GACpBmW,EAAa,CAAA,EACnB,IAAA,MAAW50B,KAAO8qB,OACC,IAAXtM,EAAExe,SAAiC,IAAXye,EAAEze,KAC1B40B,EAAW50B,GAAOu0B,GAAS/V,EAAExe,GAAXu0B,CAAiB/V,EAAExe,GAAMye,EAAEze,KAGrD,OAAQ6E,IACJ,IAAA,MAAW7E,KAAO40B,EACd9J,EAAO9qB,GAAO40B,EAAW50B,GAAK6E,GAElC,OAAOimB,EAEf,CAcA,MAAM0J,GAAa,CAACnf,EAAQhH,KACxB,MAAMwmB,EAAW7J,GAAQJ,kBAAkBvc,GACrCymB,EAAc1K,GAAoB/U,GAClC0f,EAAc3K,GAAoB/b,GAIxC,OAHuBymB,EAAYvK,QAAQC,IAAIpoB,SAAW2yB,EAAYxK,QAAQC,IAAIpoB,QAC9E0yB,EAAYvK,QAAQR,MAAM3nB,SAAW2yB,EAAYxK,QAAQR,MAAM3nB,QAC/D0yB,EAAYvK,QAAQnb,OAAOhN,QAAU2yB,EAAYxK,QAAQnb,OAAOhN,OAE3DiyB,GAAgB5zB,IAAI4U,KACpB0f,EAAY5oB,OAAO/J,QACnBiyB,GAAgB5zB,IAAI4N,KAChBymB,EAAY3oB,OAAO/J,OD5EpC,SAAuBiT,EAAQhH,GAC3B,OAAIgmB,GAAgB5zB,IAAI4U,GACZ3X,GAAOA,GAAK,EAAI2X,EAAShH,EAGzB3Q,GAAOA,GAAK,EAAI2Q,EAASgH,CAEzC,CCsEmB2f,CAAc3f,EAAQhH,GAE1B8lB,GAAKM,GA3BpB,SAAoBpf,EAAQhH,GACxB,IAAIpK,EACJ,MAAMgxB,EAAgB,GAChBC,EAAW,CAAEnL,MAAO,EAAGS,IAAK,EAAGpb,OAAQ,GAC7C,IAAA,IAASjN,EAAI,EAAGA,EAAIkM,EAAOlC,OAAO/J,OAAQD,IAAK,CAC3C,MAAM0G,EAAOwF,EAAOoc,MAAMtoB,GACpBgzB,EAAc9f,EAAOkV,QAAQ1hB,GAAMqsB,EAASrsB,IAC5CusB,EAAoD,QAArCnxB,EAAKoR,EAAOlJ,OAAOgpB,UAAiC,IAAPlxB,EAAgBA,EAAK,EACvFgxB,EAAc9yB,GAAKizB,EACnBF,EAASrsB,IACb,CACA,OAAOosB,CACX,CAe6BI,CAAWP,EAAaC,GAAcA,EAAY5oB,QAAS0oB,GAIzExB,GAAahe,EAAQhH,ICtFpC,SAASvB,GAAIrO,EAAMC,EAAIhB,GACnB,GAAoB,iBAATe,GACO,iBAAPC,GACM,iBAANhB,EACP,OAAOw1B,GAAUz0B,EAAMC,EAAIhB,GAG/B,OADc62B,GAAS91B,EAChB62B,CAAM72B,EAAMC,EACvB,CCRA,SAAS62B,GAAsBC,EAAc7O,EAAGtf,GAC5C,MAAMouB,EAAQzzB,KAAKC,IAAI0kB,EAFI,EAEwB,GACnD,OAAOhD,GAAkBtc,EAAUmuB,EAAaC,GAAQ9O,EAAI8O,EAChE,CCNA,MAAMC,GAES,IAFTA,GAGO,GAHPA,GAII,EAJJA,GAKQ,EALRA,GAOQ,IAPRA,GAQM,GARNA,GASc,GATdA,GAWS,CACPC,SAAU,IACV3xB,QAAS,GAbX0xB,GAeS,CACPC,SAAU,KACV3xB,QAAS,IAjBX0xB,GAoBW,IApBXA,GAqBW,GArBXA,GAsBU,IAtBVA,GAuBU,ECnBVE,GAAU,KAChB,SAASC,IAAW1Z,SAAEA,EAAWuZ,UAAyBI,EAASJ,GAAelpB,SAAQA,EAAWkpB,GAAeK,KAAUA,EAAOL,KACjI,IAAIM,EACAC,EAEAC,EAAe,EAAIJ,EAIvBI,EAAe/mB,GAAMumB,GAA2BA,GAA2BQ,GAC3E/Z,EAAWhN,GAAMumB,GAA4BA,GAA4B32B,EAAsBod,IAC3F+Z,EAAe,GAIfF,EAAYG,IACR,MAAMC,EAAmBD,EAAeD,EAClCz2B,EAAQ22B,EAAmBja,EAC3BqC,EAAI4X,EAAmB5pB,EACvBiS,EAAI4X,GAAgBF,EAAcD,GAClCxX,EAAI1c,KAAKs0B,KAAK72B,GACpB,OAAOm2B,GAAWpX,EAAIC,EAAKC,GAE/BuX,EAAcE,IACV,MACM12B,EADmB02B,EAAeD,EACP/Z,EAC3BwC,EAAIlf,EAAQ+M,EAAWA,EACvB2L,EAAInW,KAAK+lB,IAAImO,EAAc,GAAKl0B,KAAK+lB,IAAIoO,EAAc,GAAKha,EAC5Doa,EAAIv0B,KAAKs0B,KAAK72B,GACdgqB,EAAI4M,GAAgBr0B,KAAK+lB,IAAIoO,EAAc,GAAID,GAErD,QADgBF,EAASG,GAAgBP,GAAU,GAAI,EAAK,KACzCjX,EAAIxG,GAAKoe,GAAM9M,KAOtCuM,EAAYG,GACEn0B,KAAKs0B,KAAKH,EAAeha,KACxBga,EAAe3pB,GAAY2P,EAAW,GAC1C,KAEX8Z,EAAcE,GACAn0B,KAAKs0B,KAAKH,EAAeha,IACIA,EAAWA,GAAvC3P,EAAW2pB,KAI9B,MACMA,EAmBV,SAAyBH,EAAUC,EAAYO,GAC3C,IAAIj4B,EAASi4B,EACb,IAAA,IAASr0B,EAAI,EAAGA,EAAIs0B,GAAgBt0B,IAChC5D,GAAkBy3B,EAASz3B,GAAU03B,EAAW13B,GAEpD,OAAOA,CACX,CAzByBm4B,CAAgBV,EAAUC,EAD1B,EAAI9Z,GAGzB,GADAA,IAAiCA,GAC7BuI,MAAMyR,GACN,MAAO,CACHQ,UAAWjB,GACXkB,QAASlB,GACTvZ,YAGH,CACD,MAAMwa,EAAY30B,KAAK+lB,IAAIoO,EAAc,GAAKJ,EAC9C,MAAO,CACHY,YACAC,QAAwB,EAAfV,EAAmBl0B,KAAKyxB,KAAKsC,EAAOY,GAC7Cxa,WAER,CACJ,CACA,MAAMsa,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAen0B,KAAKyxB,KAAK,EAAIyC,EAAeA,EACvD,CC3EA,MAAMW,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa3sB,EAASiM,GAC3B,OAAOA,EAAK7S,KAAMxD,QAAyB,IAAjBoK,EAAQpK,GACtC,CAuCA,SAASg3B,GAAOC,EAA0BvB,GAA+BI,EAASJ,IAC9E,MAAMtrB,EAA6C,iBAA5B6sB,EACjB,CACEC,eAAgBD,EAChB3F,UAAW,CAAC,EAAG,GACfwE,UAEFmB,EACN,IAAIE,UAAEA,EAAAC,UAAWA,GAAchtB,EAC/B,MAAMiL,EAASjL,EAAQknB,UAAU,GAC3BjjB,EAASjE,EAAQknB,UAAUlnB,EAAQknB,UAAUlvB,OAAS,GAKtD5C,EAAQ,CAAE2d,MAAM,EAAOxe,MAAO0W,IAC9BshB,UAAEA,UAAWC,EAAAb,KAASA,EAAA5Z,SAAMA,WAAU3P,EAAA6qB,uBAAUA,GAtD1D,SAA0BjtB,GACtB,IAAIktB,EAAgB,CAChB9qB,SAAUkpB,GACViB,UAAWjB,GACXkB,QAASlB,GACTK,KAAML,GACN2B,wBAAwB,KACrBjtB,GAGP,IAAK2sB,GAAa3sB,EAAS0sB,KACvBC,GAAa3sB,EAASysB,IACtB,GAAIzsB,EAAQ8sB,eAAgB,CACxB,MAAMA,EAAiB9sB,EAAQ8sB,eACzBK,EAAQ,EAAIv1B,KAAKw1B,IAAwB,IAAjBN,GACxBP,EAAYY,EAAOA,EACnBX,EAAU,EACZznB,GAAM,IAAM,EAAG,GAAK/E,EAAQ0rB,QAAU,IACtC9zB,KAAKyxB,KAAKkD,GACdW,EAAgB,IACTA,EACHvB,KAAML,GACNiB,YACAC,UAER,KACK,CACD,MAAMa,EAAU5B,GAAWzrB,GAC3BktB,EAAgB,IACTA,KACAG,EACH1B,KAAML,IAEV4B,EAAcD,wBAAyB,CAC3C,CAEJ,OAAOC,CACX,CAiBsFI,CAAiB,IAC5FttB,EACHoC,UAAWzN,EAAsBqL,EAAQoC,UAAY,KAEnDmrB,EAAkBnrB,GAAY,EAC9B0pB,EAAeU,GAAW,EAAI50B,KAAKyxB,KAAKkD,EAAYZ,IACpD6B,EAAevpB,EAASgH,EACxBwiB,EAAsB94B,EAAsBiD,KAAKyxB,KAAKkD,EAAYZ,IAQlE+B,EAAkB91B,KAAKylB,IAAImQ,GAAgB,EAOjD,IAAIG,EACJ,GAPAZ,IAAcA,EAAYW,EACpBpC,GAAyBC,SACzBD,GAAyB1xB,SAC/BozB,IAAcA,EAAYU,EACpBpC,GAAyBC,SACzBD,GAAyB1xB,SAE3BkyB,EAAe,EAAG,CAClB,MAAM8B,EAAc3B,GAAgBwB,EAAqB3B,GAEzD6B,EAAiBpR,IACb,MAAMqP,EAAWh0B,KAAKs0B,KAAKJ,EAAe2B,EAAsBlR,GAChE,OAAQtY,EACJ2nB,IACO2B,EACCzB,EAAe2B,EAAsBD,GACrCI,EACAh2B,KAAKgmB,IAAIgQ,EAAcrR,GACvBiR,EAAe51B,KAAKi2B,IAAID,EAAcrR,IAE1D,MAAA,GAC0B,IAAjBuP,EAEL6B,EAAiBpR,GAAMtY,EACnBrM,KAAKs0B,KAAKuB,EAAsBlR,IAC3BiR,GACID,EAAkBE,EAAsBD,GAAgBjR,OAEpE,CAED,MAAMuR,EAAoBL,EAAsB71B,KAAKyxB,KAAKyC,EAAeA,EAAe,GACxF6B,EAAiBpR,IACb,MAAMqP,EAAWh0B,KAAKs0B,KAAKJ,EAAe2B,EAAsBlR,GAE1DwR,EAAWn2B,KAAKE,IAAIg2B,EAAoBvR,EAAG,KACjD,OAAQtY,EACH2nB,IACK2B,EACEzB,EAAe2B,EAAsBD,GACrC51B,KAAKo2B,KAAKD,GACVD,EACIN,EACA51B,KAAKq2B,KAAKF,IAClBD,EAEhB,CACA,MAAMhb,EAAY,CACdob,mBAAoBjB,GAAyBlb,GAAmB,KAChE7B,KAAOqM,IACH,MAAMtf,EAAU0wB,EAAcpR,GAC9B,GAAK0Q,EAmBD73B,EAAM2d,KAAOwJ,GAAKxK,MAnBO,CACzB,IAAIoc,EAAkB,EAMlBrC,EAAe,IACfqC,EACU,IAAN5R,EACM9nB,EAAsB84B,GACtBpC,GAAsBwC,EAAepR,EAAGtf,IAEtD,MAAMmxB,EAA2Bx2B,KAAKylB,IAAI8Q,IAAoBpB,EACxDsB,EAA+Bz2B,KAAKylB,IAAIpZ,EAAShH,IAAY+vB,EACnE53B,EAAM2d,KACFqb,GAA4BC,CACpC,CAKA,OADAj5B,EAAMb,MAAQa,EAAM2d,KAAO9O,EAAShH,EAC7B7H,GAEX8qB,SAAU,KACN,MAAMgO,EAAqBt2B,KAAKE,IAAI+a,GAAsBC,GAAYF,IAChEQ,EAASQ,GAAsBxf,GAAa0e,EAAU5C,KAAKge,EAAqB95B,GAAUG,MAAO25B,EAAoB,IAC3H,OAAOA,EAAqB,MAAQ9a,IAG5C,OAAON,CACX,CChKA,SAASwb,IAAUpH,UAAAA,EAAAA,SAAW9kB,EAAW,EAAAmsB,MAAKA,EAAQ,gBAAKC,EAAe,IAAAC,cAAKA,EAAgB,GAAAC,gBAAIA,EAAkB,iBAAKC,EAAA72B,IAAcA,EAAAD,IAAKA,YAAKm1B,EAAY,GAAAD,UAAKA,IAC/J,MAAM9hB,EAASic,EAAU,GACnB9xB,EAAQ,CACV2d,MAAM,EACNxe,MAAO0W,GAGL2jB,EAAmBn0B,QACT,IAAR3C,EACOD,OACC,IAARA,GAEGD,KAAKylB,IAAIvlB,EAAM2C,GAAK7C,KAAKylB,IAAIxlB,EAAM4C,GAD/B3C,EAC0CD,EAEzD,IAAIg3B,EAAYN,EAAQnsB,EACxB,MAAM0sB,EAAQ7jB,EAAS4jB,EACjB5qB,OAA0B,IAAjB0qB,EAA6BG,EAAQH,EAAaG,GAK7D7qB,IAAW6qB,IACXD,EAAY5qB,EAASgH,GACzB,MAAM8jB,EAAaxS,IAAOsS,EAAYj3B,KAAKs0B,KAAK3P,EAAIiS,GAC9CQ,EAAczS,GAAMtY,EAAS8qB,EAAUxS,GACvC0S,EAAiB1S,IACnB,MAAMlnB,EAAQ05B,EAAUxS,GAClB9Q,EAASujB,EAAWzS,GAC1BnnB,EAAM2d,KAAOnb,KAAKylB,IAAIhoB,IAAU23B,EAChC53B,EAAMb,MAAQa,EAAM2d,KAAO9O,EAASwH,GAQxC,IAAIyjB,EACAC,EACJ,MAAMC,EAAsB7S,IAjCN,IAAC9hB,KAkCArF,EAAMb,WAlCS,IAARuD,GAAqB2C,EAAI3C,QAAiB,IAARD,GAAqB4C,EAAI5C,KAoCrFq3B,EAAsB3S,EACtB4S,EAAWvC,GAAO,CACd1F,UAAW,CAAC9xB,EAAMb,MAAOq6B,EAAgBx5B,EAAMb,QAC/C6N,SAAU+oB,GAAsB6D,EAAYzS,EAAGnnB,EAAMb,OACrDi4B,QAASiC,EACTlC,UAAWmC,EACX1B,YACAD,gBAIR,OADAqC,EAAmB,GACZ,CACHlB,mBAAoB,KACpBhe,KAAOqM,IAOH,IAAI8S,GAAkB,EAUtB,OATKF,QAAoC,IAAxBD,IACbG,GAAkB,EAClBJ,EAAc1S,GACd6S,EAAmB7S,SAMK,IAAxB2S,GAAqC3S,GAAK2S,EACnCC,EAASjf,KAAKqM,EAAI2S,KAGxBG,GAAmBJ,EAAc1S,GAC3BnnB,IAIvB,CClFA,MAAMsf,GAAuBgI,GAAY,IAAM,EAAG,EAAG,GAC/C/H,GAAwB+H,GAAY,EAAG,EAAG,IAAM,GAChD9H,GAA0B8H,GAAY,IAAM,EAAG,IAAM,GCIrD4S,GAAe,CACjB9a,OAAQ1gB,EACR4gB,UACAE,aACAD,WACAE,UACAiJ,aACAhJ,WACAC,UACA0I,aACAzI,WACA0I,eAEE6R,GAA8BrtB,IAChC,GAAIiR,GAAmBjR,GAAa,CAEhClO,EAAgC,IAAtBkO,EAAWlK,QACrB,MAAOw3B,EAAIC,EAAIC,EAAIC,GAAMztB,EACzB,OAAOwa,GAAY8S,EAAIC,EAAIC,EAAIC,EACnC,CAAA,MAC+B,iBAAfztB,EAGLotB,GAAaptB,GAEjBA,GCKX,SAAS0tB,GAAYC,EAAOnP,GAAU3b,MAAO+qB,GAAU,EAAMrb,KAAAA,EAAAA,MAAMyW,GAAU,IACzE,MAAM6E,EAAcF,EAAM73B,OAM1B,GALAhE,EAAU+7B,IAAgBrP,EAAO1oB,QAKb,IAAhB+3B,EACA,MAAO,IAAMrP,EAAO,GACxB,GAAoB,IAAhBqP,GAAqBrP,EAAO,KAAOA,EAAO,GAC1C,MAAO,IAAMA,EAAO,GACxB,MAAMsP,EAAmBH,EAAM,KAAOA,EAAM,GAExCA,EAAM,GAAKA,EAAME,EAAc,KAC/BF,EAAQ,IAAIA,GAAOI,UACnBvP,EAAS,IAAIA,GAAQuP,WAEzB,MAAMC,EAlDV,SAAsBxP,EAAQjM,EAAM0b,GAChC,MAAMD,EAAS,GACTE,EAAeD,GAAeztB,GAC9B2tB,EAAY3P,EAAO1oB,OAAS,EAClC,IAAA,IAASD,EAAI,EAAGA,EAAIs4B,EAAWt4B,IAAK,CAChC,IAAImzB,EAAQkF,EAAa1P,EAAO3oB,GAAI2oB,EAAO3oB,EAAI,IAC/C,GAAI0c,EAAM,CACN,MAAM6b,EAAiB51B,MAAMC,QAAQ8Z,GAAQA,EAAK1c,IAAMjE,EAAO2gB,EAC/DyW,EAAQnB,GAAKuG,EAAgBpF,EACjC,CACAgF,EAAOpX,KAAKoS,EAChB,CACA,OAAOgF,CACX,CAqCmBK,CAAa7P,EAAQjM,EAAMyW,GACpCmF,EAAYH,EAAOl4B,OACnBw4B,EAAgB/1B,IAClB,GAAIu1B,GAAoBv1B,EAAIo1B,EAAM,GAC9B,OAAOnP,EAAO,GAClB,IAAI3oB,EAAI,EACR,GAAIs4B,EAAY,EACZ,KAAOt4B,EAAI83B,EAAM73B,OAAS,KAClByC,EAAIo1B,EAAM93B,EAAI,IADOA,KAKjC,MAAM04B,IAA2BZ,EAAM93B,GAAI83B,EAAM93B,EAAI,GAAI0C,GACzD,OAAOy1B,EAAOn4B,GAAG04B,IAErB,OAAOX,EACAr1B,GAAM+1B,EAAazrB,GAAM8qB,EAAM,GAAIA,EAAME,EAAc,GAAIt1B,IAC5D+1B,CACV,CCvEA,SAASE,GAAc9X,GACnB,MAAM/N,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ8lB,GACxB,MAAM74B,EAAM+S,EAAOA,EAAO7S,OAAS,GACnC,IAAA,IAASD,EAAI,EAAGA,GAAK44B,EAAW54B,IAAK,CACjC,MAAM64B,EAAiBx8B,EAAS,EAAGu8B,EAAW54B,GAC9C8S,EAAOiO,KAAKgQ,GAAUhxB,EAAK,EAAG84B,GAClC,CACJ,CDLIC,CAAWhmB,EAAQ+N,EAAI5gB,OAAS,GACzB6S,CACX,CEIA,SAASqc,IAAUnV,SAAEA,EAAW,IAAKmV,UAAW4J,QAAgBC,EAAOtc,KAAAA,EAAO,cAK1E,MAAMuc,ECfY,CAACvc,GACZ/Z,MAAMC,QAAQ8Z,IAA4B,iBAAZA,EAAK,GDclBwc,CAAcxc,GAChCA,EAAKtD,IAAIoe,IACTA,GAA2B9a,GAK3Brf,EAAQ,CACV2d,MAAM,EACNxe,MAAOu8B,EAAe,IAKpBI,EE7BV,SAA8BrmB,EAAQkH,GAClC,OAAOlH,EAAOsG,IAAKggB,GAAMA,EAAIpf,EACjC,CF2B0Bqf,CAGtBL,GAASA,EAAM/4B,SAAW84B,EAAe94B,OACnC+4B,EACAL,GAAcI,GAAiB/e,GAC/Bsf,EAAoBzB,GAAYsB,EAAeJ,EAAgB,CACjErc,KAAM/Z,MAAMC,QAAQq2B,GACdA,GA9BSjvB,EA+BK+uB,EA/BG1d,EA+Ba4d,EA9BjCjvB,EAAOoP,IAAI,IAAMiC,GAAUwB,IAAWqE,OAAO,EAAGlX,EAAO/J,OAAS,MAD3E,IAAuB+J,EAAQqR,EAiC3B,MAAO,CACH8a,mBAAoBnc,EACpB7B,KAAOqM,IACHnnB,EAAMb,MAAQ88B,EAAkB9U,GAChCnnB,EAAM2d,KAAOwJ,GAAKxK,EACX3c,GAGnB,CG7CA,MAAMk8B,GAAmBj6B,IACrB,MAAMk6B,EAAgB,EAAGj8B,eAAgB+B,EAAO/B,GAChD,MAAO,CACHuF,MAAO,IAAM5C,EAAMZ,OAAOk6B,GAAe,GACzC1gB,KAAM,IAAM3Y,EAAYq5B,GAKxB55B,IAAK,IAAOZ,EAAUxB,aAAewB,EAAUzB,UAAYsc,GAAKja,QCClE65B,GAAa,CACfC,MAAOnD,GACPA,WACAoD,MAAOxK,GACPA,aACA0F,WAEE+E,GAAqBlsB,GAAYA,EAAU,IAMjD,MAAMmsB,WAA4BtK,GAC9B,WAAA5W,CAAY1Q,GACR+lB,MAAM/lB,GAIN4Q,KAAKihB,SAAW,KAIhBjhB,KAAKkhB,WAAa,KAIlBlhB,KAAKkJ,YAAc,EAInBlJ,KAAKmhB,cAAgB,EAMrBnhB,KAAKohB,iBAAmB,UAIxBphB,KAAKkB,UAAY,KACjBlB,KAAKxb,MAAQ,OAKbwb,KAAKC,KAAO,KAGR,GAFAD,KAAKyS,SAASzsB,SACdga,KAAK8W,WAAY,EACE,SAAf9W,KAAKxb,MACL,OACJwb,KAAKqhB,WACL,MAAMC,OAAEA,GAAWthB,KAAK5Q,QACxBkyB,GAAUA,KAEd,MAAM74B,KAAEA,EAAM0iB,YAAAA,EAAAA,QAAaxP,EAAS2a,UAAAA,GAActW,KAAK5Q,QACjDmyB,GAAsB5lB,aAAyC,EAASA,EAAQ2X,mBAAqBA,GAE3GtT,KAAKyS,SAAW,IAAI8O,EAAmBjL,EADpB,CAACG,EAAmB5C,IAAkB7T,KAAKqX,oBAAoBZ,EAAmB5C,GACvCprB,EAAM0iB,EAAaxP,GACjFqE,KAAKyS,SAASkB,iBAClB,CACA,OAAArS,GACI6T,MAAM7T,UAEFtB,KAAKoX,WACL5rB,OAAOqQ,OAAOmE,KAAKoX,UAAWpX,KAAK8X,aAAa9X,KAAKoX,UAAUd,WAEvE,CACA,YAAAwB,CAAa0J,GACT,MAAM3zB,KAAEA,EAAO,YAAA0oB,OAAaA,EAAS,EAAAM,YAAGA,EAAc,EAAAL,WAAGA,EAAAhlB,SAAYA,EAAW,GAAOwO,KAAK5Q,QACtFqyB,EAAmBpf,GAAYxU,GAC/BA,EACA+yB,GAAW/yB,IAASyoB,GAO1B,IAAIoL,EACAC,EACAF,IAAqBnL,IACK,iBAAnBkL,EAAY,KAInBE,EAAwBvI,GAAK4H,GAAmBjvB,GAAI0vB,EAAY,GAAIA,EAAY,KAChFA,EAAc,CAAC,EAAG,MAEtB,MAAMtf,EAAYuf,EAAiB,IAAKzhB,KAAK5Q,QAASknB,UAAWkL,IAK9C,WAAfhL,IACAmL,EAAoBF,EAAiB,IAC9BzhB,KAAK5Q,QACRknB,UAAW,IAAIkL,GAAanC,UAC5B7tB,UAAWA,KAWkB,OAAjC0Q,EAAUob,qBACVpb,EAAUob,mBAAqBrb,GAAsBC,IAEzD,MAAMob,mBAAEA,GAAuBpb,EACzB0f,EAAmBtE,EAAqBzG,EAE9C,MAAO,CACH3U,YACAyf,oBACAD,wBACApE,qBACAsE,mBACAC,cAPkBD,GAAoBrL,EAAS,GAAKM,EAS5D,CACA,cAAAkB,GACI,MAAMpB,SAAEA,GAAW,GAAS3W,KAAK5Q,QACjC4Q,KAAKuB,OACyB,WAA1BvB,KAAKohB,kBAAkCzK,EAIvC3W,KAAKxb,MAAQwb,KAAKohB,iBAHlBphB,KAAKwB,OAKb,CACA,IAAAsgB,CAAKp9B,EAAWq9B,GAAS,GACrB,MAAM7uB,SAAEA,GAAa8M,KAErB,IAAK9M,EAAU,CACX,MAAQojB,UAAAA,GAActW,KAAK5Q,QAC3B,MAAO,CAAE+S,MAAM,EAAMxe,MAAO2yB,EAAUA,EAAUlvB,OAAS,GAC7D,CACA,MAAMysB,cAAEA,EAAA3R,UAAeA,EAAAyf,kBAAWA,EAAAD,sBAAmBA,EAAuBpL,UAAAA,EAAAA,mBAAWgH,EAAAuE,cAAoBA,EAAAD,iBAAeA,GAAsB1uB,EAChJ,GAAuB,OAAnB8M,KAAKkB,UACL,OAAOgB,EAAU5C,KAAK,GAC1B,MAAQsX,MAAAA,EAAAA,OAAOL,EAAAC,WAAQA,cAAYK,EAAAxkB,SAAaA,GAAa2N,KAAK5Q,QAO9D4Q,KAAKiB,MAAQ,EACbjB,KAAKkB,UAAYla,KAAKE,IAAI8Y,KAAKkB,UAAWxc,GAErCsb,KAAKiB,MAAQ,IAClBjB,KAAKkB,UAAYla,KAAKE,IAAIxC,EAAYm9B,EAAgB7hB,KAAKiB,MAAOjB,KAAKkB,YAGvE6gB,EACA/hB,KAAKkJ,YAAcxkB,EAEI,OAAlBsb,KAAKihB,SACVjhB,KAAKkJ,YAAclJ,KAAKihB,SAMxBjhB,KAAKkJ,YACDliB,KAAK2R,MAAMjU,EAAYsb,KAAKkB,WAAalB,KAAKiB,MAGtD,MAAM+gB,EAAmBhiB,KAAKkJ,YAAc0N,GAAS5W,KAAKiB,OAAS,EAAI,GAAI,GACrEghB,EAAiBjiB,KAAKiB,OAAS,EAC/B+gB,EAAmB,EACnBA,EAAmBH,EACzB7hB,KAAKkJ,YAAcliB,KAAKC,IAAI+6B,EAAkB,GAE3B,aAAfhiB,KAAKxb,OAA0C,OAAlBwb,KAAKihB,WAClCjhB,KAAKkJ,YAAc2Y,GAEvB,IAAIK,EAAUliB,KAAKkJ,YACfiZ,EAAiBjgB,EACrB,GAAIqU,EAAQ,CAMR,MAAM/yB,EAAWwD,KAAKE,IAAI8Y,KAAKkJ,YAAa2Y,GAAiBD,EAK7D,IAAIQ,EAAmBp7B,KAAKq7B,MAAM7+B,GAK9B8+B,EAAoB9+B,EAAW,GAK9B8+B,GAAqB9+B,GAAY,IAClC8+B,EAAoB,GAEF,IAAtBA,GAA2BF,IAC3BA,EAAmBp7B,KAAKE,IAAIk7B,EAAkB7L,EAAS,GAIhChsB,QAAQ63B,EAAmB,KAE3B,YAAf5L,GACA8L,EAAoB,EAAIA,EACpBzL,IACAyL,GAAqBzL,EAAc+K,IAGnB,WAAfpL,IACL2L,EAAiBR,IAGzBO,EAAU/tB,GAAM,EAAG,EAAGmuB,GAAqBV,CAC/C,CAMA,MAAMp9B,EAAQy9B,EACR,CAAE9f,MAAM,EAAOxe,MAAO2yB,EAAU,IAChC6L,EAAe7iB,KAAK4iB,GACtBR,IACAl9B,EAAMb,MAAQ+9B,EAAsBl9B,EAAMb,QAE9C,IAAIwe,KAAEA,GAAS3d,EACVy9B,GAAyC,OAAvB3E,IACnBnb,EACInC,KAAKiB,OAAS,EACRjB,KAAKkJ,aAAe2Y,EACpB7hB,KAAKkJ,aAAe,GAElC,MAAMqZ,EAAwC,OAAlBviB,KAAKihB,WACb,aAAfjhB,KAAKxb,OAAwC,YAAfwb,KAAKxb,OAAuB2d,GAU/D,OATIogB,QAAyC,IAAlB1O,IACvBrvB,EAAMb,MAAQ0yB,GAAiBC,EAAWtW,KAAK5Q,QAASykB,IAExDxhB,GACAA,EAAS7N,EAAMb,OAEf4+B,GACAviB,KAAKwiB,SAEFh+B,CACX,CACA,YAAI2c,GACA,MAAMjO,SAAEA,GAAa8M,KACrB,OAAO9M,EAAWnP,EAAsBmP,EAASoqB,oBAAsB,CAC3E,CACA,QAAItc,GACA,OAAOjd,EAAsBic,KAAKkJ,YACtC,CACA,QAAIlI,CAAK8G,GACLA,IAAgCA,GAChC9H,KAAKkJ,YAAcpB,EACG,OAAlB9H,KAAKihB,UAAoC,IAAfjhB,KAAKiB,MAC/BjB,KAAKihB,SAAWnZ,EAEX9H,KAAKyiB,SACVziB,KAAKkB,UAAYlB,KAAKyiB,OAAO17B,MAAQ+gB,EAAU9H,KAAKiB,MAE5D,CACA,SAAIA,GACA,OAAOjB,KAAKmhB,aAChB,CACA,SAAIlgB,CAAMyhB,GACN,MAAMC,EAAa3iB,KAAKmhB,gBAAkBuB,EAC1C1iB,KAAKmhB,cAAgBuB,EACjBC,IACA3iB,KAAKgB,KAAOjd,EAAsBic,KAAKkJ,aAE/C,CACA,IAAA3H,GAII,GAHKvB,KAAKyS,SAASJ,aACfrS,KAAKyS,SAASyB,UAEblU,KAAKoX,UAEN,YADApX,KAAKohB,iBAAmB,WAG5B,GAAIphB,KAAK8W,UACL,OACJ,MAAM2L,OAAEA,EAAS/B,GAAAkC,OAAiBA,EAAA1hB,UAAQA,GAAclB,KAAK5Q,QACxD4Q,KAAKyiB,SACNziB,KAAKyiB,OAASA,EAAQ/9B,GAAcsb,KAAK8hB,KAAKp9B,KAElDk+B,GAAUA,IACV,MAAM77B,EAAMiZ,KAAKyiB,OAAO17B,MACF,OAAlBiZ,KAAKihB,SACLjhB,KAAKkB,UAAYna,EAAMiZ,KAAKihB,SAEtBjhB,KAAKkB,UAGS,aAAflB,KAAKxb,QACVwb,KAAKkB,UAAYna,GAHjBiZ,KAAKkB,UAAYA,QAA6CA,EAAYlB,KAAKkX,gBAKhE,aAAflX,KAAKxb,OACLwb,KAAKiX,wBAETjX,KAAKkhB,WAAalhB,KAAKkB,UACvBlB,KAAKihB,SAAW,KAKhBjhB,KAAKxb,MAAQ,UACbwb,KAAKyiB,OAAOx4B,OAChB,CACA,KAAAuX,GACI,IAAIvY,EACC+W,KAAKoX,WAIVpX,KAAKxb,MAAQ,SACbwb,KAAKihB,SAAuC,QAA3Bh4B,EAAK+W,KAAKkJ,mBAAgC,IAAPjgB,EAAgBA,EAAK,GAJrE+W,KAAKohB,iBAAmB,QAKhC,CACA,QAAA3f,GACuB,YAAfzB,KAAKxb,OACLwb,KAAKuB,OAETvB,KAAKohB,iBAAmBphB,KAAKxb,MAAQ,WACrCwb,KAAKihB,SAAW,IACpB,CACA,MAAAuB,GACIxiB,KAAKqhB,WACLrhB,KAAKxb,MAAQ,WACb,MAAMgvB,WAAEA,GAAexT,KAAK5Q,QAC5BokB,GAAcA,GAClB,CACA,MAAAxtB,GAC4B,OAApBga,KAAKkhB,YACLlhB,KAAK8hB,KAAK9hB,KAAKkhB,YAEnBlhB,KAAKqhB,WACLrhB,KAAKiX,uBACT,CACA,QAAAoK,GACIrhB,KAAKxb,MAAQ,OACbwb,KAAK6iB,aACL7iB,KAAK4X,yBACL5X,KAAKiX,wBACLjX,KAAKkB,UAAYlB,KAAKkhB,WAAa,KACnClhB,KAAKyS,SAASzsB,QAClB,CACA,UAAA68B,GACS7iB,KAAKyiB,SAEVziB,KAAKyiB,OAAOxiB,OACZD,KAAKyiB,YAAS,EAClB,CACA,MAAAV,CAAO/gB,GAEH,OADAhB,KAAKkB,UAAY,EACVlB,KAAK8hB,KAAK9gB,GAAM,EAC3B,EC1XJ,MAAM8hB,OAAwB59B,IAAI,CAC9B,UACA,WACA,SACA,cCLJ,SAAS69B,GAAoBpnB,EAASqnB,EAAW1M,GAAaM,MAAAA,EAAQ,WAAGzV,EAAW,IAAAoV,OAAKA,EAAS,EAAAC,WAAGA,EAAa,OAAQ3S,KAAAA,EAAO,kBAAasc,GAAW,IACrJ,MAAM8C,EAAkB,CAAED,CAACA,GAAY1M,GACnC6J,IACA8C,EAAgBhpB,OAASkmB,GAC7B,MAAM3d,EAAS6B,GAAwBR,EAAM1C,GAM7C,OAFIrX,MAAMC,QAAQyY,KACdygB,EAAgBzgB,OAASA,GACtB7G,EAAQtR,QAAQ44B,EAAiB,CACpCrM,MAAAA,EACAzV,WACAqB,OAAS1Y,MAAMC,QAAQyY,GAAmB,SAATA,EACjCqO,KAAM,OACNqS,WAAY3M,EAAS,EACrB4M,UAA0B,YAAf3M,EAA2B,YAAc,UAE5D,CClBA,MAAM4M,KAAmC,IAAM53B,OAAOE,eAAeC,KAAKiZ,QAAQnZ,UAAW,YCgE7F,MAAM43B,GAA6B,CAC/BvW,cACAD,aACAK,cAKJ,MAAMoW,WAA6B5M,GAC/B,WAAA5W,CAAY1Q,GACR+lB,MAAM/lB,GACN,MAAM3G,KAAEA,EAAM0iB,YAAAA,EAAAA,QAAaxP,EAAS2a,UAAAA,GAActW,KAAK5Q,QACvD4Q,KAAKyS,SAAW,IAAIyC,GAAqBoB,EAAW,CAACG,EAAmB5C,IAAkB7T,KAAKqX,oBAAoBZ,EAAmB5C,GAAgBprB,EAAM0iB,EAAaxP,GACzKqE,KAAKyS,SAASkB,iBAClB,CACA,YAAAmE,CAAaxB,EAAWzC,GACpB,IAAI1S,SAAEA,EAAW,IAAAgf,MAAKA,EAAOtc,KAAAA,EAAAA,KAAMhW,EAAMsd,YAAAA,EAAAA,KAAa1iB,EAAAyY,UAAMA,GAAelB,KAAK5Q,QAKhF,IAAK+b,EAAY1B,QAAU0B,EAAY1B,MAAMpd,QACzC,OAAO,EAjBnB,IA1CuC+C,EA0E/B,GARoB,iBAATyU,GACPf,MACkBe,KAzBZwf,KA0BNxf,EAAOwf,GAA2Bxf,IApElCxB,IAD2BjT,EA0EG4Q,KAAK5Q,SAzEfvB,OACP,WAAjBuB,EAAQvB,OACPuV,GAAuBhU,EAAQyU,MAuEiB,CAC7C,MAAM2P,WAAEA,WAAYnhB,EAAU8Y,YAAAA,UAAaxP,KAAYvM,GAAY4Q,KAAK5Q,QAClEm0B,EAvElB,SAA8BjN,EAAWlnB,GAMrC,MAAMo0B,EAAkB,IAAIxC,GAAoB,IACzC5xB,EACHknB,UAAAA,EACAC,OAAQ,EACRK,MAAO,EACPvU,aAAa,IAEjB,IAAI7d,EAAQ,CAAE2d,MAAM,EAAOxe,MAAO2yB,EAAU,IAC5C,MAAMmN,EAAwB,GAK9B,IAAI9X,EAAI,EACR,MAAQnnB,EAAM2d,MAAQwJ,EA/BN,KAgCZnnB,EAAQg/B,EAAgBzB,OAAOpW,GAC/B8X,EAAsBvb,KAAK1jB,EAAMb,OACjCgoB,GAvCY,GAyChB,MAAO,CACHwU,WAAO,EACP7J,UAAWmN,EACXtiB,SAAUwK,EA5CE,GA6CZ9H,KAAM,SAEd,CAwC0C6f,CAAqBpN,EAAWlnB,GAKrC,KAJzBknB,EAAYiN,EAAsBjN,WAIpBlvB,SACVkvB,EAAU,GAAKA,EAAU,IAE7BnV,EAAWoiB,EAAsBpiB,SACjCgf,EAAQoD,EAAsBpD,MAC9Btc,EAAO0f,EAAsB1f,KAC7BhW,EAAO,WACX,CACA,MAAMjG,EAAYm7B,GAAoB5X,EAAY1B,MAAMpd,QAAS5D,EAAM6tB,EAAW,IAAKtW,KAAK5Q,QAAS+R,WAAUgf,QAAOtc,KAAAA,IAyBtH,OAtBAjc,EAAUsZ,UAAYA,QAA6CA,EAAYlB,KAAKkX,gBAChFlX,KAAK2jB,iBACL/iB,GAAehZ,EAAWoY,KAAK2jB,iBAC/B3jB,KAAK2jB,qBAAkB,GAWvB/7B,EAAU0a,SAAW,KACjB,MAAMkR,WAAEA,GAAexT,KAAK5Q,QAC5B+b,EAAYzhB,IAAI2sB,GAAiBC,EAAWtW,KAAK5Q,QAASykB,IAC1DL,GAAcA,IACdxT,KAAKha,SACLga,KAAK4X,0BAGN,CACHhwB,YACAuZ,WACAgf,QACAtyB,OACAgW,KAAAA,EACAyS,UAAWA,EAEnB,CACA,YAAInV,GACA,MAAMjO,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OAAO,EACX,MAAMiO,SAAEA,GAAajO,EACrB,SAA6BiO,EACjC,CACA,QAAIH,GACA,MAAM9N,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OAAO,EACX,MAAMtL,UAAEA,GAAcsL,EACtB,OAAOnP,EAAsB6D,EAAUshB,aAAe,EAC1D,CACA,QAAIlI,CAAK8G,GACL,MAAM5U,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OACJ,MAAMtL,UAAEA,GAAcsL,EACtBtL,EAAUshB,cAAoCpB,EAClD,CACA,SAAI7G,GACA,MAAM/N,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OAAO,EACX,MAAMtL,UAAEA,GAAcsL,EACtB,OAAOtL,EAAUg8B,YACrB,CACA,SAAI3iB,CAAMyhB,GACN,MAAMxvB,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OACJ,MAAMtL,UAAEA,GAAcsL,EACtBtL,EAAUg8B,aAAelB,CAC7B,CACA,SAAIl+B,GACA,MAAM0O,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,MAAO,OACX,MAAMtL,UAAEA,GAAcsL,EACtB,OAAOtL,EAAUi8B,SACrB,CACA,aAAI3iB,GACA,MAAMhO,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OAAO,KACX,MAAMtL,UAAEA,GAAcsL,EAGtB,OAAOtL,EAAUsZ,SACrB,CAKA,cAAAN,CAAeC,GACX,GAAKb,KAAKoX,UAGL,CACD,MAAMlkB,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OAAOhQ,EACX,MAAM0E,UAAEA,GAAcsL,EACtB0N,GAAehZ,EAAWiZ,EAC9B,MARIb,KAAK2jB,gBAAkB9iB,EAS3B,OAAO3d,CACX,CACA,IAAAqe,GACI,GAAIvB,KAAK8W,UACL,OACJ,MAAM5jB,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OACJ,MAAMtL,UAAEA,GAAcsL,EACM,aAAxBtL,EAAUi8B,WACV7jB,KAAKiX,wBAETrvB,EAAU2Z,MACd,CACA,KAAAC,GACI,MAAMtO,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OACJ,MAAMtL,UAAEA,GAAcsL,EACtBtL,EAAU4Z,OACd,CACA,IAAAvB,GAGI,GAFAD,KAAKyS,SAASzsB,SACdga,KAAK8W,WAAY,EACE,SAAf9W,KAAKxb,MACL,OACJwb,KAAK4X,yBACL5X,KAAKiX,wBACL,MAAM/jB,SAAEA,GAAa8M,KACrB,IAAK9M,EACD,OACJ,MAAMtL,UAAEA,EAAW0uB,UAAAA,EAAAA,SAAWnV,OAAUtT,EAAMgW,KAAAA,EAAAA,MAAMsc,GAAUjtB,EAC9D,GAA4B,SAAxBtL,EAAUi8B,WACc,aAAxBj8B,EAAUi8B,UACV,OAUJ,GAAI7jB,KAAKgB,KAAM,CACX,MAAQmK,YAAAA,EAAAA,SAAa9Y,EAAAmhB,WAAUA,UAAY7X,KAAYvM,GAAY4Q,KAAK5Q,QAClEo0B,EAAkB,IAAIxC,GAAoB,IACzC5xB,EACHknB,UAAAA,EACAnV,WACAtT,OACAgW,KAAAA,EACAsc,QACA9d,aAAa,IAEXyhB,EAAajgC,EAAsBmc,KAAKgB,MAC9CmK,EAAYZ,gBAAgBiZ,EAAgBzB,OAAO+B,EAhQ3C,IAgQqEngC,MAAO6/B,EAAgBzB,OAAO+B,GAAYngC,MAhQ/G,GAiQZ,CACA,MAAM29B,OAAEA,GAAWthB,KAAK5Q,QACxBkyB,GAAUA,IACVthB,KAAKha,QACT,CACA,QAAAyb,GACI,MAAMvO,SAAEA,GAAa8M,KAChB9M,GAELA,EAAStL,UAAU46B,QACvB,CACA,MAAAx8B,GACI,MAAMkN,SAAEA,GAAa8M,KAChB9M,GAELA,EAAStL,UAAU5B,QACvB,CACA,eAAO+9B,CAAS30B,GACZ,MAAQ+b,YAAAA,EAAAA,KAAa1iB,EAAAouB,YAAMA,aAAaL,EAAAoF,QAAYA,EAAA/tB,KAASA,GAASuB,EACtE,KAAK+b,GACAA,EAAY1B,OACX0B,EAAY1B,MAAMpd,mBAAmB23B,aACvC,OAAO,EAEX,MAAM3xB,SAAEA,EAAAgH,kBAAUA,GAAsB8R,EAAY1B,MAAM/J,WAC1D,OAAQ0jB,MACJ36B,GACAq6B,GAAkBr9B,IAAIgD,KAKrB4J,IACAgH,IACAwd,GACc,WAAfL,GACY,IAAZoF,GACS,YAAT/tB,CACR,ECvTJ,MAAMo2B,GAAoB,CACtBp2B,KAAM,SACN8tB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQT+H,GAAsB,CACxBr2B,KAAM,YACNsT,SAAU,IAMR0C,GAAO,CACThW,KAAM,YACNgW,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB1C,SAAU,IAERgjB,GAAuB,CAACC,GAAY9N,UAAAA,KAClCA,EAAUlvB,OAAS,EACZ88B,GAEF1wB,GAAe/N,IAAI2+B,GACjBA,EAASx7B,WAAW,SAxBH,CAC5BiF,KAAM,SACN8tB,UAAW,IACXC,QAAoB,IAsBatF,EAAU,GAtBnB,EAAItvB,KAAKyxB,KAAK,KAAO,GAC7C0D,UAAW,IAsBD8H,GAEHpgB,GCzBX,MAAMwgB,GAAqB,CAAC57B,EAAM9E,EAAO0P,EAAQD,EAAa,CAAA,EAAIuI,EAAS2oB,IAAe9Q,IACtF,MAAM+Q,EAAkBxiB,GAAmB3O,EAAY3K,IAAS,CAAA,EAM1DmuB,EAAQ2N,EAAgB3N,OAASxjB,EAAWwjB,OAAS,EAK3D,IAAIsL,QAAEA,EAAU,GAAM9uB,EACtB8uB,KAA0CtL,GAC1C,IAAIxnB,EAAU,CACVknB,UAAWxsB,MAAMC,QAAQsJ,GAAUA,EAAS,CAAC,KAAMA,GACnDwQ,KAAM,UACNrS,SAAU7N,EAAMyN,iBACbmzB,EACH3N,OAAQsL,EACR7vB,SAAWxI,IACPlG,EAAM+F,IAAIG,GACV06B,EAAgBlyB,UAAYkyB,EAAgBlyB,SAASxI,IAEzD2pB,WAAY,KACRA,IACA+Q,EAAgB/Q,YAAc+Q,EAAgB/Q,cAElD/qB,OACA0iB,YAAaxnB,EACbgY,QAAS2oB,OAAY,EAAY3oB,ICpCzC,UAA6B6oB,KAAEA,EAAM5N,MAAO6N,gBAAQC,EAAAC,gBAAeA,EAAAC,iBAAiBA,EAAArO,OAAkBA,EAAAC,WAAQA,cAAYK,EAAApzB,KAAaA,EAAAy+B,QAAMA,KAAY9uB,IACrJ,QAAS5H,OAAO6P,KAAKjI,GAAYhM,MACrC,EDwCSy9B,CAAoBN,KACrBn1B,EAAU,IACHA,KACA+0B,GAAqB17B,EAAM2G,KAQlCA,EAAQ+R,WACR/R,EAAQ+R,SAAWtd,EAAsBuL,EAAQ+R,WAEjD/R,EAAQynB,cACRznB,EAAQynB,YAAchzB,EAAsBuL,EAAQynB,mBAEnC,IAAjBznB,EAAQ3L,OACR2L,EAAQknB,UAAU,GAAKlnB,EAAQ3L,MAEnC,IAAIqhC,GAAa,EAmBjB,KAlBqB,IAAjB11B,EAAQvB,MACc,IAArBuB,EAAQ+R,WAAmB/R,EAAQynB,eACpCznB,EAAQ+R,SAAW,EACG,IAAlB/R,EAAQwnB,QACRkO,GAAa,IAcjBA,IAAeR,QAA6B,IAAhB3gC,EAAM6F,MAAqB,CACvD,MAAMqqB,EAAgBwC,GAAiBjnB,EAAQknB,UAAWiO,GAC1D,QAAsB,IAAlB1Q,EAOA,OANAxsB,EAAMZ,OAAO,KACT2I,EAAQiD,SAASwhB,GACjBzkB,EAAQokB,eAIL,IAAI9R,GAAsB,GAEzC,CAMA,OAAK4iB,GAAahB,GAAqBS,SAAS30B,GACrC,IAAIk0B,GAAqBl0B,GAGzB,IAAI4xB,GAAoB5xB,IE7FvC,SAAS21B,IAAqBC,cAAEA,EAAAC,eAAeA,GAAkBjgC,GAC7D,MAAMkgC,EAAcF,EAAct5B,eAAe1G,KAAgC,IAAxBigC,EAAejgC,GAExE,OADAigC,EAAejgC,IAAO,EACfkgC,CACX,CACA,SAASC,GAAcr5B,EAAes5B,GAAuBxO,MAAAA,EAAQ,EAAAyO,mBAAGA,EAAAx3B,KAAoBA,GAAS,IACjG,IAAI5E,EACJ,IAAImK,WAAEA,EAAatH,EAAcq4B,qCAAwBhxB,KAAkBE,GAAW+xB,EAClFC,IACAjyB,EAAaiyB,GACjB,MAAMtlB,EAAa,GACbulB,EAAqBz3B,GACvB/B,EAAcmD,gBACdnD,EAAcmD,eAAes2B,WAAW13B,GAC5C,IAAA,MAAW7I,KAAOqO,EAAQ,CACtB,MAAM1P,EAAQmI,EAAc0Q,SAASxX,EAAgD,QAA1CiE,EAAK6C,EAAcqC,aAAanJ,UAAyB,IAAPiE,EAAgBA,EAAK,MAC5GqK,EAAcD,EAAOrO,GAC3B,QAAoB,IAAhBsO,GACCgyB,GACGP,GAAqBO,EAAoBtgC,GAC7C,SAEJ,MAAMu/B,EAAkB,CACpB3N,MAAAA,KACG7U,GAAmB3O,GAAc,CAAA,EAAIpO,IAM5C,IAAIs/B,GAAY,EAChB,GAAIxhC,OAAO0iC,uBAAwB,CAC/B,MAAMC,EAAWha,GAAqB3f,GACtC,GAAI25B,EAAU,CACV,MAAMvkB,EAAYpe,OAAO0iC,uBAAuBC,EAAUzgC,EAAKqC,GAC7C,OAAd6Z,IACAqjB,EAAgBrjB,UAAYA,EAC5BojB,GAAY,EAEpB,CACJ,CACA/Y,GAAqBzf,EAAe9G,GACpCrB,EAAMsG,MAAMo6B,GAAmBr/B,EAAKrB,EAAO2P,EAAaxH,EAAc45B,oBAAsB9d,GAAeniB,IAAIT,GACzG,CAAE6I,MAAM,GACR02B,EAAiBz4B,EAAew4B,IACtC,MAAM18B,EAAYjE,EAAMiE,UACpBA,GACAmY,EAAWmI,KAAKtgB,EAExB,CAQA,OAPIuL,GACAkN,QAAQC,IAAIP,GAAY4B,KAAK,KACzBta,EAAMZ,OAAO,KACT0M,GrEnDhB,SAAmBrH,EAAewF,GAC9B,MAAM4B,EAAWuM,GAAe3T,EAAewF,GAC/C,IAAI6B,cAAEA,EAAgB,CAAA,EAAAC,WAAIA,EAAa,CAAA,KAAOC,GAAWH,GAAY,CAAA,EACrEG,EAAS,IAAKA,KAAWF,GACzB,IAAA,MAAWnO,KAAOqO,EAEd+X,GAAetf,EAAe9G,EADhB0M,EAA6B2B,EAAOrO,IAG1D,CqE2CiC2gC,CAAU75B,EAAeqH,OAI/C4M,CACX,CCrEA,SAAS6lB,GAAe95B,EAAe+5B,EAASz2B,EAAU,CAAA,GACtD,IAAInG,EACJ,MAAMiK,EAAWuM,GAAe3T,EAAe+5B,EAA0B,SAAjBz2B,EAAQvB,KACjB,QAAxC5E,EAAK6C,EAAcuB,uBAAoC,IAAPpE,OAAgB,EAASA,EAAGsI,YAC7E,GACN,IAAI6B,WAAEA,EAAatH,EAAcq4B,wBAA0B,CAAA,GAAOjxB,GAAY,CAAA,EAC1E9D,EAAQi2B,qBACRjyB,EAAahE,EAAQi2B,oBAMzB,MAAMS,EAAe5yB,EACf,IAAMmN,QAAQC,IAAI6kB,GAAcr5B,EAAeoH,EAAU9D,IACzD,IAAMiR,QAAQuK,UAKdmb,EAAqBj6B,EAAck6B,iBAAmBl6B,EAAck6B,gBAAgBltB,KACpF,CAACmtB,EAAe,KACd,MAAMvB,cAAEA,EAAgB,EAAAC,gBAAGA,EAAAC,iBAAiBA,GAAsBxxB,EAClE,OAkBZ,SAAyBtH,EAAe+5B,EAASnB,EAAgB,EAAGC,EAAkB,EAAGC,EAAmB,EAAGx1B,GAC3G,MAAM2Q,EAAa,GACbmmB,GAAsBp6B,EAAck6B,gBAAgBltB,KAAO,GAAK6rB,EAChEwB,EAA+C,IAArBvB,EAC1B,CAACz9B,EAAI,IAAMA,EAAIw9B,EACf,CAACx9B,EAAI,IAAM++B,EAAqB/+B,EAAIw9B,EAU1C,OATA76B,MAAMrG,KAAKqI,EAAck6B,iBACpBI,KAAKC,IACLjgC,QAAQ,CAACof,EAAOre,KACjBqe,EAAMgD,OAAO,iBAAkBqd,GAC/B9lB,EAAWmI,KAAK0d,GAAepgB,EAAOqgB,EAAS,IACxCz2B,EACHwnB,MAAO8N,EAAgByB,EAAwBh/B,KAChDwa,KAAK,IAAM6D,EAAMgD,OAAO,oBAAqBqd,OAE7CxlB,QAAQC,IAAIP,EACvB,CAlCmBumB,CAAgBx6B,EAAe+5B,EAASnB,EAAgBuB,EAActB,EAAiBC,EAAkBx1B,IAElH,IAAMiR,QAAQuK,WAKd4Z,KAAEA,GAASpxB,EACjB,GAAIoxB,EAAM,CACN,MAAO+B,EAAOC,GAAiB,mBAAThC,EAChB,CAACsB,EAAcC,GACf,CAACA,EAAoBD,GAC3B,OAAOS,IAAQ5kB,KAAK,IAAM6kB,IAC9B,CAEI,OAAOnmB,QAAQC,IAAI,CAACwlB,IAAgBC,EAAmB32B,EAAQwnB,QAEvE,CAkBA,SAASyP,GAAgB7iB,EAAGC,GACxB,OAAOD,EAAEijB,iBAAiBhjB,EAC9B,CC5DA,MAAMijB,GAAkBv8B,EAAa/C,OACrC,SAASu/B,GAAkB76B,GACvB,IAAKA,EACD,OACJ,IAAKA,EAAc1B,sBAAuB,CACtC,MAAMO,EAAUmB,EAAcqB,QACxBw5B,GAAkB76B,EAAcqB,SAChC,CAAA,EAIN,YAHoC,IAAhCrB,EAAcvD,MAAMmC,UACpBC,EAAQD,QAAUoB,EAAcvD,MAAMmC,SAEnCC,CACX,CACA,MAAMA,EAAU,CAAA,EAChB,IAAA,IAASxD,EAAI,EAAGA,EAAIu/B,GAAiBv/B,IAAK,CACtC,MAAMsB,EAAO0B,EAAahD,GACpB8D,EAAOa,EAAcvD,MAAME,IAC7BmB,EAAeqB,KAAkB,IAATA,KACxBN,EAAQlC,GAAQwC,EAExB,CACA,OAAON,CACX,CChBA,MAAMi8B,GAAuB,IAAI18B,GAAsBm1B,UACjDwH,GAAoB38B,EAAqB9C,OAC/C,SAAS0/B,GAAYh7B,GACjB,OAAQiU,GAAeM,QAAQC,IAAIP,EAAWQ,IAAI,EAAG3Y,YAAWwH,aCRpE,SAA8BtD,EAAewF,EAAYlC,EAAU,CAAA,GAE/D,IAAIxH,EACJ,GAFAkE,EAAc0c,OAAO,iBAAkBlX,GAEnCxH,MAAMC,QAAQuH,GAAa,CAC3B,MAAMyO,EAAazO,EAAWiP,IAAKslB,GAAYD,GAAe95B,EAAe+5B,EAASz2B,IACtFxH,EAAYyY,QAAQC,IAAIP,EAC5B,MAAA,GAC+B,iBAAfzO,EACZ1J,EAAYg+B,GAAe95B,EAAewF,EAAYlC,OAErD,CACD,MAAM23B,EAA2C,mBAAfz1B,EAC5BmO,GAAe3T,EAAewF,EAAYlC,EAAQmC,QAClDD,EACN1J,EAAYyY,QAAQC,IAAI6kB,GAAcr5B,EAAei7B,EAAoB33B,GAC7E,CACA,OAAOxH,EAAU+Z,KAAK,KAClB7V,EAAc0c,OAAO,oBAAqBlX,IAElD,CDXkF01B,CAAqBl7B,EAAelE,EAAWwH,IACjI,CACA,SAAS63B,GAAqBn7B,GAC1B,IAAIzB,EAAUy8B,GAAYh7B,GACtBtH,EAAQ0iC,KACRC,GAAkB,EAKtB,MAAMC,EAA2Bv5B,GAAS,CAAC9I,EAAKuM,KAC5C,IAAIrI,EACJ,MAAMiK,EAAWuM,GAAe3T,EAAewF,EAAqB,SAATzD,EACZ,QAAxC5E,EAAK6C,EAAcuB,uBAAoC,IAAPpE,OAAgB,EAASA,EAAGsI,YAC7E,GACN,GAAI2B,EAAU,CACV,MAAME,WAAEA,EAAAD,cAAYA,KAAkBE,GAAWH,EACjDnO,EAAM,IAAKA,KAAQsO,KAAWF,EAClC,CACA,OAAOpO,GAmBX,SAASmK,EAAem4B,GACpB,MAAM9+B,MAAEA,GAAUuD,EACZnB,EAAUg8B,GAAkB76B,EAAcqB,SAAW,CAAA,EAKrD4S,EAAa,GAKbunB,MAAkBpiC,IAMxB,IAAIqiC,EAAkB,CAAA,EAKlBC,EAAsBplB,IAO1B,IAAA,IAASjb,EAAI,EAAGA,EAAI0/B,GAAmB1/B,IAAK,CACxC,MAAM0G,EAAO+4B,GAAqBz/B,GAC5BsgC,EAAYjjC,EAAMqJ,GAClB5C,OAAuB,IAAhB1C,EAAMsF,GACbtF,EAAMsF,GACNlD,EAAQkD,GACR65B,EAAgB99B,EAAeqB,GAK/B08B,EAAc95B,IAASw5B,EAAoBI,EAAUG,SAAW,MAClD,IAAhBD,IACAH,EAAsBrgC,GAO1B,IAAI0gC,EAAc58B,IAASN,EAAQkD,IAC/B5C,IAAS1C,EAAMsF,IACf65B,EAeJ,GAXIG,GACAV,GACAr7B,EAAcg8B,yBACdD,GAAc,GAMlBJ,EAAUzC,cAAgB,IAAKuC,IAI7BE,EAAUG,UAA4B,OAAhBD,IAElB18B,IAASw8B,EAAUM,UAErB/9B,EAAoBiB,IACJ,kBAATA,EACP,SAOJ,MAAM+8B,EAAmBC,GAAuBR,EAAUM,SAAU98B,GACpE,IAAIi9B,EAAoBF,GAEnBn6B,IAASw5B,GACNI,EAAUG,WACTC,GACDH,GAEHvgC,EAAIqgC,GAAuBE,EAC5BS,GAAuB,EAK3B,MAAMC,EAAiBt+B,MAAMC,QAAQkB,GAAQA,EAAO,CAACA,GAKrD,IAAIo9B,EAAiBD,EAAetjC,OAAOsiC,EAAwBv5B,GAAO,KACtD,IAAhB85B,IACAU,EAAiB,CAAA,GAUrB,MAAMC,mBAAEA,EAAqB,CAAA,GAAOb,EAC9Bc,EAAU,IACTD,KACAD,GAEDG,EAAiBxjC,IACnBkjC,GAAoB,EAChBZ,EAAY7hC,IAAIT,KAChBmjC,GAAuB,EACvBb,EAAYrhC,OAAOjB,IAEvByiC,EAAUxC,eAAejgC,IAAO,EAChC,MAAMmmB,EAAcrf,EAAc0Q,SAASxX,GACvCmmB,IACAA,EAAY1O,WAAY,IAEhC,IAAA,MAAWzX,KAAOujC,EAAS,CACvB,MAAMjpB,EAAO+oB,EAAerjC,GACtBua,EAAO+oB,EAAmBtjC,GAEhC,GAAIuiC,EAAgB77B,eAAe1G,GAC/B,SAIJ,IAAIyjC,GAAkB,EAElBA,EADAh3B,EAAkB6N,IAAS7N,EAAkB8N,IAC1BF,GAAeC,EAAMC,GAGtBD,IAASC,EAE3BkpB,EACInpB,QAEAkpB,EAAcxjC,GAIdsiC,EAAYvhC,IAAIf,QAGN,IAATsa,GAAsBgoB,EAAY7hC,IAAIT,GAK3CwjC,EAAcxjC,GAOdyiC,EAAUzC,cAAchgC,IAAO,CAEvC,CAKAyiC,EAAUM,SAAW98B,EACrBw8B,EAAUa,mBAAqBD,EAI3BZ,EAAUG,WACVL,EAAkB,IAAKA,KAAoBc,IAE3ClB,GAAmBr7B,EAAc4B,wBACjCw6B,GAAoB,GAQpBA,MAFyBL,GAAeG,IACIG,IAE5CpoB,EAAWmI,QAAQkgB,EAAe7nB,IAAK3Y,IAAA,CACnCA,YACAwH,QAAS,CAAEvB,WAGvB,CAMA,GAAIy5B,EAAYxuB,KAAM,CAClB,MAAM4vB,EAAoB,CAAA,EAC1BpB,EAAYlhC,QAASpB,IACjB,MAAM2jC,EAAiB78B,EAAc88B,cAAc5jC,GAC7CmmB,EAAcrf,EAAc0Q,SAASxX,GACvCmmB,IACAA,EAAY1O,WAAY,GAE5BisB,EAAkB1jC,GAAO2jC,QAAuDA,EAAiB,OAErG5oB,EAAWmI,KAAK,CAAEtgB,UAAW8gC,GACjC,CACA,IAAIG,EAAgBt+B,QAAQwV,EAAW3Y,QAOvC,OANI+/B,IACmB,IAAlB5+B,EAAMmC,SAAqBnC,EAAMmC,UAAYnC,EAAM8B,SACnDyB,EAAcg8B,yBACfe,GAAgB,GAEpB1B,GAAkB,EACX0B,EAAgBx+B,EAAQ0V,GAAcM,QAAQuK,SACzD,CAkBA,MAAO,CACH1b,iBACA45B,UAhBJ,SAAmBj7B,EAAM+5B,GACrB,IAAI3+B,EAEJ,GAAIzE,EAAMqJ,GAAM+5B,WAAaA,EACzB,OAAOvnB,QAAQuK,UAEsB,QAAxC3hB,EAAK6C,EAAck6B,uBAAoC,IAAP/8B,GAAyBA,EAAG7C,QAASof,IAAY,IAAIvc,EAAI,OAAuC,QAA/BA,EAAKuc,EAAMvW,sBAAmC,IAAPhG,OAAgB,EAASA,EAAG6/B,UAAUj7B,EAAM+5B,KACrMpjC,EAAMqJ,GAAM+5B,SAAWA,EACvB,MAAM7nB,EAAa7Q,EAAerB,GAClC,IAAA,MAAW7I,KAAOR,EACdA,EAAMQ,GAAKggC,cAAgB,CAAA,EAE/B,OAAOjlB,CACX,EAIIgpB,mBAjQJ,SAA4BC,GACxB3+B,EAAU2+B,EAAal9B,EAC3B,EAgQIy5B,SAAU,IAAM/gC,EAChBykC,MAAO,KACHzkC,EAAQ0iC,KACRC,GAAkB,GAG9B,CACA,SAASc,GAAuB1oB,EAAMD,GAClC,MAAoB,iBAATA,EACAA,IAASC,IAEXzV,MAAMC,QAAQuV,KACXD,GAAeC,EAAMC,EAGrC,CACA,SAAS2pB,GAAgBtB,GAAW,GAChC,MAAO,CACHA,WACA5C,cAAe,CAAA,EACfC,eAAgB,CAAA,EAChBqD,mBAAoB,CAAA,EAE5B,CACA,SAASpB,KACL,MAAO,CACH78B,QAAS6+B,IAAgB,GACzBC,YAAaD,KACbE,WAAYF,KACZ5qB,SAAU4qB,KACVG,UAAWH,KACXI,WAAYJ,KACZrhC,KAAMqhC,KAEd,CEzUA,MAAMK,GACF,WAAAzpB,CAAY0pB,GACRxpB,KAAKvR,WAAY,EACjBuR,KAAKwpB,KAAOA,CAChB,CACA,MAAA/iC,GAAW,ECHf,IAAImK,GAAK,ECCT,MAAMmP,GAAa,CACfnY,UAAW,CACP2hC,QCDR,cAA+BA,GAM3B,WAAAzpB,CAAY0pB,GACRrU,MAAMqU,GACNA,EAAKv6B,iBAAmBu6B,EAAKv6B,eAAiBg4B,GAAqBuC,GACvE,CACA,mCAAAC,GACI,MAAMp/B,QAAEA,GAAY2V,KAAKwpB,KAAK9pB,WAC1B1V,EAAoBK,KACpB2V,KAAK0pB,gBAAkBr/B,EAAQs/B,UAAU3pB,KAAKwpB,MAEtD,CAIA,KAAAr9B,GACI6T,KAAKypB,qCACT,CACA,MAAAhjC,GACI,MAAM4D,QAAEA,GAAY2V,KAAKwpB,KAAK9pB,YACtBrV,QAASu/B,GAAgB5pB,KAAKwpB,KAAKltB,WAAa,CAAA,EACpDjS,IAAYu/B,GACZ5pB,KAAKypB,qCAEb,CACA,OAAAr9B,GACI,IAAInD,EACJ+W,KAAKwpB,KAAKv6B,eAAeg6B,QACO,QAA/BhgC,EAAK+W,KAAK0pB,uBAAoC,IAAPzgC,GAAyBA,EAAG0C,KAAKqU,KAC7E,ID9BAnY,KAAM,CACF0hC,QDLR,cAAmCA,GAC/B,WAAAzpB,GACIqV,SAAS0U,WACT7pB,KAAKpP,GAAKA,IACd,CACA,MAAAnK,GACI,IAAKuZ,KAAKwpB,KAAKn8B,gBACX,OACJ,MAAMy8B,UAAEA,EAAAC,eAAWA,GAAmB/pB,KAAKwpB,KAAKn8B,iBACxCy8B,UAAWE,GAAkBhqB,KAAKwpB,KAAKS,qBAAuB,CAAA,EACtE,IAAKjqB,KAAKwpB,KAAKv6B,gBAAkB66B,IAAcE,EAC3C,OAEJ,MAAME,EAAgBlqB,KAAKwpB,KAAKv6B,eAAe65B,UAAU,QAASgB,GAC9DC,IAAmBD,GACnBI,EAAcvoB,KAAK,IAAMooB,EAAe/pB,KAAKpP,IAErD,CACA,KAAAzE,GACI,MAAMg+B,SAAEA,GAAanqB,KAAKwpB,KAAKn8B,iBAAmB,CAAA,EAC9C88B,IACAnqB,KAAK5T,QAAU+9B,EAASnqB,KAAKpP,IAErC,CACA,OAAAxE,GAAY,KG3BhB,SAASg+B,GAAY/2B,EAAQ2W,EAAWzB,EAASnZ,EAAU,CAAE6V,SAAS,IAElE,OADA5R,EAAOgU,iBAAiB2C,EAAWzB,EAASnZ,GACrC,IAAMiE,EAAO0T,oBAAoBiD,EAAWzB,EACvD,CCDA,SAAS8hB,GAAiBhlB,GACtB,MAAO,CACHilB,MAAO,CACHryB,EAAGoN,EAAMklB,MACTryB,EAAGmN,EAAMmlB,OAGrB,CCNA,SAASC,GAAgBp3B,EAAQ2W,EAAWzB,EAASnZ,GACjD,OAAOg7B,GAAY/2B,EAAQ2W,EDMR,CAACzB,GACZlD,GAAUK,GAAiBL,IAAUkD,EAAQlD,EAAOglB,GAAiBhlB,ICPvCqlB,CAAeniB,GAAUnZ,EACnE,CCLA,MAAMyI,GAAW,CAAC2L,EAAGC,IAAMzc,KAAKylB,IAAIjJ,EAAIC,GCWxC,MAAMknB,GACF,WAAA7qB,CAAYuF,EAAOulB,GAAUnoC,mBAAEA,EAAAooC,cAAoBA,mBAAeC,GAAmB,GAAW,IAgE5F,GA5DA9qB,KAAKyG,WAAa,KAIlBzG,KAAK+qB,cAAgB,KAIrB/qB,KAAKgrB,kBAAoB,KAIzBhrB,KAAK4qB,SAAW,CAAA,EAIhB5qB,KAAK6qB,cAAgB/nC,OACrBkd,KAAKirB,YAAc,KACf,IAAMjrB,KAAK+qB,gBAAiB/qB,KAAKgrB,kBAC7B,OACJ,MAAME,EAAOC,GAAWnrB,KAAKgrB,kBAAmBhrB,KAAKorB,SAC/CC,EAAmC,OAApBrrB,KAAKyG,WAIpB6kB,EDxClB,SAAoB9nB,EAAGC,GAEnB,MAAM8nB,EAAS1zB,GAAS2L,EAAEvL,EAAGwL,EAAExL,GACzBuzB,EAAS3zB,GAAS2L,EAAEtL,EAAGuL,EAAEvL,GAC/B,OAAOlR,KAAKyxB,KAAK8S,GAAU,EAAIC,GAAU,EAC7C,CCmC4CC,CAAWP,EAAKjxB,OAAQ,CAAEhC,EAAG,EAAGC,EAAG,KAAQ,EAC3E,IAAKmzB,IAAiBC,EAClB,OACJ,MAAQhB,MAAAA,GAAUY,GACVxmC,UAAAA,GAAcyB,EACtB6Z,KAAKorB,QAAQljB,KAAK,IAAKoiB,EAAO5lC,UAAAA,IAC9B,MAAMgnC,QAAEA,EAAAC,OAASA,GAAW3rB,KAAK4qB,SAC5BS,IACDK,GAAWA,EAAQ1rB,KAAK+qB,cAAeG,GACvClrB,KAAKyG,WAAazG,KAAK+qB,eAE3BY,GAAUA,EAAO3rB,KAAK+qB,cAAeG,IAEzClrB,KAAK4rB,kBAAoB,CAACvmB,EAAO6lB,KAC7BlrB,KAAK+qB,cAAgB1lB,EACrBrF,KAAKgrB,kBAAoBa,GAAeX,EAAMlrB,KAAKvd,oBAEnD4E,EAAMZ,OAAOuZ,KAAKirB,aAAa,IAEnCjrB,KAAK8rB,gBAAkB,CAACzmB,EAAO6lB,KAC3BlrB,KAAK+rB,MACL,MAAMC,MAAEA,EAAAC,aAAOA,EAAAC,gBAAcA,GAAoBlsB,KAAK4qB,SAGtD,GAFI5qB,KAAK8qB,kBACLoB,GAAmBA,KACjBlsB,KAAK+qB,gBAAiB/qB,KAAKgrB,kBAC7B,OACJ,MAAMmB,EAAUhB,GAA0B,kBAAf9lB,EAAMxX,KAC3BmS,KAAKgrB,kBACLa,GAAeX,EAAMlrB,KAAKvd,oBAAqBud,KAAKorB,SACtDprB,KAAKyG,YAAculB,GACnBA,EAAM3mB,EAAO8mB,GAEjBF,GAAgBA,EAAa5mB,EAAO8mB,KAGnCzmB,GAAiBL,GAClB,OACJrF,KAAK8qB,iBAAmBA,EACxB9qB,KAAK4qB,SAAWA,EAChB5qB,KAAKvd,mBAAqBA,EAC1Bud,KAAK6qB,cAAgBA,GAAiB/nC,OACtC,MACMspC,EAAcP,GADPxB,GAAiBhlB,GACWrF,KAAKvd,qBACxC6nC,MAAEA,GAAU8B,GACZ1nC,UAAEA,GAAcyB,EACtB6Z,KAAKorB,QAAU,CAAC,IAAKd,EAAO5lC,cAC5B,MAAM2nC,eAAEA,GAAmBzB,EAC3ByB,GACIA,EAAehnB,EAAO8lB,GAAWiB,EAAapsB,KAAKorB,UACvDprB,KAAKssB,gBAAkBnT,GAAKsR,GAAgBzqB,KAAK6qB,cAAe,cAAe7qB,KAAK4rB,mBAAoBnB,GAAgBzqB,KAAK6qB,cAAe,YAAa7qB,KAAK8rB,iBAAkBrB,GAAgBzqB,KAAK6qB,cAAe,gBAAiB7qB,KAAK8rB,iBAC9O,CACA,cAAAS,CAAe3B,GACX5qB,KAAK4qB,SAAWA,CACpB,CACA,GAAAmB,GACI/rB,KAAKssB,iBAAmBtsB,KAAKssB,kBAC7BhlC,EAAY0Y,KAAKirB,YACrB,EAEJ,SAASY,GAAeX,EAAMzoC,GAC1B,OAAOA,EAAqB,CAAE6nC,MAAO7nC,EAAmByoC,EAAKZ,QAAWY,CAC5E,CACA,SAASsB,GAAchpB,EAAGC,GACtB,MAAO,CAAExL,EAAGuL,EAAEvL,EAAIwL,EAAExL,EAAGC,EAAGsL,EAAEtL,EAAIuL,EAAEvL,EACtC,CACA,SAASizB,IAAWb,MAAEA,GAASc,GAC3B,MAAO,CACHd,QACA7lC,MAAO+nC,GAAclC,EAAOmC,GAAgBrB,IAC5CnxB,OAAQuyB,GAAclC,EAAOoC,GAAiBtB,IAC9C55B,SAAUJ,GAAYg6B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQhkC,OAAS,EACpC,CACA,SAASgK,GAAYg6B,EAASuB,GAC1B,GAAIvB,EAAQhkC,OAAS,EACjB,MAAO,CAAE6Q,EAAG,EAAGC,EAAG,GAEtB,IAAI/Q,EAAIikC,EAAQhkC,OAAS,EACrBwlC,EAAmB,KACvB,MAAMC,EAAYJ,GAAgBrB,GAClC,KAAOjkC,GAAK,IACRylC,EAAmBxB,EAAQjkC,KACvB0lC,EAAUnoC,UAAYkoC,EAAiBloC,UACvCb,EAAsB8oC,MAG1BxlC,IAEJ,IAAKylC,EACD,MAAO,CAAE30B,EAAG,EAAGC,EAAG,GAEtB,MAAM8I,EAAOjd,EAAsB8oC,EAAUnoC,UAAYkoC,EAAiBloC,WAC1E,GAAa,IAATsc,EACA,MAAO,CAAE/I,EAAG,EAAGC,EAAG,GAEtB,MAAMqlB,EAAkB,CACpBtlB,GAAI40B,EAAU50B,EAAI20B,EAAiB30B,GAAK+I,EACxC9I,GAAI20B,EAAU30B,EAAI00B,EAAiB10B,GAAK8I,GAQ5C,OANIuc,EAAgBtlB,IAAMmK,MACtBmb,EAAgBtlB,EAAI,GAEpBslB,EAAgBrlB,IAAMkK,MACtBmb,EAAgBrlB,EAAI,GAEjBqlB,CACX,CCjJA,SAASuP,GAAWC,GAChB,OAAOA,EAAK9lC,IAAM8lC,EAAK7lC,GAC3B,CAIA,SAAS8lC,GAAcvoC,EAAO+Y,EAAQnK,EAAQgH,EAAS,IACnD5V,EAAM4V,OAASA,EACf5V,EAAMwoC,YAAc/U,GAAU1a,EAAOtW,IAAKsW,EAAOvW,IAAKxC,EAAM4V,QAC5D5V,EAAM+P,MAAQs4B,GAAWz5B,GAAUy5B,GAAWtvB,GAC9C/Y,EAAMyoC,UACFhV,GAAU7kB,EAAOnM,IAAKmM,EAAOpM,IAAKxC,EAAM4V,QAAU5V,EAAMwoC,aACvDxoC,EAAM+P,OAjBG,OAiBmB/P,EAAM+P,OAhBzB,QAiBVkV,MAAMjlB,EAAM+P,UACZ/P,EAAM+P,MAAQ,IAEb/P,EAAMyoC,YAlBO,KAmBdzoC,EAAMyoC,WAlBQ,KAmBdxjB,MAAMjlB,EAAMyoC,cACZzoC,EAAMyoC,UAAY,EAE1B,CACA,SAASC,GAAa1oC,EAAO+Y,EAAQnK,EAAQgH,GACzC2yB,GAAcvoC,EAAMwT,EAAGuF,EAAOvF,EAAG5E,EAAO4E,EAAGoC,EAASA,EAAO9B,aAAU,GACrEy0B,GAAcvoC,EAAMyT,EAAGsF,EAAOtF,EAAG7E,EAAO6E,EAAGmC,EAASA,EAAO7B,aAAU,EACzE,CACA,SAAS40B,GAAiB/5B,EAAQg6B,EAAUlgC,GACxCkG,EAAOnM,IAAMiG,EAAOjG,IAAMmmC,EAASnmC,IACnCmM,EAAOpM,IAAMoM,EAAOnM,IAAM4lC,GAAWO,EACzC,CAKA,SAASC,GAAyBj6B,EAAQjL,EAAQ+E,GAC9CkG,EAAOnM,IAAMkB,EAAOlB,IAAMiG,EAAOjG,IACjCmM,EAAOpM,IAAMoM,EAAOnM,IAAM4lC,GAAW1kC,EACzC,CACA,SAASmlC,GAAqBl6B,EAAQjL,EAAQ+E,GAC1CmgC,GAAyBj6B,EAAO4E,EAAG7P,EAAO6P,EAAG9K,EAAO8K,GACpDq1B,GAAyBj6B,EAAO6E,EAAG9P,EAAO8P,EAAG/K,EAAO+K,EACxD,CCnBA,SAASs1B,GAA4BT,EAAM7lC,EAAKD,GAC5C,MAAO,CACHC,SAAa,IAARA,EAAoB6lC,EAAK7lC,IAAMA,OAAM,EAC1CD,SAAa,IAARA,EACC8lC,EAAK9lC,IAAMA,GAAO8lC,EAAK9lC,IAAM8lC,EAAK7lC,UAClC,EAEd,CAcA,SAASumC,GAA4BC,EAAYC,GAC7C,IAAIzmC,EAAMymC,EAAgBzmC,IAAMwmC,EAAWxmC,IACvCD,EAAM0mC,EAAgB1mC,IAAMymC,EAAWzmC,IAO3C,OAJI0mC,EAAgB1mC,IAAM0mC,EAAgBzmC,IACtCwmC,EAAWzmC,IAAMymC,EAAWxmC,OAC3BA,EAAKD,GAAO,CAACA,EAAKC,IAEhB,CAAEA,MAAKD,MAClB,CAuCA,MAAM2mC,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACH9mC,IAAK+mC,GAAoBH,EAAaC,GACtC9mC,IAAKgnC,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,iBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC9HA,MAWMC,GAAY,KAAA,CACdl2B,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,KCVzC,SAASmnC,GAAS9qC,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS+qC,IAAwBn4B,IAAEA,EAAAG,KAAKA,EAAAF,MAAMA,EAAAC,OAAOA,IACjD,MAAO,CACH6B,EAAG,CAAE/Q,IAAKmP,EAAMpP,IAAKkP,GACrB+B,EAAG,CAAEhR,IAAKgP,EAAKjP,IAAKmP,GAE5B,CCVA,SAASk4B,GAAgB95B,GACrB,YAAiB,IAAVA,GAAiC,IAAVA,CAClC,CACA,SAAS+5B,IAAW/5B,MAAAA,EAAAA,OAAO+C,EAAAC,OAAQA,IAC/B,OAAS82B,GAAgB95B,KACpB85B,GAAgB/2B,KAChB+2B,GAAgB92B,EACzB,CACA,SAASiC,GAAatI,GAClB,OAAQo9B,GAASp9B,IACbq9B,GAAer9B,IACfA,EAAOgH,GACPhH,EAAOgG,QACPhG,EAAOiG,SACPjG,EAAOkG,SACPlG,EAAOwG,OACPxG,EAAOyG,KACf,CACA,SAAS42B,GAAer9B,GACpB,OAAOs9B,GAAct9B,EAAO8G,IAAMw2B,GAAct9B,EAAO+G,EAC3D,CACA,SAASu2B,GAAc9qC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCjBA,SAAS+qC,GAAWpE,EAAO91B,EAAOy4B,GAG9B,OAAOA,EADQz4B,GADY81B,EAAQ2C,EAGvC,CAIA,SAAS0B,GAAgBrE,EAAO4C,EAAW14B,EAAOy4B,EAAa2B,GAI3D,YAHiB,IAAbA,IACAtE,EAAQoE,GAAWpE,EAAOsE,EAAU3B,IAEjCyB,GAAWpE,EAAO91B,EAAOy4B,GAAeC,CACnD,CAIA,SAAS2B,GAAe9B,EAAMG,EAAY,EAAG14B,EAAQ,EAAGy4B,EAAa2B,GACjE7B,EAAK7lC,IAAMynC,GAAgB5B,EAAK7lC,IAAKgmC,EAAW14B,EAAOy4B,EAAa2B,GACpE7B,EAAK9lC,IAAM0nC,GAAgB5B,EAAK9lC,IAAKimC,EAAW14B,EAAOy4B,EAAa2B,EACxE,CAIA,SAASE,GAAcC,GAAK92B,EAAEA,EAAAC,EAAGA,IAC7B22B,GAAeE,EAAI92B,EAAGA,EAAEi1B,UAAWj1B,EAAEzD,MAAOyD,EAAEg1B,aAC9C4B,GAAeE,EAAI72B,EAAGA,EAAEg1B,UAAWh1B,EAAE1D,MAAO0D,EAAE+0B,YAClD,CACA,MAAM+B,GAAsB,cACtBC,GAAsB,gBA6D5B,SAASC,GAAcnC,EAAMl1B,GACzBk1B,EAAK7lC,IAAM6lC,EAAK7lC,IAAM2Q,EACtBk1B,EAAK9lC,IAAM8lC,EAAK9lC,IAAM4Q,CAC1B,CAMA,SAASs3B,GAAcpC,EAAMqC,EAAeC,EAAWT,EAAUU,EAAa,IAG1ET,GAAe9B,EAAMqC,EAAeC,EAFhBnX,GAAU6U,EAAK7lC,IAAK6lC,EAAK9lC,IAAKqoC,GAEUV,EAChE,CAIA,SAASW,GAAaR,EAAK76B,GACvBi7B,GAAcJ,EAAI92B,EAAG/D,EAAU+D,EAAG/D,EAAUqD,OAAQrD,EAAUM,MAAON,EAAUqE,SAC/E42B,GAAcJ,EAAI72B,EAAGhE,EAAUgE,EAAGhE,EAAUsD,OAAQtD,EAAUM,MAAON,EAAUsE,QACnF,CCjHA,SAASsd,GAAmB7pB,EAAU4/B,GAClC,OAAOwC,GHeX,SAA4B/D,EAAOuB,GAC/B,IAAKA,EACD,OAAOvB,EACX,MAAMkF,EAAU3D,EAAe,CAAE5zB,EAAGqyB,EAAMj0B,KAAM6B,EAAGoyB,EAAMp0B,MACnDu5B,EAAc5D,EAAe,CAAE5zB,EAAGqyB,EAAMn0B,MAAO+B,EAAGoyB,EAAMl0B,SAC9D,MAAO,CACHF,IAAKs5B,EAAQt3B,EACb7B,KAAMm5B,EAAQv3B,EACd7B,OAAQq5B,EAAYv3B,EACpB/B,MAAOs5B,EAAYx3B,EAE3B,CG1BmCy3B,CAAmBzjC,EAASiR,wBAAyB2uB,GACxF,CCJA,MAAM8D,GAAmB,EAAGtjC,aACjBA,EAAUA,EAAQujC,cAAcC,YAAc,KCkBnDC,OAA0BC,QAKhC,MAAMC,GACF,WAAAlwB,CAAYhU,GACRkU,KAAKiwB,aAAe,KACpBjwB,KAAKuE,YAAa,EAClBvE,KAAKkwB,iBAAmB,KACxBlwB,KAAKitB,YAAc,CAAEh1B,EAAG,EAAGC,EAAG,GAI9B8H,KAAKmwB,aAAc,EACnBnwB,KAAKowB,uBAAwB,EAI7BpwB,KAAKqwB,QP5BK,CACdp4B,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IO8BjC+Y,KAAKlU,cAAgBA,CACzB,CACA,KAAA7B,CAAMqmC,GAAaC,aAAEA,GAAe,GAAU,CAAA,GAI1C,MAAMljC,gBAAEA,GAAoB2S,KAAKlU,cACjC,GAAIuB,IAAiD,IAA9BA,EAAgBy8B,UACnC,OACJ,MA6FMgB,iBAAEA,GAAqB9qB,KAAKN,WAClCM,KAAKwwB,WAAa,IAAI7F,GAAW2F,EAAa,CAC1CjE,eA/FoBhnB,IACpB,MAAQylB,iBAAAA,GAAqB9qB,KAAKN,WAGlCorB,EAAmB9qB,KAAKywB,iBAAmBzwB,KAAK0wB,gBAC5CH,GACAvwB,KAAKuwB,aAAalG,GAAiBhlB,GAAOilB,QA0F9CoB,QAvFY,CAACrmB,EAAO6lB,KAEpB,MAAQpjC,KAAAA,EAAAA,gBAAM6oC,cAAiBC,GAAgB5wB,KAAKN,WACpD,GAAI5X,IAAS6oC,IACL3wB,KAAKiwB,cACLjwB,KAAKiwB,eACTjwB,KAAKiwB,aC7DJ,OADIlD,ED8D2BjlC,IC7Df,MAATilC,EACZxoB,GAAWwoB,GACJ,MAGPxoB,GAAWwoB,IAAQ,EACZ,KACHxoB,GAAWwoB,IAAQ,IAKvBxoB,GAAWtM,GAAKsM,GAAWrM,EACpB,MAGPqM,GAAWtM,EAAIsM,GAAWrM,GAAI,EACvB,KACHqM,GAAWtM,EAAIsM,GAAWrM,GAAI,KD6CzB8H,KAAKiwB,cACN,OCjEpB,IAAqBlD,EDmET/sB,KAAKuE,YAAa,EAClBvE,KAAKkwB,iBAAmB,KACxBlwB,KAAK6wB,qBACD7wB,KAAKlU,cAAc8B,aACnBoS,KAAKlU,cAAc8B,WAAWkjC,oBAAqB,EACnD9wB,KAAKlU,cAAc8B,WAAWyF,YAAS,GAK3C+6B,GAAUrB,IACN,IAAI1gC,EAAU2T,KAAK+wB,mBAAmBhE,GAAMvjC,OAAS,EAIrD,GAAIqL,GAAQ5D,KAAK5E,GAAU,CACvB,MAAMuB,WAAEA,GAAeoS,KAAKlU,cAC5B,GAAI8B,GAAcA,EAAWxF,OAAQ,CACjC,MAAM4oC,EAAepjC,EAAWxF,OAAO6oC,UAAUlE,GACjD,GAAIiE,EAAc,CAEd3kC,EADeygC,GAAWkE,IACN18B,WAAWjI,GAAW,IAC9C,CACJ,CACJ,CACA2T,KAAKitB,YAAYF,GAAQ1gC,IAGzBukC,GACAvpC,EAAMT,WAAW,IAAMgqC,EAAYvrB,EAAO6lB,IAE9C3f,GAAqBvL,KAAKlU,cAAe,aACzC,MAAMmD,eAAEA,GAAmB+Q,KAAKlU,cAChCmD,GAAkBA,EAAe65B,UAAU,aAAa,IA4CxD6C,OA1CW,CAACtmB,EAAO6lB,KAEnB,MAAMyF,gBAAEA,EAAAO,kBAAiBA,EAAAC,gBAAmBA,SAAiBC,GAAYpxB,KAAKN,WAE9E,IAAKixB,IAAoB3wB,KAAKiwB,aAC1B,OACJ,MAAMh2B,OAAEA,GAAWixB,EAEnB,GAAIgG,GAA+C,OAA1BlxB,KAAKkwB,iBAM1B,OALAlwB,KAAKkwB,iBAuWrB,SAA6Bj2B,EAAQo3B,EAAgB,IACjD,IAAIlO,EAAY,KACZn8B,KAAKylB,IAAIxS,EAAO/B,GAAKm5B,EACrBlO,EAAY,IAEPn8B,KAAKylB,IAAIxS,EAAOhC,GAAKo5B,IAC1BlO,EAAY,KAEhB,OAAOA,CACX,CAhXwCmO,CAAoBr3B,QAEd,OAA1B+F,KAAKkwB,kBACLiB,GAAmBA,EAAgBnxB,KAAKkwB,mBAKhDlwB,KAAKuxB,WAAW,IAAKrG,EAAKZ,MAAOrwB,GACjC+F,KAAKuxB,WAAW,IAAKrG,EAAKZ,MAAOrwB,GAOjC+F,KAAKlU,cAAcnF,SAKnByqC,GAAUA,EAAO/rB,EAAO6lB,IAaxBe,aAXiB,CAAC5mB,EAAO6lB,IAASlrB,KAAKC,KAAKoF,EAAO6lB,GAYnDgB,gBAXoB,IAAMkC,GAAUrB,IACpC,IAAI9jC,EACJ,MAAwC,WAAjC+W,KAAKwxB,kBAAkBzE,KAC0B,QAAlD9jC,EAAK+W,KAAK+wB,mBAAmBhE,GAAMnlC,iBAA8B,IAAPqB,OAAgB,EAASA,EAAGsY,WAS7F,CACC9e,mBAAoBud,KAAKlU,cAAc2lC,wBACvC3G,mBACAD,cAAe8E,GAAiB3vB,KAAKlU,gBAE7C,CACA,IAAAmU,CAAKoF,EAAO6lB,GACR,MAAM3mB,EAAavE,KAAKuE,WAExB,GADAvE,KAAKha,UACAue,EACD,OACJ,MAAM/S,SAAEA,GAAa05B,EACrBlrB,KAAK2K,eAAenZ,GACpB,MAAMkgC,UAAEA,GAAc1xB,KAAKN,WACvBgyB,GACArqC,EAAMT,WAAW,IAAM8qC,EAAUrsB,EAAO6lB,GAEhD,CACA,MAAAllC,GACIga,KAAKuE,YAAa,EAClB,MAAM3W,WAAEA,EAAAqB,eAAYA,GAAmB+Q,KAAKlU,cACxC8B,IACAA,EAAWkjC,oBAAqB,GAEpC9wB,KAAKwwB,YAAcxwB,KAAKwwB,WAAWzE,MACnC/rB,KAAKwwB,gBAAa,EAClB,MAAMG,gBAAEA,GAAoB3wB,KAAKN,YAC5BixB,GAAmB3wB,KAAKiwB,eACzBjwB,KAAKiwB,eACLjwB,KAAKiwB,aAAe,MAExBhhC,GAAkBA,EAAe65B,UAAU,aAAa,EAC5D,CACA,UAAAyI,CAAWxE,EAAM4E,EAAQ13B,GACrB,MAAQnS,KAAAA,GAASkY,KAAKN,WAEtB,IAAKzF,IAAW23B,GAAW7E,EAAMjlC,EAAMkY,KAAKkwB,kBACxC,OACJ,MAAM2B,EAAY7xB,KAAK+wB,mBAAmBhE,GAC1C,IAAIztB,EAAOU,KAAKitB,YAAYF,GAAQ9yB,EAAO8yB,GAEvC/sB,KAAKmwB,aAAenwB,KAAKmwB,YAAYpD,KACrCztB,ERrLZ,SAA0BgrB,GAAOpjC,IAAEA,EAAAD,IAAKA,GAAOopC,GAa3C,YAZY,IAARnpC,GAAqBojC,EAAQpjC,EAE7BojC,EAAQ+F,EACFnY,GAAUhxB,EAAKojC,EAAO+F,EAAQnpC,KAC9BF,KAAKC,IAAIqjC,EAAOpjC,QAET,IAARD,GAAqBqjC,EAAQrjC,IAElCqjC,EAAQ+F,EACFnY,GAAUjxB,EAAKqjC,EAAO+F,EAAQppC,KAC9BD,KAAKE,IAAIojC,EAAOrjC,IAEnBqjC,CACX,CQuKmBwH,CAAiBxyB,EAAMU,KAAKmwB,YAAYpD,GAAO/sB,KAAKqwB,QAAQtD,KAEvE8E,EAAUnoC,IAAI4V,EAClB,CACA,kBAAAuxB,GACI,IAAI5nC,EACJ,MAAM+E,gBAAEA,EAAA8/B,YAAiBA,GAAgB9tB,KAAKN,WACxCtX,EAAS4X,KAAKlU,cAAc8B,aAC7BoS,KAAKlU,cAAc8B,WAAWxF,OAC7B4X,KAAKlU,cAAc8B,WAAWmkC,SAAQ,GACG,QAAxC9oC,EAAK+W,KAAKlU,cAAc8B,kBAA+B,IAAP3E,OAAgB,EAASA,EAAGb,OAC7E4pC,EAAkBhyB,KAAKmwB,YACzBniC,GAAmB1C,EAAY0C,GAC1BgS,KAAKmwB,cACNnwB,KAAKmwB,YAAcnwB,KAAKiyB,yBAKxBjyB,KAAKmwB,eADLniC,IAAmB5F,IRvKnC,SAAiC6oC,GAAW/6B,IAAEA,OAAKG,EAAAD,OAAMA,EAAAD,MAAQA,IAC7D,MAAO,CACH8B,EAAGu1B,GAA4ByD,EAAUh5B,EAAG5B,EAAMF,GAClD+B,EAAGs1B,GAA4ByD,EAAU/4B,EAAGhC,EAAKE,GAEzD,CQmKmC87B,CAAwB9pC,EAAO6oC,UAAWjjC,GAMrEgS,KAAKqwB,QRhHb,SAA4BvC,EAAcF,IAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH31B,EAAG41B,GAAmBC,EAAa,OAAQ,SAC3C51B,EAAG21B,GAAmBC,EAAa,MAAO,UAElD,CQqGuBqE,CAAmBrE,GAK9BkE,IAAoBhyB,KAAKmwB,aACzB/nC,GACA4X,KAAKmwB,cACJnwB,KAAKowB,uBACNhC,GAAUrB,KACmB,IAArB/sB,KAAKmwB,aACLnwB,KAAK+wB,mBAAmBhE,KACxB/sB,KAAKmwB,YAAYpD,GR1IrC,SAA+B3kC,EAAQ+nC,GACnC,MAAMiC,EAAsB,CAAA,EAO5B,YANwB,IAApBjC,EAAYjpC,MACZkrC,EAAoBlrC,IAAMipC,EAAYjpC,IAAMkB,EAAOlB,UAE/B,IAApBipC,EAAYlpC,MACZmrC,EAAoBnrC,IAAMkpC,EAAYlpC,IAAMmB,EAAOlB,KAEhDkrC,CACX,CQiI6CC,CAAsBjqC,EAAO6oC,UAAUlE,GAAO/sB,KAAKmwB,YAAYpD,MAIxG,CACA,qBAAAkF,GACI,MAAQjkC,gBAAiBmiC,EAAAmC,yBAAaA,GAA6BtyB,KAAKN,WACxE,IAAKywB,IAAgB7kC,EAAY6kC,GAC7B,OAAO,EACX,MAAMoC,EAAqBpC,EAAY9jC,SAEjCuB,WAAEA,GAAeoS,KAAKlU,cAE5B,IAAK8B,IAAeA,EAAWxF,OAC3B,OAAO,EACX,MAAMoqC,EF7Od,SAAwB72B,EAAS82B,EAAoBhwC,GACjD,MAAMiwC,EAAc5c,GAAmBna,EAASlZ,IAC1CkwC,OAAEA,GAAWF,EAKnB,OAJIE,IACAzD,GAAcwD,EAAYz6B,EAAG06B,EAAO14B,OAAOhC,GAC3Ci3B,GAAcwD,EAAYx6B,EAAGy6B,EAAO14B,OAAO/B,IAExCw6B,CACX,CEqO+BE,CAAeL,EAAoB3kC,EAAW2uB,KAAMvc,KAAKlU,cAAc2lC,yBAC9F,IAAIoB,ERnLZ,SAAiC5B,EAAWuB,GACxC,MAAO,CACHv6B,EAAGw1B,GAA4BwD,EAAUh5B,EAAGu6B,EAAev6B,GAC3DC,EAAGu1B,GAA4BwD,EAAU/4B,EAAGs6B,EAAet6B,GAEnE,CQ8KkC46B,CAAwBllC,EAAWxF,OAAO6oC,UAAWuB,GAK/E,GAAIF,EAA0B,CAC1B,MAAMS,EAAkBT,EL/OpC,UAAiCr6B,EAAEA,EAAAC,EAAGA,IAClC,MAAO,CAAEhC,IAAKgC,EAAEhR,IAAKiP,MAAO8B,EAAEhR,IAAKmP,OAAQ8B,EAAEjR,IAAKoP,KAAM4B,EAAE/Q,IAC9D,CK6O6D8rC,CAAwBH,IACzE7yB,KAAKowB,wBAA0B2C,EAC3BA,IACAF,EAAsBxE,GAAwB0E,GAEtD,CACA,OAAOF,CACX,CACA,cAAAloB,CAAenZ,GACX,MAAQ1J,KAAAA,EAAAA,aAAMmrC,EAAAnF,YAAcA,EAAAoF,eAAaA,mBAAgBpI,EAAAqI,oBAAkBA,GAAyBnzB,KAAKN,WACnGywB,EAAcnwB,KAAKmwB,aAAe,CAAA,EAClCiD,EAAqBhF,GAAUrB,IACjC,IAAK6E,GAAW7E,EAAMjlC,EAAMkY,KAAKkwB,kBAC7B,OAEJ,IAAI98B,EAAc+8B,GAAeA,EAAYpD,IAAU,CAAA,EACnDjC,IACA13B,EAAa,CAAElM,IAAK,EAAGD,IAAK,IAOhC,MAAM62B,EAAkBgQ,EAAc,IAAM,IACtCjQ,EAAgBiQ,EAAc,GAAK,IACnCpQ,EAAU,CACZ7vB,KAAM,UACN2D,SAAUyhC,EAAezhC,EAASu7B,GAAQ,EAC1CjP,kBACAD,gBACAD,aAAc,IACdxB,UAAW,EACXD,UAAW,MACR+W,KACA9/B,GAKP,OAAO4M,KAAKqzB,wBAAwBtG,EAAMrP,KAG9C,OAAOrd,QAAQC,IAAI8yB,GAAoBzxB,KAAKwxB,EAChD,CACA,uBAAAE,CAAwBtG,EAAM35B,GAC1B,MAAMy+B,EAAY7xB,KAAK+wB,mBAAmBhE,GAE1C,OADAxhB,GAAqBvL,KAAKlU,cAAeihC,GAClC8E,EAAU5nC,MAAMo6B,GAAmB0I,EAAM8E,EAAW,EAAGz+B,EAAY4M,KAAKlU,eAAe,GAClG,CACA,aAAA4kC,GACItC,GAAUrB,GAAS/sB,KAAK+wB,mBAAmBhE,GAAM9sB,OACrD,CACA,cAAAwwB,GACIrC,GAAUrB,IAAW,IAAI9jC,EAAI,OAA0D,QAAlDA,EAAK+W,KAAK+wB,mBAAmBhE,GAAMnlC,iBAA8B,IAAPqB,OAAgB,EAASA,EAAGuY,SAC/H,CACA,iBAAAgwB,CAAkBzE,GACd,IAAI9jC,EACJ,OAA0D,QAAlDA,EAAK+W,KAAK+wB,mBAAmBhE,GAAMnlC,iBAA8B,IAAPqB,OAAgB,EAASA,EAAGzE,KAClG,CAOA,kBAAAusC,CAAmBhE,GACf,MAAMuG,EAAU,QAAQvG,EAAKnwB,gBACvBrU,EAAQyX,KAAKlU,cAAc4T,WAC3B6zB,EAAsBhrC,EAAM+qC,GAClC,OAAOC,GAEDvzB,KAAKlU,cAAc0Q,SAASuwB,GAAOxkC,EAAMmC,QACrCnC,EAAMmC,QAAQqiC,QACd,IAAc,EAC5B,CACA,YAAAwD,CAAajG,GACT8D,GAAUrB,IACN,MAAQjlC,KAAAA,GAASkY,KAAKN,WAEtB,IAAKkyB,GAAW7E,EAAMjlC,EAAMkY,KAAKkwB,kBAC7B,OACJ,MAAMtiC,WAAEA,GAAeoS,KAAKlU,cACtB+lC,EAAY7xB,KAAK+wB,mBAAmBhE,GAC1C,GAAIn/B,GAAcA,EAAWxF,OAAQ,CACjC,MAAMlB,IAAEA,EAAAD,IAAKA,GAAQ2G,EAAWxF,OAAO6oC,UAAUlE,GACjD8E,EAAUnoC,IAAI4gC,EAAMyC,GAAQ7U,GAAUhxB,EAAKD,EAAK,IACpD,GAER,CAMA,8BAAAusC,GACI,IAAKxzB,KAAKlU,cAAcO,QACpB,OACJ,MAAQvE,KAAAA,EAAAA,gBAAMkG,GAAoBgS,KAAKN,YACjC9R,WAAEA,GAAeoS,KAAKlU,cAC5B,IAAKR,EAAY0C,KAAqBJ,IAAeoS,KAAKmwB,YACtD,OAKJnwB,KAAK0wB,gBAKL,MAAM+C,EAAc,CAAEx7B,EAAG,EAAGC,EAAG,GAC/Bk2B,GAAUrB,IACN,MAAM8E,EAAY7xB,KAAK+wB,mBAAmBhE,GAC1C,GAAI8E,IAAkC,IAArB7xB,KAAKmwB,YAAuB,CACzC,MAAMt1B,EAASg3B,EAAUroC,MACzBiqC,EAAY1G,GRnS5B,SAAoBvvB,EAAQnK,GACxB,IAAIgH,EAAS,GACb,MAAMq5B,EAAe5G,GAAWtvB,GAC1Bm2B,EAAe7G,GAAWz5B,GAOhC,OANIsgC,EAAeD,EACfr5B,IAAkBhH,EAAOnM,IAAKmM,EAAOpM,IAAMysC,EAAcl2B,EAAOtW,KAE3DwsC,EAAeC,IACpBt5B,IAAkBmD,EAAOtW,IAAKsW,EAAOvW,IAAM0sC,EAActgC,EAAOnM,MAE7DiN,GAAM,EAAG,EAAGkG,EACvB,CQwRoCD,CAAW,CAAElT,IAAK2T,EAAQ5T,IAAK4T,GAAUmF,KAAKmwB,YAAYpD,GAClF,IAKJ,MAAM1zB,kBAAEA,GAAsB2G,KAAKlU,cAAc4T,WACjDM,KAAKlU,cAAcO,QAAQiN,MAAMpF,UAAYmF,EACvCA,EAAkB,CAAA,EAAI,IACtB,OACNzL,EAAW2uB,MAAQ3uB,EAAW2uB,KAAKqX,eACnChmC,EAAWimC,eACX7zB,KAAK6wB,qBAKLzC,GAAUrB,IACN,IAAK6E,GAAW7E,EAAMjlC,EAAM,MACxB,OAIJ,MAAM+pC,EAAY7xB,KAAK+wB,mBAAmBhE,IACpC7lC,IAAEA,EAAAD,IAAKA,GAAQ+Y,KAAKmwB,YAAYpD,GACtC8E,EAAUnoC,IAAIwuB,GAAUhxB,EAAKD,EAAKwsC,EAAY1G,MAEtD,CACA,YAAA+G,GACI,IAAK9zB,KAAKlU,cAAcO,QACpB,OACJyjC,GAAoBpmC,IAAIsW,KAAKlU,cAAekU,MAC5C,MAIM+zB,EAAsBtJ,GAJZzqB,KAAKlU,cAAcO,QAIkB,cAAgBgZ,IACjE,MAAQvd,KAAAA,EAAAA,aAAM+V,GAAe,GAASmC,KAAKN,WAC3C5X,GAAQ+V,GAAgBmC,KAAK/V,MAAMob,KAEjC2uB,EAAyB,KAC3B,MAAMhmC,gBAAEA,GAAoBgS,KAAKN,WAC7BpU,EAAY0C,IAAoBA,EAAgB3B,UAChD2T,KAAKmwB,YAAcnwB,KAAKiyB,2BAG1BrkC,WAAEA,GAAeoS,KAAKlU,cACtBmoC,EAA4BrmC,EAAWyZ,iBAAiB,UAAW2sB,GACrEpmC,IAAeA,EAAWxF,SAC1BwF,EAAW2uB,MAAQ3uB,EAAW2uB,KAAKqX,eACnChmC,EAAWimC,gBAEfxsC,EAAMd,KAAKytC,GAKX,MAAME,EAAqB9J,GAAYtnC,OAAQ,SAAU,IAAMkd,KAAKwzB,kCAK9DW,EAA2BvmC,EAAWyZ,iBAAiB,YAAA,EAAiB5iB,QAAO2vC,uBAC7Ep0B,KAAKuE,YAAc6vB,IACnBhG,GAAUrB,IACN,MAAM5hB,EAAcnL,KAAK+wB,mBAAmBhE,GACvC5hB,IAELnL,KAAKitB,YAAYF,IAAStoC,EAAMsoC,GAAMG,UACtC/hB,EAAYzhB,IAAIyhB,EAAY3hB,MAAQ/E,EAAMsoC,GAAMG,cAEpDltB,KAAKlU,cAAcnF,SAE3B,GACA,MAAO,KACHutC,IACAH,IACAE,IACAE,GAA4BA,IAEpC,CACA,QAAAz0B,GACI,MAAMnX,EAAQyX,KAAKlU,cAAc4T,YACzB5X,KAAAA,GAAO,EAAAopC,kBAAOA,GAAoB,EAAAP,gBAAOA,GAAkB,EAAA3iC,gBAAOA,GAAkB,EAAA8/B,YAAOA,EAAcF,GAAAqF,aAAgBA,GAAe,GAAU1qC,EAC1J,MAAO,IACAA,EACHT,KAAAA,EACAopC,oBACAP,kBACA3iC,kBACA8/B,cACAmF,eAER,EAEJ,SAASrB,GAAWzO,EAAWr7B,EAAMooC,GACjC,SAAkB,IAATpoC,GAAiBA,IAASq7B,GACT,OAArB+M,GAA6BA,IAAqB/M,EAC3D,CEzcA,MAAMkR,GAAgB9rB,GAAY,CAAClD,EAAO6lB,KAClC3iB,GACAlhB,EAAMT,WAAW,IAAM2hB,EAAQlD,EAAO6lB,KCJ9C,MAAMoJ,GAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCbpB,SAASC,GAAgBC,EAAQ3H,GAC7B,OAAIA,EAAK9lC,MAAQ8lC,EAAK7lC,IACX,EACHwtC,GAAU3H,EAAK9lC,IAAM8lC,EAAK7lC,KAAQ,GAC9C,CAQA,MAAMytC,GAAsB,CACxBC,QAAS,CAAC/5B,EAAQ2uB,KACd,IAAKA,EAAKn2B,OACN,OAAOwH,EAKX,GAAsB,iBAAXA,EAAqB,CAC5B,IAAI/F,GAAG7D,KAAK4J,GAIR,OAAOA,EAHPA,EAASvG,WAAWuG,EAK5B,CAOA,MAAO,GAFG45B,GAAgB55B,EAAQ2uB,EAAKn2B,OAAO4E,OACpCw8B,GAAgB55B,EAAQ2uB,EAAKn2B,OAAO6E,QChChD28B,GAAmB,CACrBD,QAAS,CAAC/5B,GAAUi6B,YAAWC,sBAC3B,MAAMC,EAAWn6B,EACXo6B,EAASjlB,GAAQ3b,MAAMwG,GAE7B,GAAIo6B,EAAO7tC,OAAS,EAChB,OAAO4tC,EACX,MAAMnb,EAAW7J,GAAQJ,kBAAkB/U,GACrCZ,EAA8B,iBAAdg7B,EAAO,GAAkB,EAAI,EAE7CC,EAASH,EAAgB98B,EAAEzD,MAAQsgC,EAAU78B,EAC7Ck9B,EAASJ,EAAgB78B,EAAE1D,MAAQsgC,EAAU58B,EACnD+8B,EAAO,EAAIh7B,IAAWi7B,EACtBD,EAAO,EAAIh7B,IAAWk7B,EAOtB,MAAMC,EAAeld,GAAUgd,EAAQC,EAAQ,IAO/C,MALkC,iBAAvBF,EAAO,EAAIh7B,KAClBg7B,EAAO,EAAIh7B,IAAWm7B,GAEQ,iBAAvBH,EAAO,EAAIh7B,KAClBg7B,EAAO,EAAIh7B,IAAWm7B,GACnBvb,EAASob,KCjBxB,MAAMI,WAAiCtoC,EAAAA,UAMnC,iBAAAuoC,GACI,MAAMxpC,cAAEA,EAAAypC,YAAeA,EAAAC,kBAAaA,EAAAznC,SAAmBA,GAAaiS,KAAKzX,OACnEqF,WAAEA,GAAe9B,E3IpB/B,IAA2B2pC,I2IqBDC,G3IpBtBlqC,OAAOqQ,OAAOO,GAAiBq5B,G2IqBvB7nC,IACI2nC,EAAYI,OACZJ,EAAYI,MAAM5vC,IAAI6H,GACtB4nC,GAAqBA,EAAkBrL,UAAYp8B,GACnDynC,EAAkBrL,SAASv8B,GAE/BA,EAAW2uB,KAAKqZ,YAChBhoC,EAAWyZ,iBAAiB,oBAAqB,KAC7CrH,KAAK61B,iBAETjoC,EAAWS,WAAW,IACfT,EAAWwB,QACd26B,eAAgB,IAAM/pB,KAAK61B,kBAGnCvB,GAAsBE,gBAAiB,CAC3C,CACA,uBAAAsB,CAAwBx5B,GACpB,MAAMy5B,iBAAEA,EAAAjqC,cAAkBA,EAAehE,KAAAA,EAAAA,UAAMgiC,GAAc9pB,KAAKzX,MAC5DqF,EAAa9B,EAAc8B,WACjC,OAAKA,GASLA,EAAWk8B,UAAYA,EACnBhiC,GACAwU,EAAUy5B,mBAAqBA,QACV,IAArBA,EACAnoC,EAAWooC,aAGXh2B,KAAK61B,eAELv5B,EAAUwtB,YAAcA,IACpBA,EACAl8B,EAAWqoC,UAELroC,EAAWsoC,YAMjB7uC,EAAMT,WAAW,KACb,MAAMuvC,EAAQvoC,EAAWwoC,WACpBD,GAAUA,EAAME,QAAQjvC,QACzB4Y,KAAK61B,kBAKd,MAnCI,IAoCf,CACA,kBAAAS,GACI,MAAM1oC,WAAEA,GAAeoS,KAAKzX,MAAMuD,cAC9B8B,IACAA,EAAW2uB,KAAKqZ,YAChBjpC,EAAU/F,WAAW,MACZgH,EAAW2oC,kBAAoB3oC,EAAW4oC,UAC3Cx2B,KAAK61B,iBAIrB,CACA,oBAAAY,GACI,MAAM3qC,cAAEA,EAAAypC,YAAeA,EAAaC,kBAAmBkB,GAAoB12B,KAAKzX,OAC1EqF,WAAEA,GAAe9B,EACnB8B,IACAA,EAAW+oC,4BACPpB,GAAeA,EAAYI,OAC3BJ,EAAYI,MAAMiB,OAAOhpC,GACzB8oC,GAAkBA,EAAeG,YACjCH,EAAeG,WAAWjpC,GAEtC,CACA,YAAAioC,GACI,MAAMA,aAAEA,GAAiB71B,KAAKzX,MAC9BstC,GAAgBA,GACpB,CACA,MAAAlvC,GACI,OAAO,IACX,EAEJ,SAASgJ,GAAcpH,GACnB,MAAOuhC,EAAW+L,GCtFtB,SAAqBlM,GAAY,GAC7B,MAAMh/B,EAAUG,EAAAA,WAAWvI,GAC3B,GAAgB,OAAZoI,EACA,MAAO,EAAC,EAAM,MAClB,MAAMm/B,UAAEA,EAAAC,eAAWA,EAAAI,SAAgBA,GAAax/B,EAG1CiG,EAAKkmC,EAAAA,QACX7zC,EAAAA,UAAU,KACF0mC,GACAQ,EAASv5B,IACd,CAAC+4B,IACJ,MAAMkM,EAAe7pC,EAAAA,YAAY,IAAM29B,GAAaI,GAAkBA,EAAen5B,GAAK,CAACA,EAAIm5B,EAAgBJ,IAC/G,OAAQG,GAAaC,EAAiB,EAAC,EAAO8L,GAAgB,EAAC,EACnE,CDwEsCkB,GAC5BxB,EAAczqC,EAAAA,WAAWzI,GAC/B,OAAQgO,EAAAA,IAAIglC,GAA0B,IAAK9sC,EAAOgtC,cAA0BC,kBAAmB1qC,EAAAA,WAAW+B,GAA2Bi9B,YAAsB+L,gBAC/J,CACA,MAAMH,GAAyB,CAC3BlgC,aAAc,IACPm/B,GACHqC,QAAS,CACL,sBACA,uBACA,yBACA,4BAGRthC,oBAAqBi/B,GACrBh/B,qBAAsBg/B,GACtB9+B,uBAAwB8+B,GACxB/+B,wBAAyB++B,GACzBsC,UAAWpC,IElIf,MAAMqC,GAAiB,CAAC1zB,EAAGC,IAAMD,EAAE8Q,MAAQ7Q,EAAE6Q,MCG7C,MAAM6iB,GACF,WAAAr3B,GACIE,KAAK5P,SAAW,GAChB4P,KAAKo3B,SAAU,CACnB,CACA,GAAArxC,CAAIyf,GACAuC,GAAc/H,KAAK5P,SAAUoV,GAC7BxF,KAAKo3B,SAAU,CACnB,CACA,MAAAR,CAAOpxB,GACH2C,GAAWnI,KAAK5P,SAAUoV,GAC1BxF,KAAKo3B,SAAU,CACnB,CACA,OAAAhxC,CAAQ9C,GACJ0c,KAAKo3B,SAAWp3B,KAAK5P,SAASg2B,KAAK8Q,IACnCl3B,KAAKo3B,SAAU,EACfp3B,KAAK5P,SAAShK,QAAQ9C,EAC1B,ECfJ,MAAM+zC,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQjwC,OACrBmwC,GAAY5zC,GAA2B,iBAAVA,EAAqB2Q,WAAW3Q,GAASA,EACtE6zC,GAAQ7zC,GAA2B,iBAAVA,GAAsBmR,GAAG7D,KAAKtN,GA0C7D,SAAS8zC,GAAUtmC,EAAQumC,GACvB,YAA8B,IAAvBvmC,EAAOumC,GACRvmC,EAAOumC,GACPvmC,EAAOqE,YACjB,CAwBA,MAAMmiC,GAAgCC,GAAS,EAAG,GAAK1zB,IACjD2zB,GAAiCD,GAAS,GAAK,IAAM10C,GAC3D,SAAS00C,GAAS1wC,EAAKD,EAAKub,GACxB,OAAQ9f,GAEAA,EAAIwE,EACG,EACPxE,EAAIuE,EACG,EACJub,EAAOhf,EAAS0D,EAAKD,EAAKvE,GAEzC,CCpFA,SAASo1C,GAAa/K,EAAMgL,GACxBhL,EAAK7lC,IAAM6wC,EAAW7wC,IACtB6lC,EAAK9lC,IAAM8wC,EAAW9wC,GAC1B,CAMA,SAAS+wC,GAAYjJ,EAAKkJ,GACtBH,GAAa/I,EAAI92B,EAAGggC,EAAUhgC,GAC9B6/B,GAAa/I,EAAI72B,EAAG+/B,EAAU//B,EAClC,CAMA,SAASggC,GAAkBzzC,EAAO0zC,GAC9B1zC,EAAMyoC,UAAYiL,EAAYjL,UAC9BzoC,EAAM+P,MAAQ2jC,EAAY3jC,MAC1B/P,EAAMwoC,YAAckL,EAAYlL,YAChCxoC,EAAM4V,OAAS89B,EAAY99B,MAC/B,CCrBA,SAAS+9B,GAAiB9N,EAAO4C,EAAW14B,EAAOy4B,EAAa2B,GAM5D,OAJAtE,EAAQoE,GADRpE,GAAS4C,EACiB,EAAI14B,EAAOy4B,QACpB,IAAb2B,IACAtE,EAAQoE,GAAWpE,EAAO,EAAIsE,EAAU3B,IAErC3C,CACX,CAsBA,SAAS+N,GAAqBtL,EAAMuL,GAAatzC,EAAKuzC,EAAUC,GAAYn+B,EAAQo+B,IAlBpF,SAAyB1L,EAAMG,EAAY,EAAG14B,EAAQ,EAAG6F,EAAS,GAAKu0B,EAAUmJ,EAAahL,EAAM0L,EAAa1L,GACzGl4B,GAAQ5D,KAAKi8B,KACbA,EAAY54B,WAAW44B,GAEvBA,EADyBhV,GAAUugB,EAAWvxC,IAAKuxC,EAAWxxC,IAAKimC,EAAY,KAChDuL,EAAWvxC,KAE9C,GAAyB,iBAAdgmC,EACP,OACJ,IAAID,EAAc/U,GAAU6f,EAAW7wC,IAAK6wC,EAAW9wC,IAAKoT,GACxD0yB,IAASgL,IACT9K,GAAeC,GACnBH,EAAK7lC,IAAMkxC,GAAiBrL,EAAK7lC,IAAKgmC,EAAW14B,EAAOy4B,EAAa2B,GACrE7B,EAAK9lC,IAAMmxC,GAAiBrL,EAAK9lC,IAAKimC,EAAW14B,EAAOy4B,EAAa2B,EACzE,CAMI8J,CAAgB3L,EAAMuL,EAAWtzC,GAAMszC,EAAWC,GAAWD,EAAWE,GAAYF,EAAW9jC,MAAO6F,EAAQo+B,EAClH,CAIA,MAAME,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASC,GAAoB9J,EAAKuJ,EAAYL,EAAWa,GACrDT,GAAqBtJ,EAAI92B,EAAGqgC,EAAYK,GAAOV,EAAYA,EAAUhgC,OAAI,EAAW6gC,EAAYA,EAAU7gC,OAAI,GAC9GogC,GAAqBtJ,EAAI72B,EAAGogC,EAAYM,GAAOX,EAAYA,EAAU//B,OAAI,EAAW4gC,EAAYA,EAAU5gC,OAAI,EAClH,CCjDA,SAAS6gC,GAAgBt0C,GACrB,OAA2B,IAApBA,EAAMyoC,WAAmC,IAAhBzoC,EAAM+P,KAC1C,CACA,SAASwkC,GAAYv0C,GACjB,OAAOs0C,GAAgBt0C,EAAMwT,IAAM8gC,GAAgBt0C,EAAMyT,EAC7D,CACA,SAAS+gC,GAAWz1B,EAAGC,GACnB,OAAOD,EAAEtc,MAAQuc,EAAEvc,KAAOsc,EAAEvc,MAAQwc,EAAExc,GAC1C,CAIA,SAASiyC,GAAkB11B,EAAGC,GAC1B,OAAQzc,KAAK2R,MAAM6K,EAAEtc,OAASF,KAAK2R,MAAM8K,EAAEvc,MACvCF,KAAK2R,MAAM6K,EAAEvc,OAASD,KAAK2R,MAAM8K,EAAExc,IAC3C,CACA,SAASkyC,GAAiB31B,EAAGC,GACzB,OAAOy1B,GAAkB11B,EAAEvL,EAAGwL,EAAExL,IAAMihC,GAAkB11B,EAAEtL,EAAGuL,EAAEvL,EACnE,CACA,SAASkhC,GAAYrK,GACjB,OAAOjC,GAAWiC,EAAI92B,GAAK60B,GAAWiC,EAAI72B,EAC9C,CACA,SAASmhC,GAAgB71B,EAAGC,GACxB,OAAQD,EAAE0pB,YAAczpB,EAAEypB,WACtB1pB,EAAEhP,QAAUiP,EAAEjP,OACdgP,EAAEypB,cAAgBxpB,EAAEwpB,WAC5B,CC1BA,MAAMqM,GACF,WAAAx5B,GACIE,KAAKq2B,QAAU,EACnB,CACA,GAAAtwC,CAAIyjC,GACAzhB,GAAc/H,KAAKq2B,QAAS7M,GAC5BA,EAAK+P,gBACT,CACA,MAAA3C,CAAOpN,GAKH,GAJArhB,GAAWnI,KAAKq2B,QAAS7M,GACrBA,IAASxpB,KAAKw5B,WACdx5B,KAAKw5B,cAAW,GAEhBhQ,IAASxpB,KAAKy5B,KAAM,CACpB,MAAMD,EAAWx5B,KAAKq2B,QAAQr2B,KAAKq2B,QAAQjvC,OAAS,GAChDoyC,GACAx5B,KAAKi2B,QAAQuD,EAErB,CACJ,CACA,QAAAtD,CAAS1M,GACL,MAAMkQ,EAAc15B,KAAKq2B,QAAQsD,UAAWC,GAAWpQ,IAASoQ,GAChE,GAAoB,IAAhBF,EACA,OAAO,EAIX,IAAIF,EACJ,IAAA,IAASryC,EAAIuyC,EAAavyC,GAAK,EAAGA,IAAK,CACnC,MAAMyyC,EAAS55B,KAAKq2B,QAAQlvC,GAC5B,IAAyB,IAArByyC,EAAO9P,UAAqB,CAC5B0P,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAx5B,KAAKi2B,QAAQuD,IACN,EAKf,CACA,OAAAvD,CAAQzM,EAAMqQ,GACV,MAAML,EAAWx5B,KAAKy5B,KACtB,GAAIjQ,IAASgQ,IAEbx5B,KAAKw5B,SAAWA,EAChBx5B,KAAKy5B,KAAOjQ,EACZA,EAAKsQ,OACDN,GAAU,CACVA,EAASvtC,UAAYutC,EAASD,iBAC9B/P,EAAK+P,iBACL/P,EAAKuQ,WAAaP,EACdK,IACArQ,EAAKuQ,WAAWC,iBAAkB,GAElCR,EAASS,WACTzQ,EAAKyQ,SAAWT,EAASS,SACzBzQ,EAAKyQ,SAAS9rC,aACVqrC,EAASU,iBAAmBV,EAASrrC,cAEzCq7B,EAAKjN,MAAQiN,EAAKjN,KAAK4d,aACvB3Q,EAAK4Q,eAAgB,GAEzB,MAAMC,UAAEA,GAAc7Q,EAAKp6B,SACT,IAAdirC,GACAb,EAASc,MAcjB,CACJ,CACA,qBAAAC,GACIv6B,KAAKq2B,QAAQjwC,QAASojC,IAClB,MAAMp6B,QAAEA,EAAAorC,aAASA,GAAiBhR,EAClCp6B,EAAQ26B,gBAAkB36B,EAAQ26B,iBAC9ByQ,GACAA,EAAaprC,QAAQ26B,gBACjByQ,EAAaprC,QAAQ26B,kBAGrC,CACA,cAAAwP,GACIv5B,KAAKq2B,QAAQjwC,QAASojC,IAClBA,EAAKv9B,UAAYu9B,EAAK+P,gBAAe,IAE7C,CAKA,kBAAAkB,GACQz6B,KAAKy5B,MAAQz5B,KAAKy5B,KAAKQ,WACvBj6B,KAAKy5B,KAAKQ,cAAW,EAE7B,EChFJ,MAAMS,GAAU,CACZ7sC,KAAM,kBACN8sC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAEtBC,GAA4B,oBAAXh4C,aAAiD,IAAvBA,OAAOi4C,YAClDC,GAAgB,CAAC,GAAI,IAAK,IAAK,KAC/BC,GAAmB,CAAEC,WAAY,UAMvC,IAAItqC,GAAK,EACT,SAASuqC,GAAyBn2C,EAAK8G,EAAeqF,EAAQiqC,GAC1D,MAAMjtC,aAAEA,GAAiBrC,EAErBqC,EAAanJ,KACbmM,EAAOnM,GAAOmJ,EAAanJ,GAC3B8G,EAAcuvC,eAAer2C,EAAK,GAC9Bo2C,IACAA,EAAsBp2C,GAAO,GAGzC,CACA,SAASs2C,GAAuCC,GAE5C,GADAA,EAAeC,2BAA4B,EACvCD,EAAehf,OAASgf,EACxB,OACJ,MAAMzvC,cAAEA,GAAkByvC,EAAensC,QACzC,IAAKtD,EACD,OACJ,MAAM25B,EAAWha,GAAqB3f,GACtC,GAAIhJ,OAAOgM,4BAA4B22B,EAAU,aAAc,CAC3D,MAAQr9B,OAAAA,EAAAA,SAAQ2F,GAAawtC,EAAensC,QAC5CtM,OAAO24C,+BAA+BhW,EAAU,YAAap+B,IAASe,GAAU2F,GACpF,CACA,MAAMZ,OAAEA,GAAWouC,EACfpuC,IAAWA,EAAOquC,2BAClBF,GAAuCnuC,EAE/C,CACA,SAASqB,IAAqBktC,qBAAEA,EAAAC,cAAsBA,gBAAeC,EAAAC,kBAAeA,EAAAC,eAAmBA,IACnG,OAAO,MACH,WAAAh8B,CAAY3R,EAAe,GAAIhB,GAASwuC,aAAqD,EAASA,MAIlG37B,KAAKpP,GAAKA,KAIVoP,KAAK+7B,YAAc,EAOnB/7B,KAAK5P,aAAelL,IAKpB8a,KAAK5Q,QAAU,CAAA,EAMf4Q,KAAKg8B,iBAAkB,EACvBh8B,KAAK8wB,oBAAqB,EAO1B9wB,KAAKo6B,eAAgB,EAKrBp6B,KAAKi8B,mBAAoB,EAKzBj8B,KAAKk8B,yBAA0B,EAK/Bl8B,KAAKm8B,kBAAmB,EAIxBn8B,KAAKo8B,uBAAwB,EAC7Bp8B,KAAKq8B,uBAAwB,EAK7Br8B,KAAKm6B,YAAa,EAIlBn6B,KAAKs8B,OAAQ,EAKbt8B,KAAKu8B,YAAa,EAIlBv8B,KAAKw8B,sBAAuB,EAO5Bx8B,KAAKw7B,2BAA4B,EASjCx7B,KAAK80B,UAAY,CAAE78B,EAAG,EAAGC,EAAG,GAI5B8H,KAAKy8B,kBAAoBnzC,IACzB0W,KAAK08B,iBAAkB,EAEvB18B,KAAK28B,iBAAkB,EACvB38B,KAAK48B,eAAiB,IAAM58B,KAAKvZ,SACjCuZ,KAAK68B,2BAA4B,EACjC78B,KAAK88B,kBAAoB,KACjB98B,KAAKm6B,aACLn6B,KAAKm6B,YAAa,EAClBn6B,KAAK+8B,sBAQb/8B,KAAKg9B,iBAAmB,KACpBh9B,KAAK68B,2BAA4B,EAK7B/B,KACAJ,GAAQC,WACJD,GAAQE,qBACJF,GAAQG,uBACJ,GAEhB76B,KAAKi9B,MAAM72C,QAAQ82C,IACnBl9B,KAAKi9B,MAAM72C,QAAQ+2C,IACnBn9B,KAAKi9B,MAAM72C,QAAQg3C,IACnBp9B,KAAKi9B,MAAM72C,QAAQi3C,IACfvC,IACAh4C,OAAOi4C,YAAYuC,OAAO5C,KAMlC16B,KAAKu9B,yBAA2B,EAChCv9B,KAAKw9B,cAAe,EACpBx9B,KAAKy9B,WAAY,EACjBz9B,KAAK09B,kBAAoB,EAKzB19B,KAAK29B,gBAAkBr0C,IACvB0W,KAAK7R,aAAeA,EACpB6R,KAAKuc,KAAOpvB,EAASA,EAAOovB,MAAQpvB,EAAS6S,KAC7CA,KAAK49B,KAAOzwC,EAAS,IAAIA,EAAOywC,KAAMzwC,GAAU,GAChD6S,KAAK7S,OAASA,EACd6S,KAAKsU,MAAQnnB,EAASA,EAAOmnB,MAAQ,EAAI,EACzC,IAAA,IAASntB,EAAI,EAAGA,EAAI6Y,KAAK49B,KAAKx2C,OAAQD,IAClC6Y,KAAK49B,KAAKz2C,GAAGq1C,sBAAuB,EAEpCx8B,KAAKuc,OAASvc,OACdA,KAAKi9B,MAAQ,IAAI9F,GACzB,CACA,gBAAA9vB,CAAiB5e,EAAM8f,GAInB,OAHKvI,KAAKy8B,cAAch3C,IAAIgD,IACxBuX,KAAKy8B,cAAc/yC,IAAIjB,EAAM,IAAI6f,IAE9BtI,KAAKy8B,cAAcjzC,IAAIf,GAAM1C,IAAIwiB,EAC5C,CACA,eAAAs1B,CAAgBp1C,KAASc,GACrB,MAAMu0C,EAAsB99B,KAAKy8B,cAAcjzC,IAAIf,GACnDq1C,GAAuBA,EAAoBt1B,UAAUjf,EACzD,CACA,YAAAw0C,CAAat1C,GACT,OAAOuX,KAAKy8B,cAAch3C,IAAIgD,EAClC,CAIA,KAAA0D,CAAMF,EAAUmuC,EAAgBp6B,KAAKuc,KAAKmgB,iBACtC,GAAI18B,KAAK/T,SACL,OCnPhB,IAAsB0P,EDoPVqE,KAAKs8B,OCpPK3gC,EDoPgB1P,aCnPR+xC,YAAkC,QAApBriC,EAAQ0B,QDoPxC2C,KAAK/T,SAAWA,EAChB,MAAM8B,SAAEA,EAAU3F,OAAAA,EAAAA,cAAQ0D,GAAkBkU,KAAK5Q,QASjD,GARItD,IAAkBA,EAAcO,SAChCP,EAAcK,MAAMF,GAExB+T,KAAKuc,KAAK0gB,MAAMl3C,IAAIia,MACpBA,KAAK7S,QAAU6S,KAAK7S,OAAOiD,SAASrK,IAAIia,MACpCo6B,IAAkBhyC,GAAU2F,KAC5BiS,KAAKo6B,eAAgB,GAErBsB,EAAsB,CACtB,IAAIuC,EACJ,MAAMC,EAAsB,IAAOl+B,KAAKuc,KAAK8f,uBAAwB,EACrEX,EAAqBzvC,EAAU,KAC3B+T,KAAKuc,KAAK8f,uBAAwB,EAClC4B,GAAeA,IACfA,EE9PpB,SAAe36C,EAAU66C,GACrB,MAAMl0C,EAAQ+W,GAAKja,MACbq3C,EAAe,EAAG15C,gBACpB,MAAMw9B,EAAUx9B,EAAYuF,EACxBi4B,GAAWic,IACX72C,EAAY82C,GACZ96C,EAAS4+B,EAAUic,KAI3B,OADA92C,EAAMd,KAAK63C,GAAc,GAClB,IAAM92C,EAAY82C,EAC7B,CFmPkCxnB,CAAMsnB,EAAqB,KACrC5J,GAAsBC,yBACtBD,GAAsBC,wBAAyB,EAC/Cv0B,KAAKi9B,MAAM72C,QAAQi4C,MAG/B,CACItwC,GACAiS,KAAKuc,KAAK+hB,mBAAmBvwC,EAAUiS,OAGd,IAAzBA,KAAK5Q,QAAQ/E,SACbyB,IACCiC,GAAY3F,IACb4X,KAAKqH,iBAAiB,YAAa,EAAG5iB,QAAO2vC,mBAAkBmK,2BAA0Bn2C,OAAQo2C,MAC7F,GAAIx+B,KAAKy+B,yBAGL,OAFAz+B,KAAK3M,YAAS,OACd2M,KAAK0+B,oBAAiB,GAI1B,MAAMC,EAAmB3+B,KAAK5Q,QAAQgE,YAClCtH,EAAcq4B,wBACdya,IACEC,uBAAEA,EAAAC,0BAAwBA,GAA+BhzC,EAAc4T,WAKvEq/B,GAAiB/+B,KAAKg/B,eACvB7F,GAAiBn5B,KAAKg/B,aAAcR,IACrCD,EAMEU,GAAgC7K,GAAoBmK,EAC1D,GAAIv+B,KAAK5Q,QAAQlB,YACZ8R,KAAK+5B,YAAc/5B,KAAK+5B,WAAW9tC,UACpCgzC,GACC7K,IACI2K,IAAkB/+B,KAAKu2B,kBAAoB,CAC5Cv2B,KAAK+5B,aACL/5B,KAAKw6B,aAAex6B,KAAK+5B,WACzB/5B,KAAKw6B,aAAaA,kBAAe,GAErCx6B,KAAKk/B,mBAAmBz6C,EAAOw6C,GAC/B,MAAME,EAAmB,IAClBp9B,GAAmB48B,EAAkB,UACxC/b,OAAQic,EACRrrB,WAAYsrB,IAEZhzC,EAAc45B,oBACd1lB,KAAK5Q,QAAQlB,cACbixC,EAAiBvoB,MAAQ,EACzBuoB,EAAiBtxC,MAAO,GAE5BmS,KAAK2K,eAAew0B,EACxB,MAOS/K,GACDiK,GAAgBr+B,MAEhBA,KAAKw2B,UAAYx2B,KAAK5Q,QAAQ26B,gBAC9B/pB,KAAK5Q,QAAQ26B,iBAGrB/pB,KAAKg/B,aAAeR,GAGhC,CACA,OAAApyC,GACI4T,KAAK5Q,QAAQrB,UAAYiS,KAAKg2B,aAC9Bh2B,KAAKuc,KAAK0gB,MAAMrG,OAAO52B,MACvB,MAAMm2B,EAAQn2B,KAAKo2B,WACnBD,GAASA,EAAMS,OAAO52B,MACtBA,KAAK7S,QAAU6S,KAAK7S,OAAOiD,SAASnK,OAAO+Z,MAC3CA,KAAK/T,cAAW,EAChB3E,EAAY0Y,KAAKg9B,iBACrB,CAEA,WAAAoC,GACIp/B,KAAKo8B,uBAAwB,CACjC,CACA,aAAAiD,GACIr/B,KAAKo8B,uBAAwB,CACjC,CACA,eAAAkD,GACI,OAAOt/B,KAAKo8B,uBAAyBp8B,KAAKq8B,qBAC9C,CACA,sBAAAoC,GACI,OAAQz+B,KAAK8wB,oBACR9wB,KAAK7S,QAAU6S,KAAK7S,OAAOsxC,2BAC5B,CACR,CAEA,WAAAc,GACQv/B,KAAKs/B,oBAETt/B,KAAKm6B,YAAa,EAClBn6B,KAAKi9B,OAASj9B,KAAKi9B,MAAM72C,QAAQo5C,IACjCx/B,KAAK+7B,cACT,CACA,oBAAA0D,GACI,MAAM3zC,cAAEA,GAAkBkU,KAAK5Q,QAC/B,OAAOtD,GAAiBA,EAAc4T,WAAWrG,iBACrD,CACA,UAAA28B,CAAW0J,GAAwB,GAE/B,GADA1/B,KAAKuc,KAAKmgB,iBAAkB,EACxB18B,KAAKuc,KAAK+iB,kBAEV,YADAt/B,KAAK5Q,QAAQ26B,gBAAkB/pB,KAAK5Q,QAAQ26B,kBAoBhD,GALIjnC,OAAO24C,iCACNz7B,KAAKw7B,2BACNF,GAAuCt7B,OAE1CA,KAAKuc,KAAK4d,YAAcn6B,KAAKuc,KAAKgjB,cAC/Bv/B,KAAKo6B,cACL,OACJp6B,KAAKo6B,eAAgB,EACrB,IAAA,IAASjzC,EAAI,EAAGA,EAAI6Y,KAAK49B,KAAKx2C,OAAQD,IAAK,CACvC,MAAMqiC,EAAOxpB,KAAK49B,KAAKz2C,GACvBqiC,EAAKgT,sBAAuB,EAC5BhT,EAAKoK,aAAa,YACdpK,EAAKp6B,QAAQlB,YACbs7B,EAAKwM,YAAW,EAExB,CACA,MAAMjoC,SAAEA,EAAU3F,OAAAA,GAAW4X,KAAK5Q,QAClC,QAAiB,IAAbrB,IAA2B3F,EAC3B,OACJ,MAAMiR,EAAoB2G,KAAKy/B,uBAC/Bz/B,KAAK2/B,2BAA6BtmC,EAC5BA,EAAkB2G,KAAK7R,aAAc,SACrC,EACN6R,KAAK4/B,iBACLF,GAAyB1/B,KAAK69B,gBAAgB,aAClD,CACA,MAAAp3C,GACIuZ,KAAK28B,iBAAkB,EAKvB,GAJyB38B,KAAKs/B,kBAQ1B,OAHAt/B,KAAKq/B,gBACLr/B,KAAK+8B,yBACL/8B,KAAKi9B,MAAM72C,QAAQy5C,IAGlB7/B,KAAKm6B,YACNn6B,KAAKi9B,MAAM72C,QAAQ05C,IAEvB9/B,KAAKm6B,YAAa,EAIlBn6B,KAAKi9B,MAAM72C,QAAQ25C,IAKnB//B,KAAKi9B,MAAM72C,QAAQytC,IAKnB7zB,KAAKi9B,MAAM72C,QAAQ45C,IACnBhgC,KAAK+8B,oBAML,MAAMh2C,EAAMia,GAAKja,MACjBZ,EAAU1B,MAAQ0P,GAAM,EAAG,IAAO,GAAIpN,EAAMZ,EAAUzB,WACtDyB,EAAUzB,UAAYqC,EACtBZ,EAAUxB,cAAe,EACzB4C,EAAWd,OAAOP,QAAQC,GAC1BoB,EAAWb,UAAUR,QAAQC,GAC7BoB,EAAWZ,OAAOT,QAAQC,GAC1BA,EAAUxB,cAAe,CAC7B,CACA,SAAAixC,GACS51B,KAAK28B,kBACN38B,KAAK28B,iBAAkB,EACvBhwC,EAAUpG,KAAKyZ,KAAK48B,gBAE5B,CACA,iBAAAG,GACI/8B,KAAKi9B,MAAM72C,QAAQ65C,IACnBjgC,KAAK29B,YAAYv3C,QAAQ85C,GAC7B,CACA,wBAAAC,GACSngC,KAAK68B,4BACN78B,KAAK68B,2BAA4B,EACjCx1C,EAAMX,UAAUsZ,KAAKg9B,kBAAkB,GAAO,GAEtD,CACA,yBAAArG,GAMItvC,EAAMT,WAAW,KACToZ,KAAKo6B,cACLp6B,KAAKuc,KAAKqZ,YAGV51B,KAAKuc,KAAKugB,qBAGtB,CAIA,cAAA8C,IACQ5/B,KAAKi6B,UAAaj6B,KAAK/T,WAE3B+T,KAAKi6B,SAAWj6B,KAAK+xB,UACzB,CACA,YAAA8B,GACI,IAAK7zB,KAAK/T,SACN,OAGJ,GADA+T,KAAK4zB,iBACC5zB,KAAK5Q,QAAQd,qBAAuB0R,KAAKw2B,UAC1Cx2B,KAAKo6B,eACN,OASJ,GAAIp6B,KAAK+5B,aAAe/5B,KAAK+5B,WAAW9tC,SACpC,IAAA,IAAS9E,EAAI,EAAGA,EAAI6Y,KAAK49B,KAAKx2C,OAAQD,IAAK,CAC1B6Y,KAAK49B,KAAKz2C,GAClBysC,cACT,CAEJ,MAAMwM,EAAapgC,KAAK5X,OACxB4X,KAAK5X,OAAS4X,KAAK+xB,SAAQ,GAC3B/xB,KAAKqgC,gBtBngBC,CACdpoC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsBqgB7B+Y,KAAKo6B,eAAgB,EACrBp6B,KAAK+0B,qBAAkB,EACvB/0B,KAAK69B,gBAAgB,UAAW79B,KAAK5X,OAAO6oC,WAC5C,MAAMnlC,cAAEA,GAAkBkU,KAAK5Q,QAC/BtD,GACIA,EAAc0c,OAAO,gBAAiBxI,KAAK5X,OAAO6oC,UAAWmP,EAAaA,EAAWnP,eAAY,EACzG,CACA,YAAA2C,CAAa0M,EAAQ,WACjB,IAAI5tB,EAAmBnoB,QAAQyV,KAAK5Q,QAAQnB,cAAgB+R,KAAK/T,UAMjE,GALI+T,KAAK2yB,QACL3yB,KAAK2yB,OAAOoJ,cAAgB/7B,KAAKuc,KAAKwf,aACtC/7B,KAAK2yB,OAAO2N,QAAUA,IACtB5tB,GAAmB,GAEnBA,EAAkB,CAClB,MAAM6tB,EAAS1E,EAAkB77B,KAAK/T,UACtC+T,KAAK2yB,OAAS,CACVoJ,YAAa/7B,KAAKuc,KAAKwf,YACvBuE,QACAC,SACAtmC,OAAQ2hC,EAAc57B,KAAK/T,UAC3Bu0C,QAASxgC,KAAK2yB,OAAS3yB,KAAK2yB,OAAO4N,OAASA,EAEpD,CACJ,CACA,cAAAzE,GACI,IAAKA,EACD,OACJ,MAAM2E,EAAmBzgC,KAAKo6B,eAC1Bp6B,KAAKw8B,sBACLx8B,KAAK5Q,QAAQd,oBACXoyC,EAAgB1gC,KAAK+0B,kBAAoBiE,GAAYh5B,KAAK+0B,iBAC1D17B,EAAoB2G,KAAKy/B,uBACzBkB,EAAyBtnC,EACzBA,EAAkB2G,KAAK7R,aAAc,SACrC,EACAyyC,EAA8BD,IAA2B3gC,KAAK2/B,2BAChEc,IACCC,GACGjnC,GAAauG,KAAK7R,eAClByyC,KACJ9E,EAAe97B,KAAK/T,SAAU00C,GAC9B3gC,KAAKw8B,sBAAuB,EAC5Bx8B,KAAKu5B,iBAEb,CACA,OAAAxH,CAAQ8O,GAAkB,GACtB,MAAMC,EAAU9gC,KAAK4yB,iBACrB,IAAI3B,EAAYjxB,KAAK+gC,oBAAoBD,GAi+BrD,IAAkB/R,EAv9BN,OAJI8R,IACA5P,EAAYjxB,KAAK6gC,gBAAgB5P,IA29B7C+P,IADcjS,EAx9BGkC,GAy9BHh5B,GACd+oC,GAAUjS,EAAI72B,GAz9BC,CACH6jC,YAAa/7B,KAAKuc,KAAKwf,YACvBkF,YAAaH,EACb7P,YACA9iC,aAAc,CAAA,EACdqP,OAAQwC,KAAKpP,GAErB,CACA,cAAAgiC,GACI,IAAI3pC,EACJ,MAAM6C,cAAEA,GAAkBkU,KAAK5Q,QAC/B,IAAKtD,EACD,MtB1kBE,CACdmM,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB4kB7B,MAAM8nC,EAAMjjC,EAAcgqB,qBAE1B,MADgD,QAAtB7sB,EAAK+W,KAAK2yB,cAA2B,IAAP1pC,OAAgB,EAASA,EAAGu3C,UAAYxgC,KAAK49B,KAAKp1C,KAAK04C,KACzF,CAElB,MAAMvO,OAAEA,GAAW3yB,KAAKuc,KACpBoW,IACAzD,GAAcH,EAAI92B,EAAG06B,EAAO14B,OAAOhC,GACnCi3B,GAAcH,EAAI72B,EAAGy6B,EAAO14B,OAAO/B,GAE3C,CACA,OAAO62B,CACX,CACA,mBAAAgS,CAAoBhS,GAChB,IAAI9lC,EACJ,MAAMk4C,EtBzlBA,CACdlpC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB4lB7B,GADA+wC,GAAYmJ,EAAkBpS,GACH,QAAtB9lC,EAAK+W,KAAK2yB,cAA2B,IAAP1pC,OAAgB,EAASA,EAAGu3C,QAC3D,OAAOW,EAMX,IAAA,IAASh6C,EAAI,EAAGA,EAAI6Y,KAAK49B,KAAKx2C,OAAQD,IAAK,CACvC,MAAMqiC,EAAOxpB,KAAK49B,KAAKz2C,IACjBwrC,OAAEA,EAAAvjC,QAAQA,GAAYo6B,EACxBA,IAASxpB,KAAKuc,MAAQoW,GAAUvjC,EAAQnB,eAKpC0kC,EAAO6N,SACPxI,GAAYmJ,EAAkBpS,GAElCG,GAAciS,EAAiBlpC,EAAG06B,EAAO14B,OAAOhC,GAChDi3B,GAAciS,EAAiBjpC,EAAGy6B,EAAO14B,OAAO/B,GAExD,CACA,OAAOipC,CACX,CACA,cAAAC,CAAerS,EAAKsS,GAAgB,GAChC,MAAMC,EtBpnBA,CACdrpC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsBsnB7B+wC,GAAYsJ,EAAgBvS,GAC5B,IAAA,IAAS5nC,EAAI,EAAGA,EAAI6Y,KAAK49B,KAAKx2C,OAAQD,IAAK,CACvC,MAAMqiC,EAAOxpB,KAAK49B,KAAKz2C,IAClBk6C,GACD7X,EAAKp6B,QAAQnB,cACbu7B,EAAKmJ,QACLnJ,IAASA,EAAKjN,MACdgT,GAAa+R,EAAgB,CACzBrpC,GAAIuxB,EAAKmJ,OAAO14B,OAAOhC,EACvBC,GAAIsxB,EAAKmJ,OAAO14B,OAAO/B,IAG1BuB,GAAa+vB,EAAKr7B,eAEvBohC,GAAa+R,EAAgB9X,EAAKr7B,aACtC,CAIA,OAHIsL,GAAauG,KAAK7R,eAClBohC,GAAa+R,EAAgBthC,KAAK7R,cAE/BmzC,CACX,CACA,eAAAT,CAAgB9R,GACZ,MAAMwS,EtB3oBA,CACdtpC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB6oB7B+wC,GAAYuJ,EAAqBxS,GACjC,IAAA,IAAS5nC,EAAI,EAAGA,EAAI6Y,KAAK49B,KAAKx2C,OAAQD,IAAK,CACvC,MAAMqiC,EAAOxpB,KAAK49B,KAAKz2C,GACvB,IAAKqiC,EAAKv9B,SACN,SACJ,IAAKwN,GAAa+vB,EAAKr7B,cACnB,SACJogC,GAAS/E,EAAKr7B,eAAiBq7B,EAAKoW,iBACpC,MAAM9G,EAAY3K,KAElB6J,GAAYc,EADItP,EAAKoJ,kBAErBiG,GAAoB0I,EAAqB/X,EAAKr7B,aAAcq7B,EAAKyQ,SAAWzQ,EAAKyQ,SAAShJ,eAAY,EAAW6H,EACrH,CAIA,OAHIr/B,GAAauG,KAAK7R,eAClB0qC,GAAoB0I,EAAqBvhC,KAAK7R,cAE3CozC,CACX,CACA,cAAAC,CAAe/8C,GACXub,KAAKyhC,YAAch9C,EACnBub,KAAKuc,KAAK4jB,2BACVngC,KAAKi8B,mBAAoB,CAC7B,CACA,UAAA5tC,CAAWe,GACP4Q,KAAK5Q,QAAU,IACR4Q,KAAK5Q,WACLA,EACHirC,eAAiC,IAAtBjrC,EAAQirC,WAA0BjrC,EAAQirC,UAE7D,CACA,iBAAAwF,GACI7/B,KAAK2yB,YAAS,EACd3yB,KAAK5X,YAAS,EACd4X,KAAKi6B,cAAW,EAChBj6B,KAAK2/B,gCAA6B,EAClC3/B,KAAKyhC,iBAAc,EACnBzhC,KAAK3M,YAAS,EACd2M,KAAKo6B,eAAgB,CACzB,CACA,kCAAAsH,GACS1hC,KAAK2hC,gBAQN3hC,KAAK2hC,eAAepE,2BACpBp3C,EAAUzB,WACVsb,KAAK2hC,eAAexE,oBAAmB,EAE/C,CACA,kBAAAA,CAAmByE,GAAqB,GACpC,IAAI34C,EAMJ,MAAMwwC,EAAOz5B,KAAK6hC,UAClB7hC,KAAKi8B,oBAAsBj8B,KAAKi8B,kBAAoBxC,EAAKwC,mBACzDj8B,KAAKm8B,mBAAqBn8B,KAAKm8B,iBAAmB1C,EAAK0C,kBACvDn8B,KAAKk8B,0BAA4Bl8B,KAAKk8B,wBAA0BzC,EAAKyC,yBACrE,MAAM4F,EAAWv3C,QAAQyV,KAAKw6B,eAAiBx6B,OAASy5B,EAWxD,KANkBmI,GACbE,GAAY9hC,KAAKk8B,yBAClBl8B,KAAKi8B,oBACmB,QAAtBhzC,EAAK+W,KAAK7S,cAA2B,IAAPlE,OAAgB,EAASA,EAAGgzC,oBAC5Dj8B,KAAK+hC,gCACL/hC,KAAKuc,KAAK8f,uBAEV,OACJ,MAAQj0C,OAAAA,EAAAA,SAAQ2F,GAAaiS,KAAK5Q,QAIlC,GAAK4Q,KAAK5X,SAAYA,GAAU2F,GAAhC,CAQA,GANAiS,KAAKu9B,yBAA2Bp3C,EAAUzB,WAMrCsb,KAAKyhC,cAAgBzhC,KAAK0+B,eAAgB,CAC3C,MAAMiD,EAAiB3hC,KAAKgiC,6BACxBL,GACAA,EAAev5C,QACY,IAA3B4X,KAAK09B,mBACL19B,KAAK2hC,eAAiBA,EACtB3hC,KAAK0hC,qCACL1hC,KAAK0+B,etB5uBP,CACdzmC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB8uBrB+Y,KAAKiiC,qBtB7uBP,CACdhqC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB+uBrBsmC,GAAqBvtB,KAAKiiC,qBAAsBjiC,KAAK5X,OAAO6oC,UAAW0Q,EAAev5C,OAAO6oC,WAC7F+G,GAAYh4B,KAAK0+B,eAAgB1+B,KAAKiiC,uBAGtCjiC,KAAK2hC,eAAiB3hC,KAAK0+B,oBAAiB,CAEpD,CAKA,GAAK1+B,KAAK0+B,gBAAmB1+B,KAAKyhC,YAAlC,CxB9tBZ,IAAyBpuC,EAAQg6B,EAAUlgC,EwBuwB/B,GApCK6S,KAAK3M,SACN2M,KAAK3M,OtB/vBH,CACd4E,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsBiwBzB+Y,KAAKkiC,qBtBhwBH,CACdjqC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,KsBswBzB+Y,KAAK0+B,gBACL1+B,KAAKiiC,sBACLjiC,KAAK2hC,gBACL3hC,KAAK2hC,eAAetuC,QACpB2M,KAAK0hC,qCxB9uBIruC,EwB+uBO2M,KAAK3M,OxB/uBJg6B,EwB+uBYrtB,KAAK0+B,exB/uBPvxC,EwB+uBuB6S,KAAK2hC,eAAetuC,OxB9uBlF+5B,GAAiB/5B,EAAO4E,EAAGo1B,EAASp1B,EAAG9K,EAAO8K,GAC9Cm1B,GAAiB/5B,EAAO6E,EAAGm1B,EAASn1B,EAAG/K,EAAO+K,IwBkvB7B8H,KAAKyhC,aACNl3C,QAAQyV,KAAKw6B,cAEbx6B,KAAK3M,OAAS2M,KAAKohC,eAAephC,KAAK5X,OAAO6oC,WAG9C+G,GAAYh4B,KAAK3M,OAAQ2M,KAAK5X,OAAO6oC,WAEzCnC,GAAc9uB,KAAK3M,OAAQ2M,KAAKyhC,cAMhCzJ,GAAYh4B,KAAK3M,OAAQ2M,KAAK5X,OAAO6oC,WAKrCjxB,KAAK+hC,+BAAgC,CACrC/hC,KAAK+hC,gCAAiC,EACtC,MAAMJ,EAAiB3hC,KAAKgiC,6BACxBL,GACAp3C,QAAQo3C,EAAenH,gBACnBjwC,QAAQyV,KAAKw6B,gBAChBmH,EAAevyC,QAAQnB,cACxB0zC,EAAetuC,QACY,IAA3B2M,KAAK09B,mBACL19B,KAAK2hC,eAAiBA,EACtB3hC,KAAK0hC,qCACL1hC,KAAK0+B,etB7yBP,CACdzmC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB+yBrB+Y,KAAKiiC,qBtB9yBP,CACdhqC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsBgzBrBsmC,GAAqBvtB,KAAKiiC,qBAAsBjiC,KAAK3M,OAAQsuC,EAAetuC,QAC5E2kC,GAAYh4B,KAAK0+B,eAAgB1+B,KAAKiiC,uBAGtCjiC,KAAK2hC,eAAiB3hC,KAAK0+B,oBAAiB,CAEpD,CAII5D,IACAJ,GAAQE,sBAhER,CA5BA,CA8FR,CACA,0BAAAoH,GACI,GAAKhiC,KAAK7S,SACNohC,GAASvuB,KAAK7S,OAAOgB,gBACrBqgC,GAAexuB,KAAK7S,OAAOgB,cAG/B,OAAI6R,KAAK7S,OAAOg1C,eACLniC,KAAK7S,OAGL6S,KAAK7S,OAAO60C,4BAE3B,CACA,YAAAG,GACI,OAAO53C,SAASyV,KAAK0+B,gBACjB1+B,KAAKyhC,aACLzhC,KAAK5Q,QAAQlB,aACb8R,KAAK5X,OACb,CACA,cAAAg1C,GACI,IAAIn0C,EACJ,MAAMwwC,EAAOz5B,KAAK6hC,UACZC,EAAWv3C,QAAQyV,KAAKw6B,eAAiBx6B,OAASy5B,EACxD,IAAI2I,GAAU,EAuBd,IAlBIpiC,KAAKi8B,oBAA6C,QAAtBhzC,EAAK+W,KAAK7S,cAA2B,IAAPlE,OAAgB,EAASA,EAAGgzC,sBACtFmG,GAAU,GAMVN,IACC9hC,KAAKk8B,yBAA2Bl8B,KAAKm8B,oBACtCiG,GAAU,GAMVpiC,KAAKu9B,2BAA6Bp3C,EAAUzB,YAC5C09C,GAAU,GAEVA,EACA,OACJ,MAAQh6C,OAAAA,EAAAA,SAAQ2F,GAAaiS,KAAK5Q,QAWlC,GANA4Q,KAAKg8B,gBAAkBzxC,QAASyV,KAAK7S,QAAU6S,KAAK7S,OAAO6uC,iBACvDh8B,KAAKu2B,kBACLv2B,KAAKqiC,kBACJriC,KAAKg8B,kBACNh8B,KAAKyhC,YAAczhC,KAAK0+B,oBAAiB,IAExC1+B,KAAK5X,SAAYA,IAAU2F,EAC5B,OAKJiqC,GAAYh4B,KAAKqgC,gBAAiBrgC,KAAK5X,OAAO6oC,WAI9C,MAAMqR,EAAiBtiC,KAAK80B,UAAU78B,EAChCsqC,EAAiBviC,KAAK80B,UAAU58B,GlBp2BlD,SAAyB62B,EAAK+F,EAAW0N,EAAUC,GAAqB,GACpE,MAAMC,EAAaF,EAASp7C,OAC5B,IAAKs7C,EACD,OAGJ,IAAIlZ,EACA/kC,EAFJqwC,EAAU78B,EAAI68B,EAAU58B,EAAI,EAG5B,IAAA,IAAS/Q,EAAI,EAAGA,EAAIu7C,EAAYv7C,IAAK,CACjCqiC,EAAOgZ,EAASr7C,GAChB1C,EAAQ+kC,EAAKuL,gBAKb,MAAMjpC,cAAEA,GAAkB09B,EAAKp6B,QAC3BtD,GACAA,EAAcvD,MAAM+Q,OACkB,aAAtCxN,EAAcvD,MAAM+Q,MAAMqpC,UAG1BF,GACAjZ,EAAKp6B,QAAQnB,cACbu7B,EAAKmJ,QACLnJ,IAASA,EAAKjN,MACdgT,GAAaR,EAAK,CACd92B,GAAIuxB,EAAKmJ,OAAO14B,OAAOhC,EACvBC,GAAIsxB,EAAKmJ,OAAO14B,OAAO/B,IAG3BzT,IAEAqwC,EAAU78B,GAAKxT,EAAMwT,EAAEzD,MACvBsgC,EAAU58B,GAAKzT,EAAMyT,EAAE1D,MAEvBs6B,GAAcC,EAAKtqC,IAEnBg+C,GAAsBhpC,GAAa+vB,EAAKr7B,eACxCohC,GAAaR,EAAKvF,EAAKr7B,cAE/B,CAKI2mC,EAAU78B,EAAIg3B,IACd6F,EAAU78B,EAAI+2B,KACd8F,EAAU78B,EAAI,GAEd68B,EAAU58B,EAAI+2B,IACd6F,EAAU58B,EAAI82B,KACd8F,EAAU58B,EAAI,EAEtB,CkBozBY0qC,CAAgB5iC,KAAKqgC,gBAAiBrgC,KAAK80B,UAAW90B,KAAK49B,KAAMkE,IAK7DrI,EAAKrxC,QACJqxC,EAAKpmC,QACgB,IAArB2M,KAAK80B,UAAU78B,GAAgC,IAArB+H,KAAK80B,UAAU58B,IAC1CuhC,EAAKpmC,OAASomC,EAAKrxC,OAAO6oC,UAC1BwI,EAAKyI,qBtBj5BH,CACdjqC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,KsBo5B7B,MAAMoM,OAAEA,GAAWomC,EACdpmC,GAYA2M,KAAK+0B,iBAAoB/0B,KAAK6iC,qBAI/B3K,GAAkBl4B,KAAK6iC,oBAAoB5qC,EAAG+H,KAAK+0B,gBAAgB98B,GACnEigC,GAAkBl4B,KAAK6iC,oBAAoB3qC,EAAG8H,KAAK+0B,gBAAgB78B,IAJnE8H,KAAK8iC,yBAeT3V,GAAantB,KAAK+0B,gBAAiB/0B,KAAKqgC,gBAAiBhtC,EAAQ2M,KAAK7R,cAClE6R,KAAK80B,UAAU78B,IAAMqqC,GACrBtiC,KAAK80B,UAAU58B,IAAMqqC,GACpBlJ,GAAgBr5B,KAAK+0B,gBAAgB98B,EAAG+H,KAAK6iC,oBAAoB5qC,IACjEohC,GAAgBr5B,KAAK+0B,gBAAgB78B,EAAG8H,KAAK6iC,oBAAoB3qC,KAClE8H,KAAKw9B,cAAe,EACpBx9B,KAAKu5B,iBACLv5B,KAAK69B,gBAAgB,mBAAoBxqC,IAKzCynC,IACAJ,GAAQG,0BAnCJ76B,KAAK6iC,sBACL7iC,KAAK8iC,yBACL9iC,KAAKu5B,iBAmCjB,CACA,IAAAe,GACIt6B,KAAKy9B,WAAY,CAErB,CACA,IAAA3D,GACI95B,KAAKy9B,WAAY,CAErB,CACA,cAAAlE,CAAewJ,GAAY,GACvB,IAAI95C,EAEJ,GADsC,QAArCA,EAAK+W,KAAK5Q,QAAQtD,qBAAkC,IAAP7C,GAAyBA,EAAGswC,iBACtEwJ,EAAW,CACX,MAAM5M,EAAQn2B,KAAKo2B,WACnBD,GAASA,EAAMoD,gBACnB,CACIv5B,KAAKw6B,eAAiBx6B,KAAKw6B,aAAavuC,WACxC+T,KAAKw6B,kBAAe,EAE5B,CACA,sBAAAsI,GACI9iC,KAAK6iC,oBtBz9BG,CAChB5qC,EAPoB,CACpBi1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GAIb/0B,EARoB,CACpBg1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,IsB49BLjtB,KAAK+0B,gBtB19BG,CAChB98B,EAPoB,CACpBi1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GAIb/0B,EARoB,CACpBg1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,IsB69BLjtB,KAAKgjC,6BtB39BG,CAChB/qC,EAPoB,CACpBi1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GAIb/0B,EARoB,CACpBg1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GsB89BT,CACA,kBAAAiS,CAAmBz6C,EAAOw6C,GAA+B,GACrD,MAAMhF,EAAWj6B,KAAKi6B,SAChBgJ,EAAuBhJ,EACvBA,EAAS9rC,aACT,CAAA,EACA+0C,EAAc,IAAKljC,KAAK7R,cACxBszC,EtBn+BE,CAChBxpC,EAPoB,CACpBi1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GAIb/0B,EARoB,CACpBg1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,IsBs+BAjtB,KAAK2hC,gBACL3hC,KAAK2hC,eAAevyC,QAAQlB,aAC7B8R,KAAK0+B,eAAiB1+B,KAAKiiC,0BAAuB,GAEtDjiC,KAAK+hC,gCAAkC9C,EACvC,MAAMkE,EtBp+BA,CACdlrC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsBw+BvBm8C,GAFiBnJ,EAAWA,EAASz8B,YAAS,MAC/BwC,KAAK5X,OAAS4X,KAAK5X,OAAOoV,YAAS,GAElD24B,EAAQn2B,KAAKo2B,WACbiN,GAAgBlN,GAASA,EAAME,QAAQjvC,QAAU,EACjDk8C,EAAyB/4C,QAAQ64C,IAClCC,IAC0B,IAA3BrjC,KAAK5Q,QAAQirC,YACZr6B,KAAK49B,KAAKp1C,KAAK+6C,KAEpB,IAAIC,EADJxjC,KAAK09B,kBAAoB,EAEzB19B,KAAKyjC,eAAkB5oC,IACnB,MAAMrX,EAAWqX,EAAS,IFj/B1C,IAAmB2I,EAAGC,EE0/CNqM,EAAQrsB,EAAMC,EAAIhB,EAxgBlBghD,GAAajC,EAAYxpC,EAAGxT,EAAMwT,EAAGzU,GACrCkgD,GAAajC,EAAYvpC,EAAGzT,EAAMyT,EAAG1U,GACrCwc,KAAKwhC,eAAeC,GAChBzhC,KAAK0+B,gBACL1+B,KAAKiiC,sBACLjiC,KAAK5X,QACL4X,KAAK2hC,gBACL3hC,KAAK2hC,eAAev5C,SACpBmlC,GAAqB4V,EAAgBnjC,KAAK5X,OAAO6oC,UAAWjxB,KAAK2hC,eAAev5C,OAAO6oC,WAggB3FnhB,EA/fW9P,KAAK0+B,eA+fRj7C,EA/fwBuc,KAAKiiC,qBA+fvBv+C,EA/f6Cy/C,EA+fzCzgD,EA/fyDc,EAggBvFmgD,GAAQ7zB,EAAO7X,EAAGxU,EAAKwU,EAAGvU,EAAGuU,EAAGvV,GAChCihD,GAAQ7zB,EAAO5X,EAAGzU,EAAKyU,EAAGxU,EAAGwU,EAAGxV,GA5fZ8gD,IFhgCLhgC,EEigCexD,KAAK0+B,eFjgCjBj7B,EEigCiC+/B,EFhgC5CvK,GAAWz1B,EAAEvL,EAAGwL,EAAExL,IAAMghC,GAAWz1B,EAAEtL,EAAGuL,EAAEvL,MEigC7B8H,KAAKi8B,mBAAoB,GAExBuH,IACDA,EtBrgCN,CACdvrC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,KsBugCrB+wC,GAAYwL,EAAoBxjC,KAAK0+B,iBAErC0E,IACApjC,KAAKk6B,gBAAkBgJ,EL3gC3C,SAAmB7vC,EAAQuwC,EAAQnK,EAAMj2C,EAAU8/C,EAAwBD,GACnEC,GACAjwC,EAAOiF,QAAU4f,GAAU,OAEV,IAAjBuhB,EAAKnhC,QAAwBmhC,EAAKnhC,QAAU,EAAGq/B,GAAgBn0C,IAC/D6P,EAAOwwC,YAAc3rB,QAA6B,IAAnB0rB,EAAOtrC,QAAwBsrC,EAAOtrC,QAAU,EAAG,EAAGu/B,GAAiBr0C,KAEjG6/C,IACLhwC,EAAOiF,QAAU4f,QAA6B,IAAnB0rB,EAAOtrC,QAAwBsrC,EAAOtrC,QAAU,OAAoB,IAAjBmhC,EAAKnhC,QAAwBmhC,EAAKnhC,QAAU,EAAG9U,IAKjI,IAAA,IAAS2D,EAAI,EAAGA,EAAImwC,GAAYnwC,IAAK,CACjC,MAAM28C,EAAc,SAASzM,GAAQlwC,WACrC,IAAI48C,EAAetM,GAAUmM,EAAQE,GACjCE,EAAavM,GAAUgC,EAAMqK,QACZ,IAAjBC,QAA6C,IAAfC,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAxM,GAAKuM,KAAkBvM,GAAKwM,IAE5B3wC,EAAOywC,GAAe98C,KAAKC,IAAIixB,GAAUqf,GAASwM,GAAexM,GAASyM,GAAaxgD,GAAW,IAC9FqR,GAAQ5D,KAAK+yC,IAAenvC,GAAQ5D,KAAK8yC,MACzC1wC,EAAOywC,IAAgB,MAI3BzwC,EAAOywC,GAAeE,EAE9B,EAIIJ,EAAOzsC,QAAUsiC,EAAKtiC,UACtB9D,EAAO8D,OAAS+gB,GAAU0rB,EAAOzsC,QAAU,EAAGsiC,EAAKtiC,QAAU,EAAG3T,GAExE,CKo+BoBygD,CAAUf,EAAaD,EAAsBjjC,KAAK7R,aAAc3K,EAAU8/C,EAAwBD,IAEtGrjC,KAAKuc,KAAK4jB,2BACVngC,KAAKu5B,iBACLv5B,KAAK09B,kBAAoBl6C,GAE7Bwc,KAAKyjC,eAAezjC,KAAK5Q,QAAQlB,WAAa,IAAO,EACzD,CACA,cAAAyc,CAAevb,GACX4Q,KAAK69B,gBAAgB,kBACrB79B,KAAKu2B,kBAAoBv2B,KAAKu2B,iBAAiBt2B,OAC3CD,KAAKw6B,cAAgBx6B,KAAKw6B,aAAajE,kBACvCv2B,KAAKw6B,aAAajE,iBAAiBt2B,OAEnCD,KAAKqiC,mBACL/6C,EAAY0Y,KAAKqiC,kBACjBriC,KAAKqiC,sBAAmB,GAO5BriC,KAAKqiC,iBAAmBh7C,EAAMZ,OAAO,KACjC6tC,GAAsBC,wBAAyB,EAC/Cv0B,KAAKu2B,iBG1iCrB,SAA4B5yC,EAAO2yB,EAAWlnB,GAC1C,MAAM80C,EAAgBvyC,GAAchO,GAASA,EAAQwnB,GAAYxnB,GAEjE,OADAugD,EAAcj6C,MAAMo6B,GAAmB,GAAI6f,EAAe5tB,EAAWlnB,IAC9D80C,EAAct8C,SACzB,CHsiCwCu8C,CAAmB,EArgCnC,IAqgCuD,IACxD/0C,EACHiD,SAAWwI,IACPmF,KAAKyjC,eAAe5oC,GACpBzL,EAAQiD,UAAYjD,EAAQiD,SAASwI,IAEzC2Y,WAAY,KACRpkB,EAAQokB,YAAcpkB,EAAQokB,aAC9BxT,KAAKokC,uBAGTpkC,KAAKw6B,eACLx6B,KAAKw6B,aAAajE,iBAAmBv2B,KAAKu2B,kBAE9Cv2B,KAAKqiC,sBAAmB,GAEhC,CACA,iBAAA+B,GACQpkC,KAAKw6B,eACLx6B,KAAKw6B,aAAajE,sBAAmB,EACrCv2B,KAAKw6B,aAAaR,qBAAkB,GAExC,MAAM7D,EAAQn2B,KAAKo2B,WACnBD,GAASA,EAAMoE,wBACfv6B,KAAKw6B,aACDx6B,KAAKu2B,iBACDv2B,KAAKk6B,qBACD,EACZl6B,KAAK69B,gBAAgB,oBACzB,CACA,eAAAQ,GACQr+B,KAAKu2B,mBACLv2B,KAAKyjC,gBAAkBzjC,KAAKyjC,eAriCpB,KAsiCRzjC,KAAKu2B,iBAAiBt2B,QAE1BD,KAAKokC,mBACT,CACA,uBAAAC,GACI,MAAM5K,EAAOz5B,KAAK6hC,UAClB,IAAIK,qBAAEA,EAAA7uC,OAAsBA,EAAQjL,OAAAA,EAAAA,aAAQ+F,GAAiBsrC,EAC7D,GAAKyI,GAAyB7uC,GAAWjL,EAAzC,CAOA,GAAI4X,OAASy5B,GACTz5B,KAAK5X,QACLA,GACAk8C,GAA0BtkC,KAAK5Q,QAAQb,cAAeyR,KAAK5X,OAAO6oC,UAAW7oC,EAAO6oC,WAAY,CAChG59B,EAAS2M,KAAK3M,QtBtlCZ,CACd4E,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsBwlCzB,MAAMs9C,EAAUzX,GAAW9sB,KAAK5X,OAAO6oC,UAAUh5B,GACjD5E,EAAO4E,EAAE/Q,IAAMuyC,EAAKpmC,OAAO4E,EAAE/Q,IAC7BmM,EAAO4E,EAAEhR,IAAMoM,EAAO4E,EAAE/Q,IAAMq9C,EAC9B,MAAMC,EAAU1X,GAAW9sB,KAAK5X,OAAO6oC,UAAU/4B,GACjD7E,EAAO6E,EAAEhR,IAAMuyC,EAAKpmC,OAAO6E,EAAEhR,IAC7BmM,EAAO6E,EAAEjR,IAAMoM,EAAO6E,EAAEhR,IAAMs9C,CAClC,CACAxM,GAAYkK,EAAsB7uC,GAMlCk8B,GAAa2S,EAAsB/zC,GAOnCg/B,GAAantB,KAAKgjC,6BAA8BhjC,KAAKqgC,gBAAiB6B,EAAsB/zC,EA/BxF,CAgCR,CACA,kBAAAmwC,CAAmBvwC,EAAUy7B,GACpBxpB,KAAK29B,YAAYl4C,IAAIsI,IACtBiS,KAAK29B,YAAYj0C,IAAIqE,EAAU,IAAIurC,IAEzBt5B,KAAK29B,YAAYn0C,IAAIuE,GAC7BhI,IAAIyjC,GACV,MAAMv3B,EAASu3B,EAAKp6B,QAAQtB,uBAC5B07B,EAAKyM,QAAQ,CACT7iC,WAAYnB,EAASA,EAAOmB,gBAAa,EACzCymC,sBAAuB5nC,GAAUA,EAAOwyC,4BAClCxyC,EAAOwyC,4BAA4Bjb,QACnC,GAEd,CACA,MAAAgN,GACI,MAAML,EAAQn2B,KAAKo2B,WACnB,OAAOD,GAAQA,EAAMsD,OAASz5B,IAClC,CACA,OAAA6hC,GACI,IAAI54C,EACJ,MAAM8E,SAAEA,GAAaiS,KAAK5Q,QAC1B,OAAOrB,IAAuC,QAA1B9E,EAAK+W,KAAKo2B,kBAA+B,IAAPntC,OAAgB,EAASA,EAAGwwC,OAAgBz5B,IACtG,CACA,WAAA0kC,GACI,IAAIz7C,EACJ,MAAM8E,SAAEA,GAAaiS,KAAK5Q,QAC1B,OAAOrB,EAAsC,QAA1B9E,EAAK+W,KAAKo2B,kBAA+B,IAAPntC,OAAgB,EAASA,EAAGuwC,cAAW,CAChG,CACA,QAAApD,GACI,MAAMroC,SAAEA,GAAaiS,KAAK5Q,QAC1B,GAAIrB,EACA,OAAOiS,KAAKuc,KAAKohB,YAAYn0C,IAAIuE,EACzC,CACA,OAAAkoC,EAAQsG,WAAEA,EAAAnpC,WAAYA,wBAAYymC,GAA2B,CAAA,GACzD,MAAM1D,EAAQn2B,KAAKo2B,WACfD,GACAA,EAAMF,QAAQj2B,KAAM65B,GACpB0C,IACAv8B,KAAK+0B,qBAAkB,EACvB/0B,KAAKu8B,YAAa,GAElBnpC,GACA4M,KAAK3R,WAAW,CAAE+E,cAC1B,CACA,QAAA8iC,GACI,MAAMC,EAAQn2B,KAAKo2B,WACnB,QAAID,GACOA,EAAMD,SAASl2B,KAK9B,CACA,oBAAAw/B,GACI,MAAM1zC,cAAEA,GAAkBkU,KAAK5Q,QAC/B,IAAKtD,EACD,OAEJ,IAAI64C,GAAyB,EAK7B,MAAMx2C,aAAEA,GAAiBrC,EAWzB,IAVIqC,EAAagK,GACbhK,EAAagJ,QACbhJ,EAAaiJ,SACbjJ,EAAakJ,SACblJ,EAAamJ,SACbnJ,EAAawJ,OACbxJ,EAAayJ,SACb+sC,GAAyB,IAGxBA,EACD,OACJ,MAAMC,EAAc,CAAA,EAChBz2C,EAAagK,GACbgjC,GAAyB,IAAKrvC,EAAe84C,EAAa5kC,KAAKk6B,iBAGnE,IAAA,IAAS/yC,EAAI,EAAGA,EAAI6zC,GAAc5zC,OAAQD,IACtCg0C,GAAyB,SAASH,GAAc7zC,KAAM2E,EAAe84C,EAAa5kC,KAAKk6B,iBACvFiB,GAAyB,OAAOH,GAAc7zC,KAAM2E,EAAe84C,EAAa5kC,KAAKk6B,iBAIzFpuC,EAAcnF,SAEd,IAAA,MAAW3B,KAAO4/C,EACd94C,EAAcuvC,eAAer2C,EAAK4/C,EAAY5/C,IAC1Cgb,KAAKk6B,kBACLl6B,KAAKk6B,gBAAgBl1C,GAAO4/C,EAAY5/C,IAKhD8G,EAAcytC,gBAClB,CACA,mBAAAz9B,CAAoBF,GAChB,IAAI3S,EAAIiE,EACR,IAAK8S,KAAK/T,UAAY+T,KAAKs8B,MACvB,OACJ,IAAKt8B,KAAKy9B,UACN,OAAOxC,GAEX,MAAM4J,EAAS,CACX3J,WAAY,IAEV7hC,EAAoB2G,KAAKy/B,uBAC/B,GAAIz/B,KAAKu8B,WAQL,OAPAv8B,KAAKu8B,YAAa,EAClBsI,EAAOvsC,QAAU,GACjBusC,EAAOC,cACHlzC,GAAmBgK,aAA6C,EAASA,EAAUkpC,gBAAkB,GACzGD,EAAO3wC,UAAYmF,EACbA,EAAkB2G,KAAK7R,aAAc,IACrC,OACC02C,EAEX,MAAMpL,EAAOz5B,KAAK6hC,UAClB,IAAK7hC,KAAK+0B,kBAAoB/0B,KAAK5X,SAAWqxC,EAAKpmC,OAAQ,CACvD,MAAM0xC,EAAc,CAAA,EAepB,OAdI/kC,KAAK5Q,QAAQrB,WACbg3C,EAAYzsC,aACsB,IAA9B0H,KAAK7R,aAAamK,QACZ0H,KAAK7R,aAAamK,QAClB,EACVysC,EAAYD,cACRlzC,GAAmBgK,aAA6C,EAASA,EAAUkpC,gBAAkB,IAEzG9kC,KAAKw9B,eAAiB/jC,GAAauG,KAAK7R,gBACxC42C,EAAY7wC,UAAYmF,EAClBA,EAAkB,CAAA,EAAI,IACtB,OACN2G,KAAKw9B,cAAe,GAEjBuH,CACX,CACA,MAAMC,EAAiBvL,EAAKS,iBAAmBT,EAAKtrC,aACpD6R,KAAKqkC,0BACLQ,EAAO3wC,UIrwCnB,SAAkCzP,EAAOqwC,EAAWmQ,GAChD,IAAI/wC,EAAY,GAOhB,MAAMgxC,EAAazgD,EAAMwT,EAAEi1B,UAAY4H,EAAU78B,EAC3CktC,EAAa1gD,EAAMyT,EAAEg1B,UAAY4H,EAAU58B,EAC3CktC,GAAcH,aAAyD,EAASA,EAAgB9sC,IAAM,EAW5G,IAVI+sC,GAAcC,GAAcC,KAC5BlxC,EAAY,eAAegxC,QAAiBC,QAAiBC,SAM7C,IAAhBtQ,EAAU78B,GAA2B,IAAhB68B,EAAU58B,IAC/BhE,GAAa,SAAS,EAAI4gC,EAAU78B,MAAM,EAAI68B,EAAU58B,OAExD+sC,EAAiB,CACjB,MAAM5sC,qBAAEA,EAAAlB,OAAsBA,EAAAC,QAAQA,UAASC,EAAAM,MAASA,EAAAC,MAAOA,GAAUqtC,EACrE5sC,IACAnE,EAAY,eAAemE,QAA2BnE,KACtDiD,IACAjD,GAAa,UAAUiD,UACvBC,IACAlD,GAAa,WAAWkD,UACxBC,IACAnD,GAAa,WAAWmD,UACxBM,IACAzD,GAAa,SAASyD,UACtBC,IACA1D,GAAa,SAAS0D,SAC9B,CAKA,MAAMytC,EAAgB5gD,EAAMwT,EAAEzD,MAAQsgC,EAAU78B,EAC1CqtC,EAAgB7gD,EAAMyT,EAAE1D,MAAQsgC,EAAU58B,EAIhD,OAHsB,IAAlBmtC,GAAyC,IAAlBC,IACvBpxC,GAAa,SAASmxC,MAAkBC,MAErCpxC,GAAa,MACxB,CJutC+BqxC,CAAyBvlC,KAAKgjC,6BAA8BhjC,KAAK80B,UAAWkQ,GAC3F3rC,IACAwrC,EAAO3wC,UAAYmF,EAAkB2rC,EAAgBH,EAAO3wC,YAEhE,MAAM+D,EAAEA,EAAAC,EAAGA,GAAM8H,KAAK+0B,gBACtB8P,EAAOrrC,gBAAkB,GAAc,IAAXvB,EAAEoC,WAA4B,IAAXnC,EAAEmC,YAC7Co/B,EAAKS,gBAKL2K,EAAOvsC,QACHmhC,IAASz5B,KACiG,QAAnG9S,EAAuC,QAAjCjE,EAAK+7C,EAAe1sC,eAA4B,IAAPrP,EAAgBA,EAAK+W,KAAK7R,aAAamK,eAA4B,IAAPpL,EAAgBA,EAAK,EACjI8S,KAAKg6B,gBACDh6B,KAAK7R,aAAamK,QAClB0sC,EAAenB,YAO7BgB,EAAOvsC,QACHmhC,IAASz5B,UACwB,IAA3BglC,EAAe1sC,QACX0sC,EAAe1sC,QACf,QAC2B,IAA/B0sC,EAAenB,YACXmB,EAAenB,YACf,EAKlB,IAAA,MAAW7+C,KAAOoX,GAAiB,CAC/B,QAA4B,IAAxB4oC,EAAehgD,GACf,SACJ,MAAM4vC,QAAEA,EAAAoC,QAASA,GAAY56B,GAAgBpX,GAOvCwgD,EAAiC,SAArBX,EAAO3wC,UACnB8wC,EAAehgD,GACf4vC,EAAQoQ,EAAehgD,GAAMy0C,GACnC,GAAIzC,EAAS,CACT,MAAMyO,EAAMzO,EAAQ5vC,OACpB,IAAA,IAASD,EAAI,EAAGA,EAAIs+C,EAAKt+C,IACrB09C,EAAO7N,EAAQ7vC,IAAMq+C,CAE7B,MAEIX,EAAO7/C,GAAOwgD,CAEtB,CAYA,OANIxlC,KAAK5Q,QAAQrB,WACb82C,EAAOC,cACHrL,IAASz5B,KACHpO,GAAmBgK,aAA6C,EAASA,EAAUkpC,gBAAkB,GACrG,QAEPD,CACX,CACA,aAAA5E,GACIjgC,KAAK+5B,WAAa/5B,KAAKi6B,cAAW,CACtC,CAEA,SAAAyL,GACI1lC,KAAKuc,KAAK0gB,MAAM72C,QAASojC,IAAW,IAAIvgC,EAAI,OAAwC,QAAhCA,EAAKugC,EAAK+M,wBAAqC,IAAPttC,OAAgB,EAASA,EAAGgX,SACxHD,KAAKuc,KAAK0gB,MAAM72C,QAAQy5C,IACxB7/B,KAAKuc,KAAKohB,YAAYt3C,OAC1B,EAER,CACA,SAASwtC,GAAarK,GAClBA,EAAKqK,cACT,CACA,SAASmM,GAAmBxW,GACxB,IAAIvgC,EACJ,MAAMgxC,GAAuC,QAA1BhxC,EAAKugC,EAAKuQ,kBAA+B,IAAP9wC,OAAgB,EAASA,EAAGgxC,WAAazQ,EAAKyQ,SACnG,GAAIzQ,EAAKgN,UACLhN,EAAKphC,QACL6xC,GACAzQ,EAAKuU,aAAa,aAAc,CAChC,MAAQ9M,UAAW7oC,EAAQ64C,YAAa0E,GAAmBnc,EAAKphC,QAC1DmG,cAAEA,GAAkBi7B,EAAKp6B,QACzB0yC,EAAW7H,EAASz8B,SAAWgsB,EAAKphC,OAAOoV,OAG3B,SAAlBjP,EACA6/B,GAAUrB,IACN,MAAM6Y,EAAe9D,EACf7H,EAASgH,YAAYlU,GACrBkN,EAAShJ,UAAUlE,GACnB3lC,EAAS0lC,GAAW8Y,GAC1BA,EAAa1+C,IAAMkB,EAAO2kC,GAAM7lC,IAChC0+C,EAAa3+C,IAAM2+C,EAAa1+C,IAAME,IAGrCk9C,GAA0B/1C,EAAe0rC,EAAShJ,UAAW7oC,IAClEgmC,GAAUrB,IACN,MAAM6Y,EAAe9D,EACf7H,EAASgH,YAAYlU,GACrBkN,EAAShJ,UAAUlE,GACnB3lC,EAAS0lC,GAAW1kC,EAAO2kC,IACjC6Y,EAAa3+C,IAAM2+C,EAAa1+C,IAAME,EAIlCoiC,EAAKkV,iBAAmBlV,EAAK+M,mBAC7B/M,EAAKyS,mBAAoB,EACzBzS,EAAKkV,eAAe3R,GAAM9lC,IACtBuiC,EAAKkV,eAAe3R,GAAM7lC,IAAME,KAIhD,MAAMy+C,EtB33CM,CAChB5tC,EAPoB,CACpBi1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GAIb/0B,EARoB,CACpBg1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,IsB83CTE,GAAa0Y,EAAaz9C,EAAQ6xC,EAAShJ,WAC3C,MAAM6U,EtB73CM,CAChB7tC,EAPoB,CACpBi1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,GAIb/0B,EARoB,CACpBg1B,UAAW,EACX14B,MAAO,EACP6F,OAAQ,EACR4yB,YAAa,IsBg4CL6U,EACA3U,GAAa2Y,EAAatc,EAAK4X,eAAeuE,GAAgB,GAAO1L,EAASgH,aAG9E9T,GAAa2Y,EAAa19C,EAAQ6xC,EAAShJ,WAE/C,MAAMmD,GAAoB4E,GAAY6M,GACtC,IAAItH,GAA2B,EAC/B,IAAK/U,EAAKuQ,WAAY,CAClB,MAAM4H,EAAiBnY,EAAKwY,6BAK5B,GAAIL,IAAmBA,EAAe5H,WAAY,CAC9C,MAAQE,SAAU8L,EAAgB39C,OAAQ49C,GAAiBrE,EAC3D,GAAIoE,GAAkBC,EAAc,CAChC,MAAMC,EtB14CR,CACdhuC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB44CrBsmC,GAAqB0Y,EAAkBhM,EAAShJ,UAAW8U,EAAe9U,WAC1E,MAAMkS,EtB54CR,CACdlrC,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,IsB84CrBsmC,GAAqB4V,EAAgB/6C,EAAQ49C,EAAa/U,WACrDkI,GAAiB8M,EAAkB9C,KACpC5E,GAA2B,GAE3BoD,EAAevyC,QAAQlB,aACvBs7B,EAAKkV,eAAiByE,EACtB3Z,EAAKyY,qBAAuBgE,EAC5Bzc,EAAKmY,eAAiBA,EAE9B,CACJ,CACJ,CACAnY,EAAKqU,gBAAgB,YAAa,CAC9Bz1C,OAAAA,EACA6xC,WACAx1C,MAAOqhD,EACPD,cACAzR,mBACAmK,4BAER,MAAA,GACS/U,EAAKgN,SAAU,CACpB,MAAMzM,eAAEA,GAAmBP,EAAKp6B,QAChC26B,GAAkBA,GACtB,CAMAP,EAAKp6B,QAAQgE,gBAAa,CAC9B,CACA,SAAS8pC,GAAoB1T,GAIrBsR,IACAJ,GAAQC,aAEPnR,EAAKr8B,SAQLq8B,EAAK2Y,iBACN3Y,EAAKyS,kBAAoBzS,EAAKr8B,OAAO8uC,mBAOzCzS,EAAK0S,0BAA4B1S,EAAK0S,wBAA0B3xC,QAAQi/B,EAAKyS,mBACzEzS,EAAKr8B,OAAO8uC,mBACZzS,EAAKr8B,OAAO+uC,0BAChB1S,EAAK2S,mBAAqB3S,EAAK2S,iBAAmB3S,EAAKr8B,OAAOgvC,kBAClE,CACA,SAASkB,GAAgB7T,GACrBA,EAAKyS,kBACDzS,EAAK0S,wBACD1S,EAAK2S,kBACD,CAChB,CACA,SAAS8D,GAAczW,GACnBA,EAAKyW,eACT,CACA,SAASJ,GAAkBrW,GACvBA,EAAKqW,mBACT,CACA,SAASC,GAAmBtW,GACxBA,EAAK4Q,eAAgB,CACzB,CACA,SAAS2F,GAAoBvW,GACzB,MAAM19B,cAAEA,GAAkB09B,EAAKp6B,QAC3BtD,GAAiBA,EAAc4T,WAAWwmC,uBAC1Cp6C,EAAc0c,OAAO,uBAEzBghB,EAAKsS,gBACT,CACA,SAASuC,GAAgB7U,GACrBA,EAAK6U,kBACL7U,EAAKiY,YAAcjY,EAAKkV,eAAiBlV,EAAKn2B,YAAS,EACvDm2B,EAAKyS,mBAAoB,CAC7B,CACA,SAASkB,GAAmB3T,GACxBA,EAAK2T,oBACT,CACA,SAASC,GAAe5T,GACpBA,EAAK4T,gBACT,CACA,SAASoC,GAAqBhW,GAC1BA,EAAKgW,sBACT,CACA,SAASU,GAAoB/J,GACzBA,EAAMsE,oBACV,CACA,SAASiJ,GAAa5zB,EAAQrrB,EAAO/B,GACjCotB,EAAOod,UAAYhV,GAAUzzB,EAAMyoC,UAAW,EAAGxqC,GACjDotB,EAAOtb,MAAQ0jB,GAAUzzB,EAAM+P,MAAO,EAAG9R,GACzCotB,EAAOzV,OAAS5V,EAAM4V,OACtByV,EAAOmd,YAAcxoC,EAAMwoC,WAC/B,CACA,SAAS0W,GAAQ7zB,EAAQrsB,EAAMC,EAAIhB,GAC/BotB,EAAO5oB,IAAMgxB,GAAUz0B,EAAKyD,IAAKxD,EAAGwD,IAAKxE,GACzCotB,EAAO7oB,IAAMixB,GAAUz0B,EAAKwD,IAAKvD,EAAGuD,IAAKvE,EAC7C,CAKA,SAAS6gD,GAAoB/Z,GACzB,OAAQA,EAAK0Q,sBAAwD,IAArC1Q,EAAK0Q,gBAAgB2J,WACzD,CACA,MAAMjF,GAA0B,CAC5Bz9B,SAAU,IACV0C,KAAM,CAAC,GAAK,EAAG,GAAK,IAElBsiC,GAAqBC,GAAgC,oBAAdC,WACzCA,UAAUC,WACVD,UAAUC,UAAU75C,cAAcsE,SAASq1C,GAMzCG,GAAaJ,GAAkB,kBAAoBA,GAAkB,WACrEn/C,KAAK2R,MACLzV,EACN,SAAS89C,GAAUjU,GAEfA,EAAK7lC,IAAMq/C,GAAWxZ,EAAK7lC,KAC3B6lC,EAAK9lC,IAAMs/C,GAAWxZ,EAAK9lC,IAC/B,CAKA,SAASq9C,GAA0B/1C,EAAe0rC,EAAU7xC,GACxD,MAA0B,aAAlBmG,GACe,oBAAlBA,IxB3hDO5K,EwB4hDIy1C,GAAYa,GxB5hDT5mC,EwB4hDoB+lC,GAAYhxC,GxB5hDxBo+C,EwB4hDiC,KxB3hDrDx/C,KAAKylB,IAAI9oB,EAAQ0P,IAAWmzC,IADvC,IAAgB7iD,EAAO0P,EAAQmzC,CwB6hD/B,CACA,SAAStF,GAAuB1X,GAC5B,IAAIvgC,EACJ,OAAOugC,IAASA,EAAKjN,OAAgC,QAAtBtzB,EAAKugC,EAAKmJ,cAA2B,IAAP1pC,OAAgB,EAASA,EAAGu3C,QAC7F,CKziDA,MAAMiG,GAAyBj4C,GAAqB,CAChDktC,qBAAsB,CAACnwC,EAAKid,IAAW4hB,GAAY7+B,EAAK,SAAUid,GAClEozB,cAAe,KAAA,CACX3jC,EAAG8K,SAAS2jC,gBAAgBC,YAAc5jC,SAAS6jC,KAAKD,WACxDzuC,EAAG6K,SAAS2jC,gBAAgBG,WAAa9jC,SAAS6jC,KAAKC,YAE3DhL,kBAAmB,KAAM,ICNvBpJ,GAAqB,CACvBpmC,aAAS,GAEPy6C,GAAqBt4C,GAAqB,CAC5CotC,cAAgB3vC,IAAA,CACZgM,EAAGhM,EAAS06C,WACZzuC,EAAGjM,EAAS46C,YAEhBlL,cAAe,KACX,IAAKlJ,GAAmBpmC,QAAS,CAC7B,MAAM06C,EAAe,IAAIN,GAAuB,IAChDM,EAAa56C,MAAMrJ,QACnBikD,EAAa14C,WAAW,CAAEJ,cAAc,IACxCwkC,GAAmBpmC,QAAU06C,CACjC,CACA,OAAOtU,GAAmBpmC,SAE9ByvC,eAAgB,CAAC7vC,EAAUtI,KACvBsI,EAASqN,MAAMpF,eAAsB,IAAVvQ,EAAsBA,EAAQ,QAE7Dk4C,kBAAoB5vC,GAAa1B,QAAuD,UAA/CzH,OAAO6xB,iBAAiB1oB,GAAU+6C,YClBzEl/C,GAAO,CACTI,IAAK,CACDqhC,QpBKR,cAAyBA,GACrB,WAAAzpB,GACIqV,SAAS0U,WACT7pB,KAAKinC,0BAA4B/jD,CACrC,CACA,aAAAgkD,CAAcC,GACVnnC,KAAKonC,QAAU,IAAIzc,GAAWwc,EAAkBnnC,KAAKqnC,oBAAqB,CACtE5kD,mBAAoBud,KAAKwpB,KAAKiI,wBAC9B5G,cAAe8E,GAAiB3vB,KAAKwpB,OAE7C,CACA,iBAAA6d,GACI,MAAMC,kBAAEA,aAAmBC,EAAAC,MAAYA,EAAAC,SAAOA,GAAaznC,KAAKwpB,KAAK9pB,WACrE,MAAO,CACH2sB,eAAgBgI,GAAaiT,GAC7B5b,QAAS2I,GAAakT,GACtB5b,OAAQ6b,EACRxb,MAAO,CAAC3mB,EAAO6lB,YACJlrB,KAAKonC,QACRK,GACApgD,EAAMT,WAAW,IAAM6gD,EAASpiC,EAAO6lB,KAIvD,CACA,KAAA/+B,GACI6T,KAAKinC,0BAA4Bxc,GAAgBzqB,KAAKwpB,KAAKn9B,QAAS,cAAgBgZ,GAAUrF,KAAKknC,cAAc7hC,GACrH,CACA,MAAA5e,GACIuZ,KAAKonC,SAAWpnC,KAAKonC,QAAQ7a,eAAevsB,KAAKqnC,oBACrD,CACA,OAAAj7C,GACI4T,KAAKinC,4BACLjnC,KAAKonC,SAAWpnC,KAAKonC,QAAQrb,KACjC,IoBrCAjkC,KAAM,CACFyhC,QCNR,cAA0BA,GACtB,WAAAzpB,CAAY0pB,GACRrU,MAAMqU,GACNxpB,KAAK0nC,oBAAsBxkD,EAC3B8c,KAAKssB,gBAAkBppC,EACvB8c,KAAKqB,SAAW,IAAI2uB,GAA0BxG,EAClD,CACA,KAAAr9B,GAGI,MAAMw7C,aAAEA,GAAiB3nC,KAAKwpB,KAAK9pB,WAC/BioC,IACA3nC,KAAK0nC,oBAAsBC,EAAahe,UAAU3pB,KAAKqB,WAE3DrB,KAAKssB,gBAAkBtsB,KAAKqB,SAASyyB,gBAAkB5wC,CAC3D,CACA,OAAAkJ,GACI4T,KAAK0nC,sBACL1nC,KAAKssB,iBACT,GDZIt8B,eAAgB82C,GAChBn3C,mBEPR,SAASi4C,GAAiBpe,EAAMnkB,EAAOwiC,GACnC,MAAMt/C,MAAEA,GAAUihC,EACdA,EAAKv6B,gBAAkB1G,EAAM6gC,YAC7BI,EAAKv6B,eAAe65B,UAAU,aAA4B,UAAd+e,GAEhD,MACMvkD,EAAWiF,EADE,UAAYs/C,GAE3BvkD,GACA+D,EAAMT,WAAW,IAAMtD,EAAS+hB,EAAOglB,GAAiBhlB,IAEhE,CCVA,SAASyiC,GAAiBte,EAAMnkB,EAAOwiC,GACnC,MAAMt/C,MAAEA,GAAUihC,EACdA,EAAKv6B,gBAAkB1G,EAAM+V,UAC7BkrB,EAAKv6B,eAAe65B,UAAU,WAA0B,UAAd+e,GAE9C,MACMvkD,EAAWiF,EADE,SAAyB,QAAds/C,EAAsB,GAAKA,IAErDvkD,GACA+D,EAAMT,WAAW,IAAMtD,EAAS+hB,EAAOglB,GAAiBhlB,IAEhE,CCVA,MAAM0iC,OAAwBhY,QAMxBiY,OAAgBjY,QAChBkY,GAAwBC,IAC1B,MAAM5kD,EAAWykD,GAAkBv+C,IAAI0+C,EAAM70C,QAC7C/P,GAAYA,EAAS4kD,IAEnBC,GAA4BC,IAC9BA,EAAQhiD,QAAQ6hD,KAqBpB,SAASI,GAAoB1sC,EAASvM,EAAS9L,GAC3C,MAAMglD,EApBV,UAAkC/rB,KAAEA,KAASntB,IACzC,MAAMm5C,EAAahsB,GAAQxZ,SAItBilC,GAAUviD,IAAI8iD,IACfP,GAAUt+C,IAAI6+C,EAAY,IAE9B,MAAMC,EAAgBR,GAAUx+C,IAAI++C,GAC9BvjD,EAAMyjD,KAAKC,UAAUt5C,GAQ3B,OAHKo5C,EAAcxjD,KACfwjD,EAAcxjD,GAAO,IAAI2jD,qBAAqBR,GAA0B,CAAE5rB,UAASntB,KAEhFo5C,EAAcxjD,EACzB,CAEsC4jD,CAAyBx5C,GAG3D,OAFA24C,GAAkBr+C,IAAIiS,EAASrY,GAC/BglD,EAA0BO,QAAQltC,GAC3B,KACHosC,GAAkB9hD,OAAO0V,GACzB2sC,EAA0BQ,UAAUntC,GAE5C,CC3CA,MAAMotC,GAAiB,CACnBvgD,KAAM,EACN8X,IAAK,GCAT,MAAM0oC,GAAoB,CACtB7gD,OAAQ,CACJohC,QDAR,cAA4BA,GACxB,WAAAzpB,GACIqV,SAAS0U,WACT7pB,KAAKipC,gBAAiB,EACtBjpC,KAAKkpC,UAAW,CACpB,CACA,aAAAC,GACInpC,KAAK5T,UACL,MAAMg9C,SAAEA,EAAW,CAAA,GAAOppC,KAAKwpB,KAAK9pB,YAC9B6c,KAAEA,EAAM5lB,OAAQ0yC,SAAYC,EAAS,OAAAC,KAAQA,GAASH,EACtDh6C,EAAU,CACZmtB,KAAMA,EAAOA,EAAKlwB,aAAU,EAC5Bg9C,aACAG,UAA6B,iBAAXF,EAAsBA,EAASP,GAAeO,IA+BpE,OAAOjB,GAAoBroC,KAAKwpB,KAAKn9B,QAAS+C,EA7BhB84C,IAC1B,MAAMuB,eAAEA,GAAmBvB,EAI3B,GAAIloC,KAAKkpC,WAAaO,EAClB,OAMJ,GALAzpC,KAAKkpC,SAAWO,EAKZF,IAASE,GAAkBzpC,KAAKipC,eAChC,OAEKQ,IACLzpC,KAAKipC,gBAAiB,GAEtBjpC,KAAKwpB,KAAKv6B,gBACV+Q,KAAKwpB,KAAKv6B,eAAe65B,UAAU,cAAe2gB,GAMtD,MAAMC,gBAAEA,EAAAC,gBAAiBA,GAAoB3pC,KAAKwpB,KAAK9pB,WACjDpc,EAAWmmD,EAAiBC,EAAkBC,EACpDrmD,GAAYA,EAAS4kD,IAG7B,CACA,KAAA/7C,GACI6T,KAAKmpC,eACT,CACA,MAAA1iD,GACI,GAAoC,oBAAzBkiD,qBACP,OACJ,MAAMpgD,MAAEA,EAAA+T,UAAOA,GAAc0D,KAAKwpB,KACR,CAAC,SAAU,SAAU,QAAQhhC,KAO/D,UAAkC4gD,SAAEA,EAAW,KAAQA,SAAUQ,EAAe,IAAO,IACnF,OAAQnhD,GAAS2gD,EAAS3gD,KAAUmhD,EAAanhD,EACrD,CAToEohD,CAAyBthD,EAAO+T,KAExF0D,KAAKmpC,eAEb,CACA,OAAA/8C,GAAY,ICxDZnE,IAAK,CACDshC,QHMR,cAA2BA,GACvB,KAAAp9B,GACI,MAAME,QAAEA,GAAY2T,KAAKwpB,KACpBn9B,IAEL2T,KAAK5T,QAAUga,GAAM/Z,EAAUoa,IAC3BqhC,GAAiB9nC,KAAKwpB,KAAM/iB,EAAY,SACjC,CAACI,GAAYC,aAAcghC,GAAiB9nC,KAAKwpB,KAAM3iB,EAAUC,EAAU,MAAQ,WAC3F,CAAEK,gBAAiBnH,KAAKwpB,KAAKjhC,MAAMuhD,kBAC1C,CACA,OAAA19C,GAAY,IGdZrE,MAAO,CACHwhC,QCTR,cAA2BA,GACvB,WAAAzpB,GACIqV,SAAS0U,WACT7pB,KAAK4nB,UAAW,CACpB,CACA,OAAAmiB,GACI,IAAIC,GAAiB,EAOrB,IACIA,EAAiBhqC,KAAKwpB,KAAKn9B,QAAQ49C,QAAQ,iBAC/C,OACO9sC,GACH6sC,GAAiB,CACrB,CACKA,GAAmBhqC,KAAKwpB,KAAKv6B,iBAElC+Q,KAAKwpB,KAAKv6B,eAAe65B,UAAU,cAAc,GACjD9oB,KAAK4nB,UAAW,EACpB,CACA,MAAAsiB,GACSlqC,KAAK4nB,UAAa5nB,KAAKwpB,KAAKv6B,iBAEjC+Q,KAAKwpB,KAAKv6B,eAAe65B,UAAU,cAAc,GACjD9oB,KAAK4nB,UAAW,EACpB,CACA,KAAAz7B,GACI6T,KAAK5T,QAAU+sB,GAAKiR,GAAYpqB,KAAKwpB,KAAKn9B,QAAS,QAAS,IAAM2T,KAAK+pC,WAAY3f,GAAYpqB,KAAKwpB,KAAKn9B,QAAS,OAAQ,IAAM2T,KAAKkqC,UACzI,CACA,OAAA99C,GAAY,IDtBZpE,MAAO,CACHuhC,QJAR,cAA2BA,GACvB,KAAAp9B,GACI,MAAME,QAAEA,GAAY2T,KAAKwpB,KACpBn9B,IAEL2T,KAAK5T,QjIAb,SAAesY,EAAmBylC,EAAc/6C,EAAU,CAAA,GACtD,MAAOuV,EAAU2B,EAActgB,GAAUye,GAAaC,EAAmBtV,GACnEg7C,EAAiBhlC,GAAcilC,IACjC,MAAMh3C,OAAEA,GAAWg3C,EACbC,EAAaH,EAAaE,GAChC,GAA0B,mBAAfC,IAA8Bj3C,EACrC,OACJ,MAAMk3C,EAAiBnlC,GAAcolC,IACjCF,EAAWE,GACXn3C,EAAO0T,oBAAoB,eAAgBwjC,KAE/Cl3C,EAAOgU,iBAAiB,eAAgBkjC,EAAgBjkC,KAK5D,OAHA3B,EAASve,QAASuV,IACdA,EAAQ0L,iBAAiB,eAAgB+iC,EAAgB9jC,KAEtDtgB,CACX,CiIjBuBgC,CAAMqE,EAAUoa,IAC3BmhC,GAAiB5nC,KAAKwpB,KAAM/iB,EAAY,SAChCI,GAAa+gC,GAAiB5nC,KAAKwpB,KAAM3iB,EAAU,SAEnE,CACA,OAAAza,GAAY,KMvBVhE,GAAS,CACXA,OAAQ,CACJ4H,eAAgB82C,GAChBn3C,mBCLF86C,GAAuB,CAAEp+C,QAAS,MAClCq+C,GAA2B,CAAEr+C,SAAS,GCM5C,MAAMs+C,GAAa,IAAI51B,GAAqBhG,GAAOiB,ICR7C46B,OAAyB7a,QCsB/B,MAAM8a,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAMJ,MAAMC,GAQF,2BAAA34C,CAA4B44C,EAAQC,EAAYC,GAC5C,MAAO,CAAA,CACX,CACA,WAAAnrC,EAAY3S,OAAEA,EAAA5E,MAAQA,EAAA8E,gBAAOA,EAAAC,oBAAiBA,EAAAI,sBAAqBA,EAAA7B,YAAuBA,GAAgBuD,EAAU,IAKhH4Q,KAAK3T,QAAU,KAIf2T,KAAK5P,aAAelL,IAIpB8a,KAAK1V,eAAgB,EACrB0V,KAAK5V,uBAAwB,EAQ7B4V,KAAK0lB,mBAAqB,KAM1B1lB,KAAK7O,WAAa7H,IAClB0W,KAAKsT,iBAAmBA,GAIxBtT,KAAK1P,SAAW,CAAA,EAKhB0P,KAAKkrC,uBAAyB5hD,IAM9B0W,KAAKmrC,iBAAmB,CAAA,EAIxBnrC,KAAKgJ,OAAS,CAAA,EAMdhJ,KAAKorC,uBAAyB,CAAA,EAC9BprC,KAAKqrC,aAAe,IAAMrrC,KAAKwI,OAAO,SAAUxI,KAAK7R,cACrD6R,KAAKrZ,OAAS,KACLqZ,KAAK3T,UAEV2T,KAAKsrC,eACLtrC,KAAKurC,eAAevrC,KAAK3T,QAAS2T,KAAKzN,YAAayN,KAAKzX,MAAM+Q,MAAO0G,KAAKpS,cAE/EoS,KAAKwrC,kBAAoB,EACzBxrC,KAAKu5B,eAAiB,KAClB,MAAMxyC,EAAMia,GAAKja,MACbiZ,KAAKwrC,kBAAoBzkD,IACzBiZ,KAAKwrC,kBAAoBzkD,EACzBM,EAAMV,OAAOqZ,KAAKrZ,QAAQ,GAAO,KAGzC,MAAMwH,aAAEA,EAAAoE,YAAcA,EAAAF,SAAaA,GAAaxG,EAChDmU,KAAK3N,SAAWA,EAChB2N,KAAK7R,aAAeA,EACpB6R,KAAKyrC,WAAa,IAAKt9C,GACvB6R,KAAK0rC,cAAgBnjD,EAAMmC,QAAU,IAAKyD,GAAiB,CAAA,EAC3D6R,KAAKzN,YAAcA,EACnByN,KAAK7S,OAASA,EACd6S,KAAKzX,MAAQA,EACbyX,KAAK3S,gBAAkBA,EACvB2S,KAAKsU,MAAQnnB,EAASA,EAAOmnB,MAAQ,EAAI,EACzCtU,KAAK1S,oBAAsBA,EAC3B0S,KAAK5Q,QAAUA,EACf4Q,KAAKtS,sBAAwBnD,QAAQmD,GACrCsS,KAAK5V,sBAAwBA,EAAsB7B,GACnDyX,KAAK1V,cAAgBA,EAAc/B,GAC/ByX,KAAK1V,gBACL0V,KAAKgmB,oBAAsB9gC,KAE/B8a,KAAK8nB,uBAAyBv9B,QAAQ4C,GAAUA,EAAOd,SAWvD,MAAMmf,WAAEA,KAAemgC,GAAwB3rC,KAAK7N,4BAA4B5J,EAAO,CAAA,EAAIyX,MAC3F,IAAA,MAAWhb,KAAO2mD,EAAqB,CACnC,MAAMhoD,EAAQgoD,EAAoB3mD,QACR,IAAtBmJ,EAAanJ,IAAsB2M,GAAchO,IACjDA,EAAM+F,IAAIyE,EAAanJ,IAAM,EAErC,CACJ,CACA,KAAAmH,CAAMF,GACF+T,KAAK3T,QAAUJ,EACf2+C,GAAmBlhD,IAAIuC,EAAU+T,MAC7BA,KAAKpS,aAAeoS,KAAKpS,WAAW3B,UACpC+T,KAAKpS,WAAWzB,MAAMF,GAEtB+T,KAAK7S,QAAU6S,KAAK1V,gBAAkB0V,KAAK5V,wBAC3C4V,KAAK4rC,sBAAwB5rC,KAAK7S,OAAO0+C,gBAAgB7rC,OAE7DA,KAAK7O,OAAO/K,QAAQ,CAACzC,EAAOqB,IAAQgb,KAAK8rC,kBAAkB9mD,EAAKrB,IAC3D+mD,GAAyBr+C,SChKtC,WAEI,GADAq+C,GAAyBr+C,SAAU,EAC9BxJ,EAEL,GAAIC,OAAOipD,WAAY,CACnB,MAAMC,EAAmBlpD,OAAOipD,WAAW,4BACrCE,EAA8B,IAAOxB,GAAqBp+C,QAAU2/C,EAAiB/B,QAC3F+B,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIxB,GAAqBp+C,SAAU,CAEvC,CDoJY8/C,GAEJnsC,KAAK0lB,mBAC4B,UAA7B1lB,KAAK1S,sBAE8B,WAA7B0S,KAAK1S,qBAEDm9C,GAAqBp+C,SAI/B2T,KAAK7S,QACL6S,KAAK7S,OAAOiD,SAASrK,IAAIia,MAC7BA,KAAKvZ,OAAOuZ,KAAKzX,MAAOyX,KAAK3S,gBACjC,CACA,OAAAjB,GACIw+C,GAAmB3kD,OAAO+Z,KAAK3T,SAC/B2T,KAAKpS,YAAcoS,KAAKpS,WAAWxB,UACnC9E,EAAY0Y,KAAKqrC,cACjB/jD,EAAY0Y,KAAKrZ,QACjBqZ,KAAKkrC,mBAAmB9kD,QAASwwC,GAAWA,KAC5C52B,KAAKkrC,mBAAmB7kD,QACxB2Z,KAAK4rC,uBAAyB5rC,KAAK4rC,wBACnC5rC,KAAK7S,QAAU6S,KAAK7S,OAAOiD,SAASnK,OAAO+Z,MAC3C,IAAA,MAAWhb,KAAOgb,KAAKgJ,OACnBhJ,KAAKgJ,OAAOhkB,GAAKqB,QAErB,IAAA,MAAWrB,KAAOgb,KAAK1P,SAAU,CAC7B,MAAM87C,EAAUpsC,KAAK1P,SAAStL,GAC1BonD,IACAA,EAAQhgD,UACRggD,EAAQ39C,WAAY,EAE5B,CACAuR,KAAK3T,QAAU,IACnB,CACA,iBAAAy/C,CAAkB9mD,EAAKrB,GACfqc,KAAKkrC,mBAAmBzlD,IAAIT,IAC5Bgb,KAAKkrC,mBAAmB1hD,IAAIxE,EAA5Bgb,GAEJ,MAAMqsC,EAAmB74C,GAAe/N,IAAIT,GACtCsnD,EAAiB3oD,EAAMomB,GAAG,SAAWwiC,IACvCvsC,KAAK7R,aAAanJ,GAAOunD,EACzBvsC,KAAKzX,MAAM8J,UAAYhL,EAAMX,UAAUsZ,KAAKqrC,cACxCgB,GAAoBrsC,KAAKpS,aACzBoS,KAAKpS,WAAWuuC,kBAAmB,KAGrCqQ,EAAwB7oD,EAAMomB,GAAG,gBAAiB/J,KAAKu5B,gBAC7D,IAAIkT,EACA3pD,OAAO4pD,wBACPD,EAAkB3pD,OAAO4pD,sBAAsB1sC,KAAMhb,EAAKrB,IAE9Dqc,KAAKkrC,mBAAmBxhD,IAAI1E,EAAK,KAC7BsnD,IACAE,IACIC,GACAA,IACA9oD,EAAM8lB,OACN9lB,EAAMsc,QAElB,CACA,gBAAAwmB,CAAiBkmB,GAIb,OAAK3sC,KAAK3T,SACL2T,KAAK4sC,0BACN5sC,KAAKnS,OAAS8+C,EAAM9+C,KAGjBmS,KAAK4sC,yBAAyB5sC,KAAK3T,QAASsgD,EAAMtgD,SAF9C,CAGf,CACA,cAAA2C,GACI,IAAIhK,EAAM,YACV,IAAKA,KAAOqD,EAAoB,CAC5B,MAAMwkD,EAAoBxkD,EAAmBrD,GAC7C,IAAK6nD,EACD,SACJ,MAAMvkD,UAAEA,EAAWihC,QAASujB,GAAuBD,EAYnD,IARK7sC,KAAK1P,SAAStL,IACf8nD,GACAxkD,EAAU0X,KAAKzX,SACfyX,KAAK1P,SAAStL,GAAO,IAAI8nD,EAAmB9sC,OAK5CA,KAAK1P,SAAStL,GAAM,CACpB,MAAMonD,EAAUpsC,KAAK1P,SAAStL,GAC1BonD,EAAQ39C,UACR29C,EAAQ3lD,UAGR2lD,EAAQjgD,QACRigD,EAAQ39C,WAAY,EAE5B,CACJ,CACJ,CACA,YAAA68C,GACItrC,KAAK+sC,MAAM/sC,KAAKzN,YAAayN,KAAK7R,aAAc6R,KAAKzX,MACzD,CAMA,kBAAAutB,GACI,OAAO9V,KAAK3T,QACN2T,KAAKgtC,2BAA2BhtC,KAAK3T,QAAS2T,KAAKzX,OzC1Q/C,CACd0P,EAFe,CAAS/Q,IAAK,EAAGD,IAAK,GAGrCiR,EAHe,CAAShR,IAAK,EAAGD,IAAK,GyC6QrC,CACA,cAAAgmD,CAAejoD,GACX,OAAOgb,KAAK7R,aAAanJ,EAC7B,CACA,cAAAq2C,CAAer2C,EAAKrB,GAChBqc,KAAK7R,aAAanJ,GAAOrB,CAC7B,CAKA,MAAA8C,CAAO8B,EAAO8E,IACN9E,EAAM8Q,mBAAqB2G,KAAKzX,MAAM8Q,oBACtC2G,KAAKu5B,iBAETv5B,KAAK1D,UAAY0D,KAAKzX,MACtByX,KAAKzX,MAAQA,EACbyX,KAAKiqB,oBAAsBjqB,KAAK3S,gBAChC2S,KAAK3S,gBAAkBA,EAIvB,IAAA,IAASlG,EAAI,EAAGA,EAAI0jD,GAAkBzjD,OAAQD,IAAK,CAC/C,MAAMnC,EAAM6lD,GAAkB1jD,GAC1B6Y,KAAKorC,uBAAuBpmD,KAC5Bgb,KAAKorC,uBAAuBpmD,YACrBgb,KAAKorC,uBAAuBpmD,IAEvC,MACMkoD,EAAW3kD,EADK,KAAOvD,GAEzBkoD,IACAltC,KAAKorC,uBAAuBpmD,GAAOgb,KAAK+J,GAAG/kB,EAAKkoD,GAExD,CACAltC,KAAKmrC,iBErTb,SAAqCxvC,EAAS2D,EAAMC,GAChD,IAAA,MAAWva,KAAOsa,EAAM,CACpB,MAAM6tC,EAAY7tC,EAAKta,GACjBooD,EAAY7tC,EAAKva,GACvB,GAAI2M,GAAcw7C,GAKdxxC,EAAQ2P,SAAStmB,EAAKmoD,QAQ1B,GACSx7C,GAAcy7C,GAKnBzxC,EAAQ2P,SAAStmB,EAAKmmB,GAAYgiC,EAAW,CAAE1jC,MAAO9N,UAC1D,GACSyxC,IAAcD,EAMnB,GAAIxxC,EAAQ0P,SAASrmB,GAAM,CACvB,MAAMqoD,EAAgB1xC,EAAQa,SAASxX,IACP,IAA5BqoD,EAAc5wC,UACd4wC,EAAc7iC,KAAK2iC,GAEbE,EAAc7jC,aACpB6jC,EAAc3jD,IAAIyjD,EAE1B,KACK,CACD,MAAMZ,EAAc5wC,EAAQsxC,eAAejoD,GAC3C2W,EAAQ2P,SAAStmB,EAAKmmB,QAA4B,IAAhBohC,EAA4BA,EAAcY,EAAW,CAAE1jC,MAAO9N,IACpG,CAER,CAEA,IAAA,MAAW3W,KAAOua,OACI,IAAdD,EAAKta,IACL2W,EAAQ2xC,YAAYtoD,GAE5B,OAAOsa,CACX,CFiQgCiuC,CAA4BvtC,KAAMA,KAAK7N,4BAA4B5J,EAAOyX,KAAK1D,UAAW0D,MAAOA,KAAKmrC,kBAC1HnrC,KAAKwtC,wBACLxtC,KAAKwtC,yBAETxtC,KAAK3N,UAAY2N,KAAK3N,SAAS2N,KACnC,CACA,QAAAN,GACI,OAAOM,KAAKzX,KAChB,CAIA,UAAAklD,CAAWhlD,GACP,OAAOuX,KAAKzX,MAAMiC,SAAWwV,KAAKzX,MAAMiC,SAAS/B,QAAQ,CAC7D,CAIA,oBAAA07B,GACI,OAAOnkB,KAAKzX,MAAM6K,UACtB,CACA,qBAAAq+B,GACI,OAAOzxB,KAAKzX,MAAM9F,kBACtB,CACA,qBAAAirD,GACI,OAAO1tC,KAAK1V,cACN0V,KACAA,KAAK7S,OACD6S,KAAK7S,OAAOugD,6BACZ,CACd,CAIA,eAAA7B,CAAgBrmC,GACZ,MAAMmoC,EAAqB3tC,KAAK0tC,wBAChC,GAAIC,EAGA,OAFAA,EAAmB3nB,iBACf2nB,EAAmB3nB,gBAAgBjgC,IAAIyf,GACpC,IAAMmoC,EAAmB3nB,gBAAgB//B,OAAOuf,EAE/D,CAIA,QAAA8F,CAAStmB,EAAKrB,GAEV,MAAM0pD,EAAgBrtC,KAAK7O,OAAO3H,IAAIxE,GAClCrB,IAAU0pD,IACNA,GACArtC,KAAKstC,YAAYtoD,GACrBgb,KAAK8rC,kBAAkB9mD,EAAKrB,GAC5Bqc,KAAK7O,OAAOzH,IAAI1E,EAAKrB,GACrBqc,KAAK7R,aAAanJ,GAAOrB,EAAM6F,MAEvC,CAIA,WAAA8jD,CAAYtoD,GACRgb,KAAK7O,OAAOlL,OAAOjB,GACnB,MAAMilB,EAAcjK,KAAKkrC,mBAAmB1hD,IAAIxE,GAC5CilB,IACAA,IACAjK,KAAKkrC,mBAAmBjlD,OAAOjB,WAE5Bgb,KAAK7R,aAAanJ,GACzBgb,KAAK4tC,2BAA2B5oD,EAAKgb,KAAKzN,YAC9C,CAIA,QAAA8Y,CAASrmB,GACL,OAAOgb,KAAK7O,OAAO1L,IAAIT,EAC3B,CACA,QAAAwX,CAASxX,EAAKurB,GACV,GAAIvQ,KAAKzX,MAAM4I,QAAU6O,KAAKzX,MAAM4I,OAAOnM,GACvC,OAAOgb,KAAKzX,MAAM4I,OAAOnM,GAE7B,IAAIrB,EAAQqc,KAAK7O,OAAO3H,IAAIxE,GAK5B,YAJc,IAAVrB,QAAwC,IAAjB4sB,IACvB5sB,EAAQwnB,GAA6B,OAAjBoF,OAAwB,EAAYA,EAAc,CAAE9G,MAAOzJ,OAC/EA,KAAKsL,SAAStmB,EAAKrB,IAEhBA,CACX,CAMA,SAAAowB,CAAU/uB,EAAKqO,GACX,IAAIpK,EACJ,IAAItF,OAAmC,IAA3Bqc,KAAK7R,aAAanJ,IAAuBgb,KAAK3T,QAEI,QAAvDpD,EAAK+W,KAAK6tC,uBAAuB7tC,KAAKzX,MAAOvD,UAAyB,IAAPiE,EAAgBA,EAAK+W,KAAK8tC,sBAAsB9tC,KAAK3T,QAASrH,EAAKgb,KAAK5Q,SADxI4Q,KAAK7R,aAAanJ,GF3YV,IAAC6E,EEwZf,OAXIlG,UACqB,iBAAVA,IACNwwB,GAAkBxwB,IAAUwpB,GAAkBxpB,IAE/CA,EAAQ2Q,WAAW3Q,IFjZZkG,EEmZalG,GFnZPgnD,GAAW11B,KAAKH,GAAcjrB,KEmZbmmB,GAAQ/e,KAAKoC,KAC3C1P,EAAQssB,GAAkBjrB,EAAKqO,KAEnC2M,KAAK+tC,cAAc/oD,EAAK2M,GAAchO,GAASA,EAAM6F,MAAQ7F,IAE1DgO,GAAchO,GAASA,EAAM6F,MAAQ7F,CAChD,CAKA,aAAAoqD,CAAc/oD,EAAKrB,GACfqc,KAAKyrC,WAAWzmD,GAAOrB,CAC3B,CAKA,aAAAilC,CAAc5jC,GACV,IAAIiE,EACJ,MAAMyB,QAAEA,GAAYsV,KAAKzX,MACzB,IAAIylD,EACJ,GAAuB,iBAAZtjD,GAA2C,iBAAZA,EAAsB,CAC5D,MAAMm7B,EAAUx0B,EAAwB2O,KAAKzX,MAAOmC,EAAyC,QAA/BzB,EAAK+W,KAAK3S,uBAAoC,IAAPpE,OAAgB,EAASA,EAAGsI,QAC7Hs0B,IACAmoB,EAAmBnoB,EAAQ7gC,GAEnC,CAIA,GAAI0F,QAAgC,IAArBsjD,EACX,OAAOA,EAMX,MAAM36C,EAAS2M,KAAK6tC,uBAAuB7tC,KAAKzX,MAAOvD,GACvD,YAAe,IAAXqO,GAAyB1B,GAAc0B,QAMR,IAA5B2M,KAAK0rC,cAAc1mD,SACD,IAArBgpD,OACE,EACAhuC,KAAKyrC,WAAWzmD,GARXqO,CASf,CACA,EAAA0W,CAAGC,EAAW1mB,GAIV,OAHK0c,KAAKgJ,OAAOgB,KACbhK,KAAKgJ,OAAOgB,GAAa,IAAI1B,IAE1BtI,KAAKgJ,OAAOgB,GAAWjkB,IAAIzC,EACtC,CACA,MAAAklB,CAAOwB,KAAczgB,GACbyW,KAAKgJ,OAAOgB,IACZhK,KAAKgJ,OAAOgB,GAAWxB,UAAUjf,EAEzC,EGvdJ,MAAM0kD,WAAyBnD,GAC3B,WAAAhrC,GACIqV,SAAS0U,WACT7pB,KAAKsT,iBAAmB4B,EAC5B,CACA,wBAAA03B,CAAyBppC,EAAGC,GAMxB,OAAsC,EAA/BD,EAAE0qC,wBAAwBzqC,GAAS,GAAI,CAClD,CACA,sBAAAoqC,CAAuBtlD,EAAOvD,GAC1B,OAAOuD,EAAM+Q,MACP/Q,EAAM+Q,MAAMtU,QACZ,CACV,CACA,0BAAA4oD,CAA2B5oD,GAAKuU,KAAEA,EAAAD,MAAMA,WAC7BC,EAAKvU,UACLsU,EAAMtU,EACjB,CACA,sBAAAwoD,GACQxtC,KAAKmuC,oBACLnuC,KAAKmuC,2BACEnuC,KAAKmuC,mBAEhB,MAAM/9C,SAAEA,GAAa4P,KAAKzX,MACtBoJ,GAAcvB,KACd4P,KAAKmuC,kBAAoB/9C,EAAS2Z,GAAG,SAAWlP,IACxCmF,KAAK3T,UACL2T,KAAK3T,QAAQ+hD,YAAc,GAAGvzC,OAI9C,EC3BJ,MAAMwzC,WAA0BJ,GAC5B,WAAAnuC,GACIqV,SAAS0U,WACT7pB,KAAKnS,KAAO,OACZmS,KAAKurC,eAAiB7vC,EAC1B,CACA,qBAAAoyC,CAAsB7hD,EAAUjH,GAC5B,GAAIwO,GAAe/N,IAAIT,GAAM,CACzB,MAAMspD,EAAcj9B,GAAoBrsB,GACxC,OAAOspD,GAAcA,EAAYtlD,SAAe,CACpD,CACK,CACD,MAAMulD,GAfQ5yC,EAeyB1P,EAdxCnJ,OAAO6xB,iBAAiBhZ,IAejBhY,GAASgQ,GAAkB3O,GAC3BupD,EAAc35B,iBAAiB5vB,GAC/BupD,EAAcvpD,KAAS,EAC7B,MAAwB,iBAAVrB,EAAqBA,EAAMqQ,OAASrQ,CACtD,CApBR,IAA0BgY,CAqBtB,CACA,0BAAAqxC,CAA2B/gD,GAAUxJ,mBAAEA,IACnC,OAAOqzB,GAAmB7pB,EAAUxJ,EACxC,CACA,KAAAsqD,CAAMx6C,EAAapE,EAAc5F,GAC7B6Q,GAAgB7G,EAAapE,EAAc5F,EAAM8Q,kBACrD,CACA,2BAAAlH,CAA4B5J,EAAO+T,EAAWxQ,GAC1C,OAAOqG,GAA4B5J,EAAO+T,EAAWxQ,EACzD,EC5BJ,MAAM0iD,WAAyBP,GAC3B,WAAAnuC,GACIqV,SAAS0U,WACT7pB,KAAKnS,KAAO,MACZmS,KAAKlF,UAAW,EAChBkF,KAAKgtC,2BAA6B7e,EACtC,CACA,sBAAA0f,CAAuBtlD,EAAOvD,GAC1B,OAAOuD,EAAMvD,EACjB,CACA,qBAAA8oD,CAAsB7hD,EAAUjH,GAC5B,GAAIwO,GAAe/N,IAAIT,GAAM,CACzB,MAAMspD,EAAcj9B,GAAoBrsB,GACxC,OAAOspD,GAAcA,EAAYtlD,SAAe,CACpD,CAEA,OADAhE,EAAOgX,GAAoBvW,IAAIT,GAA0BA,EAAnBsH,EAAYtH,GAC3CiH,EAASsb,aAAaviB,EACjC,CACA,2BAAAmN,CAA4B5J,EAAO+T,EAAWxQ,GAC1C,OAAOqG,GAA4B5J,EAAO+T,EAAWxQ,EACzD,CACA,KAAAihD,CAAMx6C,EAAapE,EAAc5F,GAC7B+R,GAAc/H,EAAapE,EAAc6R,KAAKlF,SAAUvS,EAAM8Q,kBAClE,CACA,cAAAkyC,CAAet/C,EAAUsG,EAAaqJ,EAAWhO,GAC7CqO,GAAUhQ,EAAUsG,EAAaqJ,EAAWhO,EAChD,CACA,KAAAzB,CAAMF,GACF+T,KAAKlF,SAAWA,GAAS7O,EAASoR,SAClC8X,MAAMhpB,MAAMF,EAChB,ECpCJ,MCFMwiD,KCIsCrvC,GAA6B,IAClEW,MACAipC,MACAlhD,MACAM,IFNwB,CAAC2E,EAAWqC,IAChC0B,EAAe/D,GAChB,IAAIyhD,GAAiBp/C,GACrB,IAAIi/C,GAAkBj/C,EAAS,CAC7BC,gBAAiBtC,IAAckS,EAAAA","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241]}